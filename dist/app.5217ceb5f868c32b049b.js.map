{"version":3,"sources":["webpack:///app.5217ceb5f868c32b049b.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/util.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/accordion/accordion-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/alert/alert-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/carousel/carousel-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/pagination/pagination-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/popover/popover-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/rating/rating-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/tabset/tabset-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.js","webpack:///./node_modules/@angular/forms/esm5/forms.js","webpack:///./node_modules/@angular/animations/esm5/animations.js","webpack:///./src/app/service/password.service.ts","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/accordion/accordion.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/accordion/accordion.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/alert/alert.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/alert/alert.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/buttons/buttons.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/buttons/checkbox.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/buttons/radio.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/carousel/carousel.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/carousel/carousel.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/collapse/collapse.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/collapse/collapse.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-window.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-stack.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-ref.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/pagination/pagination.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/pagination/pagination.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/popover/popover.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/popover/popover.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/triggers.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/rating/rating.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/rating/rating.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/tabset/tabset.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/tabset/tabset.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/highlight.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/positioning.js","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./node_modules/@angular/platform-browser/esm5/animations.js","webpack:///./node_modules/@angular/animations/esm5/browser.js","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/style.css","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/index.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.js","webpack:///./src/environments/environment.ts","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/buttons/label.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-adapter.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/popup.js"],"names":["webpackJsonp","11","module","__webpack_exports__","__webpack_require__","toInteger","value","parseInt","toString","undefined","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","regExpEscape","text","replace","114","d","NgbAccordionConfig","__WEBPACK_IMPORTED_MODULE_0__angular_core__","this","closeOthers","decorators","type","ctorParameters","115","NgbAlertConfig","dismissible","116","NgbCarouselConfig","interval","wrap","keyboard","117","NgbDatepicker","__WEBPACK_IMPORTED_MODULE_1__angular_forms__","__WEBPACK_IMPORTED_MODULE_2__ngb_calendar__","__WEBPACK_IMPORTED_MODULE_3__ngb_date__","__WEBPACK_IMPORTED_MODULE_4__datepicker_service__","__WEBPACK_IMPORTED_MODULE_5__datepicker_keymap_service__","__WEBPACK_IMPORTED_MODULE_6__datepicker_view_model__","__WEBPACK_IMPORTED_MODULE_7__datepicker_config__","__WEBPACK_IMPORTED_MODULE_8__ngb_date_adapter__","__WEBPACK_IMPORTED_MODULE_9__datepicker_i18n__","__WEBPACK_IMPORTED_MODULE_10__datepicker_tools__","NGB_DATEPICKER_VALUE_ACCESSOR","provide","useExisting","Object","multi","_keyMapService","_service","_calendar","i18n","config","_cd","_elementRef","_ngbDateAdapter","_this","navigate","select","onChange","_","onTouched","forEach","input","_selectSubscription","select$","subscribe","date","emit","toStruct","_subscription","model$","model","newDate","firstDate","oldDate","newSelectedDate","selectedDate","oldSelectedDate","toModel","equals","current","year","month","next","markForCheck","prototype","focus","nativeElement","navigateTo","open","from","ngOnDestroy","unsubscribe","ngOnInit","startDate","ngOnChanges","changes","filter","onDateSelect","emitEvent","onKeyDown","event","processKey","onNavigateDateSelect","onNavigateEvent","PREV","getPrev","NEXT","getNext","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","showFocus","focusVisible","writeValue","fromModel","args","exportAs","selector","changeDetection","OnPush","host","tabindex","[attr.tabindex]","(blur)","(focus)","(keydown)","styles","template","providers","propDecorators","dayTemplate","displayMonths","firstDayOfWeek","markDisabled","maxDate","minDate","navigation","outsideDays","showWeekdays","showWeekNumbers","118","NgbDatepickerService","__WEBPACK_IMPORTED_MODULE_0__ngb_calendar__","__WEBPACK_IMPORTED_MODULE_1__ngb_date__","__WEBPACK_IMPORTED_MODULE_2__angular_core__","__WEBPACK_IMPORTED_MODULE_3__util_util__","__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__","__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__","n","__WEBPACK_IMPORTED_MODULE_6_rxjs_operator_filter__","_model$","_select$","_state","months","prevDisabled","nextDisabled","selectBoxes","years","defineProperty","get","call","asObservable","length","enumerable","configurable","set","_nextState","toValidDate","isValid","focusDate","focusMove","period","number","focusSelect","getToday","options","defaultValue","ngbDate","patch","newState","_updateState","_patchContexts","state","weeks","week","days","day","context","focused","selected","assign","before","after","lastDate","forceRebuild","yearChanged","monthChanged","119","NgbDatepickerConfig","120","NgbDateParserFormatter","NgbDateISOParserFormatter","__WEBPACK_IMPORTED_MODULE_0__util_util__","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","p","hasOwnProperty","__","constructor","create","_super","apply","arguments","parse","dateParts","trim","split","format","121","NgbDropdownConfig","autoClose","placement","122","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","123","NgbPopoverConfig","triggers","disablePopover","124","NgbProgressbarConfig","animated","striped","showValue","125","NgbRatingConfig","readonly","resettable","126","NgbTabsetConfig","justify","orientation","127","NgbTimepickerConfig","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","size","128","NgbTooltipConfig","disableTooltip","129","NgbTypeaheadWindow","__WEBPACK_IMPORTED_MODULE_1__util_util__","activeIdx","focusFirst","formatter","selectEvent","activeChangeEvent","hasActive","results","getActive","markActive","_activeChanged","prev","resetActive","item","id","class","role","[id]","term","resultTemplate","130","NgbTypeaheadConfig","editable","showHint","20","NgbDate","other","25","isEmptyInputValue","isPresent","o","toObservable","r","obs","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__","Error","_executeValidators","control","validators","map","v","_executeAsyncValidators","_mergeErrors","arrayOfErrors","res","reduce","errors","__WEBPACK_IMPORTED_MODULE_0_tslib__","keys","_isAndroid","test","__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__","getUserAgent","toLowerCase","normalizeValidator","validator","validate","c","normalizeAsyncValidator","unimplemented","_buildValueString","_extractId","valueString","_buildValueString$1","_extractId$1","controlPath","name","parent","concat","setUpControl","dir","_throwError","valueAccessor","Validators","compose","asyncValidator","composeAsync","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","registerOnDisabledChange","_rawValidators","registerOnValidatorChange","updateValueAndValidity","_rawAsyncValidators","cleanUpControl","_noControlError","_clearChangeFns","newValue","_pendingValue","_pendingChange","_pendingDirty","updateOn","updateControl","_pendingTouched","markAsTouched","viewToModelUpdate","markAsDirty","setValue","emitModelToViewChange","emitModelEvent","setUpFormContainer","message","messageEnd","join","path","composeValidators","composeAsyncValidators","isPropertyUpdated","viewModel","change","isFirstChange","currentValue","isBuiltInAccessor","BUILTIN_ACCESSORS","some","a","syncPendingControls","form","directives","_syncPendingControls","selectValueAccessor","valueAccessors","isArray","defaultAccessor","builtinAccessor","customAccessor","DefaultValueAccessor","removeDir","list","el","index","indexOf","splice","_find","delimiter","FormGroup","controls","FormArray","at","coerceToValidator","validatorOrOpts","isOptionsObj","coerceToAsyncValidator","origAsyncValidator","asyncValidators","_hasInvalidParent","FormGroupName","FormGroupDirective","FormArrayName","AbstractControlDirective","AbstractFormGroupDirective","CheckboxControlValueAccessor","ControlContainer","NG_VALUE_ACCESSOR","COMPOSITION_BUFFER_MODE","NgControl","NgControlStatus","NgControlStatusGroup","NgForm","NgModel","NgModelGroup","RadioControlValueAccessor","FormControlDirective","FormControlName","NgSelectOption","SelectControlValueAccessor","SelectMultipleControlValueAccessor","CheckboxRequiredValidator","EmailValidator","MaxLengthValidator","MinLengthValidator","PatternValidator","RequiredValidator","FormBuilder","AbstractControl","FormControl","NG_ASYNC_VALIDATORS","NG_VALIDATORS","VERSION","FormsModule","ReactiveFormsModule","InternalFormsSharedModule","REACTIVE_DRIVEN_DIRECTIVES","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","CHECKBOX_VALUE_ACCESSOR","DEFAULT_VALUE_ACCESSOR","AbstractControlStatus","ngControlStatusHost","formDirectiveProvider","formControlBinding","modelGroupProvider","NgNoValidate","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","RADIO_VALUE_ACCESSOR","RadioControlRegistry","RANGE_VALUE_ACCESSOR","RangeValueAccessor","formControlBinding$1","controlNameBinding","formDirectiveProvider$1","formArrayNameProvider","formGroupNameProvider","SELECT_VALUE_ACCESSOR","NgSelectMultipleOption","SELECT_MULTIPLE_VALUE_ACCESSOR","CHECKBOX_REQUIRED_VALIDATOR","EMAIL_VALIDATOR","MAX_LENGTH_VALIDATOR","MIN_LENGTH_VALIDATOR","PATTERN_VALIDATOR","REQUIRED_VALIDATOR","__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__","__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__","valid","invalid","pending","enabled","pristine","dirty","touched","status","untouched","statusChanges","valueChanges","reset","hasError","errorCode","getError","EMAIL_REGEXP","parseFloat","actual","required","requiredTrue","email","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","pattern","nullValidator","regex","regexStr","charAt","RegExp","requiredPattern","actualValue","presentValidators","observables","_renderer","setProperty","(change)","_compositionMode","_composing","normalizedValue","_handleInput","_compositionStart","_compositionEnd","(input)","(compositionstart)","(compositionend)","_parent","_accessors","add","accessor","push","remove","i","_isSameGroup","fireUncheck","controlPair","_control","_registry","_injector","_checkName","_fn","formControlName","_throwNameError","_optionMap","Map","_idCounter","_compareWith","JSON","stringify","_getOptionId","_getOptionValue","_registerOption","_i","_a","has","compareWith","_element","_select","_setElementValue","delete","ngValue","optionSelectedStateSetter","ids_1","opt","_setSelected","selectedOptions","val","_value","_checkParentType","addFormGroup","formDirective","removeFormGroup","getFormGroup","_validators","_asyncValidators","cd","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","_onCollectionChange","_onDisabledChange","_updateOn","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","opts","onlySelf","markAsUntouched","_forEachChild","_updateTouched","markAsPristine","_updatePristine","markAsPending","disable","_updateValue","_updateAncestors","changeFn","enable","setParent","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","x","_initObservables","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","_setUpdateStrategy","_onChange","_applyFormState","emitViewToModelChange","patchValue","condition","cb","_setUpControls","registerControl","addControl","removeControl","setControl","contains","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","subtreeUpdated","updated","child","k","_reduceValue","initValue","_registerControl","insert","removeAt","resolvedPromise","Promise","resolve","submitted","_directives","ngSubmit","ngAfterViewInit","then","container","_findContainer","getControl","group","updateModel","onSubmit","$event","onReset","resetForm","pop","(submit)","(reset)","outputs","FormErrorExamples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","TemplateDrivenErrors","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","resolvedPromise$1","_registered","update","_checkForErrors","_setUpControl","_updateDisabled","_isStandalone","_setUpStandalone","standalone","disabledValue","ReactiveErrors","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","console","warn","_isControlChanged","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","addFormArray","removeFormArray","getFormArray","newCtrl","_oldForm","sync","async","_added","_required","[attr.required]","_enabled","_createValidator","_validator","[attr.minlength]","[attr.maxlength]","[attr.pattern]","controlsConfig","extra","_reduceControls","array","_createControl","controlConfig","novalidate","declarations","exports","259","sequence","steps","style","tokens","offset","scheduleMicroTask","AnimationBuilder","AnimationFactory","AUTO_STYLE","NoopAnimationPlayer","AnimationGroupPlayer","ɵPRE_STYLE","_onDoneFns","_onStartFns","_onDestroyFns","_started","_destroyed","_finished","parentPlayer","totalTime","_onFinish","onStart","onDone","onDestroy","hasStarted","init","play","_onStart","triggerMicrotask","pause","restart","finish","destroy","setPosition","getPosition","triggerCallback","phaseName","methods","_players","players","doneCount","destroyCount","startCount","total","player","_onDestroy","time","timeAtPosition","position","beforeDestroy","260","__decorate","target","key","desc","getOwnPropertyDescriptor","Reflect","decorate","__metadata","metadata","core_1","http_1","PasswordService","http","url","makeAPICall","password","data","post","response","json","Injectable","Http","261","NgbAccordionModule","__WEBPACK_IMPORTED_MODULE_1__angular_common__","__WEBPACK_IMPORTED_MODULE_2__accordion__","__WEBPACK_IMPORTED_MODULE_3__accordion_config__","NGB_ACCORDION_DIRECTIVES","forRoot","ngModule","imports","262","NgbPanelTitle","NgbPanelContent","NgbPanel","NgbAccordion","__WEBPACK_IMPORTED_MODULE_2__accordion_config__","nextId","templateRef","isOpen","ngAfterContentChecked","titleTpl","titleTpls","first","contentTpl","contentTpls","title","descendants","activeIds","destroyOnHide","panelChange","closeOtherPanels","toggle","panelId","panel","panels","find","defaultPrevented_1","nextState","preventDefault","_closeOthers","_updateActiveIds","[attr.aria-multiselectable]","263","NgbAlertModule","__WEBPACK_IMPORTED_MODULE_2__alert__","__WEBPACK_IMPORTED_MODULE_3__alert_config__","entryComponents","264","NgbAlert","__WEBPACK_IMPORTED_MODULE_1__alert_config__","close","closeHandler","265","NgbButtonsModule","__WEBPACK_IMPORTED_MODULE_1__label__","__WEBPACK_IMPORTED_MODULE_2__checkbox__","__WEBPACK_IMPORTED_MODULE_3__radio__","NGB_BUTTON_DIRECTIVES","266","NgbCheckBox","__WEBPACK_IMPORTED_MODULE_2__label__","NGB_CHECKBOX_VALUE_ACCESSOR","_label","valueChecked","valueUnChecked","isFocused","onInputChange","modelToPropagate","checked","active","autocomplete","[checked]","[disabled]","267","NgbRadioGroup","NgbRadio","NGB_RADIO_VALUE_ACCESSOR","_radios","Set","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","_updateRadiosDisabled","unregister","updateValue","updateDisabled","_group","stringValue","_checked","[name]","268","NgbCarouselModule","__WEBPACK_IMPORTED_MODULE_2__carousel__","__WEBPACK_IMPORTED_MODULE_3__carousel_config__","269","NgbSlide","NgbCarousel","NGB_CAROUSEL_DIRECTIVES","NgbSlideEventDirection","__WEBPACK_IMPORTED_MODULE_1__carousel_config__","tplRef","slide","activeSlide","_getSlideById","activeId","slides","_startTimer","_restartTimer","clearInterval","_slideChangeInterval","slideId","cycleToSelected","getSlideEventDirection","cycleToPrev","cycleToNext","_stopTimer","cycle","_getNextSlide","LEFT","_getPrevSlide","RIGHT","slideIdx","direction","selectedSlide","currentActiveSlideId","nextActiveSlideId","_getSlideIdxById","keyPrev","keyNext","setInterval","slideWithId","toArray","currentSlideId","slideArr","currentSlideIdx","[style.display]","tabIndex","(mouseenter)","(mouseleave)","(keydown.arrowLeft)","(keydown.arrowRight)","270","NgbCollapseModule","__WEBPACK_IMPORTED_MODULE_1__collapse__","271","NgbCollapse","collapsed","[class.collapse]","[class.show]","272","NgbDatepickerModule","__WEBPACK_IMPORTED_MODULE_2__datepicker__","__WEBPACK_IMPORTED_MODULE_3__datepicker_month_view__","__WEBPACK_IMPORTED_MODULE_4__datepicker_navigation__","__WEBPACK_IMPORTED_MODULE_5__datepicker_input__","__WEBPACK_IMPORTED_MODULE_6__angular_forms__","__WEBPACK_IMPORTED_MODULE_7__datepicker_day_view__","__WEBPACK_IMPORTED_MODULE_8__datepicker_i18n__","__WEBPACK_IMPORTED_MODULE_9__ngb_calendar__","__WEBPACK_IMPORTED_MODULE_10__ngb_date_parser_formatter__","__WEBPACK_IMPORTED_MODULE_11__ngb_date_adapter__","__WEBPACK_IMPORTED_MODULE_12__datepicker_navigation_select__","__WEBPACK_IMPORTED_MODULE_13__datepicker_config__","__WEBPACK_IMPORTED_MODULE_14__hijri_ngb_calendar_islamic_civil__","__WEBPACK_IMPORTED_MODULE_15__hijri_ngb_calendar_islamic_umalqura__","useClass","273","isChangedDate","dateComparator","checkMinBeforeMax","checkDateInRange","__WEBPACK_IMPORTED_MODULE_0__ngb_date__","isDateSelectable","generateSelectBoxMonths","calendar","getMonths","findIndex","generateSelectBoxYears","start","end","e","nextMonthDisabled","prevMonthDisabled","prevDate","buildMonths","force","newMonths","buildMonth","weekdays","getFirstViewDate","getWeeksPerMonth","getDaysPerWeek","getWeekday","nextDate","currentMonth","getWeekNumber","daysPerWeek","firstMonthDate","dayOfWeek","274","NavigationEvent","275","NgbDatepickerMonthView","__WEBPACK_IMPORTED_MODULE_2__datepicker_i18n__","doSelect","isHidden","isCollapsed","276","NgbDatepickerNavigation","__WEBPACK_IMPORTED_MODULE_1__datepicker_view_model__","__WEBPACK_IMPORTED_MODULE_3__datepicker_i18n__","showSelect","277","NgbInputDatepicker","__WEBPACK_IMPORTED_MODULE_2__ngb_date__","__WEBPACK_IMPORTED_MODULE_3__datepicker__","__WEBPACK_IMPORTED_MODULE_4__ngb_date_parser_formatter__","__WEBPACK_IMPORTED_MODULE_5__util_positioning__","__WEBPACK_IMPORTED_MODULE_6__ngb_date_adapter__","__WEBPACK_IMPORTED_MODULE_7__ngb_calendar__","__WEBPACK_IMPORTED_MODULE_8__datepicker_service__","NGB_DATEPICKER_VALIDATOR","_parserFormatter","_elRef","_vcRef","_cfr","ngZone","_cRef","dateSelect","_onTouched","_validatorChange","_zoneSubscription","onStable","location","instance","_fromDateStruct","requiredBefore","requiredAfter","_model","_writeModelValue","manualDateChange","updateView","cf","resolveComponentFactory","createComponent","_applyPopupStyling","_applyDatepickerInputs","_subscribeForDatepickerOutputs","window","document","querySelector","appendChild","hostView","onBlur","datepickerInstance","optionName","addClass","setStyle","(keyup.esc)","278","NgbDatepickerDayView","isMuted","[class.bg-primary]","[class.text-white]","[class.text-muted]","[class.outside]","[class.active]","279","NgbDatepickerNavigationSelect","__WEBPACK_IMPORTED_MODULE_2__util_util__","changeMonth","changeYear","280","isGregorianLeapYear","getFullYear","mod","NgbCalendarIslamicCivil","__WEBPACK_IMPORTED_MODULE_0__ngb_calendar_hijri__","fromGregorian","gdate","Date","gYear","gMonth","getMonth","gDay","getDate","julianDay","GREGORIAN_EPOCH","hYear","hMonth","ceil","_getYearStart","hDay","_getMonthStart","toGregorian","hijriDate","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","gYearStart","yearday","tjd","leapadj","tjd2","getDaysInIslamicMonth","_isIslamicLeapYear","setYear","setMonth","setDay","getDay","thursdayIndex","jsDate","setDate","getTime","MuhDate","round","281","NgbCalendarHijri","mDays","yearValue","282","NgbDropdownModule","__WEBPACK_IMPORTED_MODULE_1__dropdown__","__WEBPACK_IMPORTED_MODULE_2__dropdown_config__","NGB_DROPDOWN_DIRECTIVES","283","NgbDropdownMenu","NgbDropdownAnchor","NgbDropdownToggle","NgbDropdown","__WEBPACK_IMPORTED_MODULE_1__dropdown_config__","__WEBPACK_IMPORTED_MODULE_2__util_positioning__","dropdown","isEventFrom","triggerEl","applyPlacement","_placement","removeClass","parentNode","search","[class.dropdown-menu]","[attr.x-placement]","anchorEl","aria-haspopup","[attr.aria-expanded]","elementRef","toggleOpen","(click)","_open","openChange","_positionMenu","_menu","closeFromClick","button","_isEventFromToggle","_isEventFromMenu","closeFromOutsideEsc","_anchor","(document:click)","284","NgbModalModule","__WEBPACK_IMPORTED_MODULE_1__modal_backdrop__","__WEBPACK_IMPORTED_MODULE_2__modal_window__","__WEBPACK_IMPORTED_MODULE_3__modal_stack__","__WEBPACK_IMPORTED_MODULE_4__modal__","__WEBPACK_IMPORTED_MODULE_5__modal_ref__","__WEBPACK_IMPORTED_MODULE_6__modal_dismiss_reasons__","285","NgbModalBackdrop","[class]","backdropClass","286","NgbModalWindow","__WEBPACK_IMPORTED_MODULE_0__angular_common__","__WEBPACK_IMPORTED_MODULE_2__modal_dismiss_reasons__","backdrop","dismissEvent","_document","backdropClick","dismiss","BACKDROP_CLICK","escKey","defaultPrevented","ESC","reason","_elWithFocus","activeElement","body","elementToFocus","elWithFocus","centered","windowClass","287","ModalDismissReasons","288","NgbModalStack","__WEBPACK_IMPORTED_MODULE_2__util_popup__","__WEBPACK_IMPORTED_MODULE_4__modal_backdrop__","__WEBPACK_IMPORTED_MODULE_5__modal_window__","__WEBPACK_IMPORTED_MODULE_6__modal_ref__","_applicationRef","_componentFactoryResolver","_windowAttributes","_backdropAttributes","moduleCFR","contentInjector","content","containerEl","activeModal","contentRef","_getContentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","result","_applyWindowOptions","_applyBackdropOptions","backdropFactory","attachView","windowFactory","nodes","windowInstance","backdropInstance","_createFromTemplateRef","_createFromString","_createFromComponent","viewRef","createEmbeddedView","rootNodes","component","createTextNode","contentCmptFactory","modalContentInjector","resolveAndCreate","useValue","componentRef","289","NgbActiveModal","NgbModalRef","_windowCmptRef","_contentRef","_backdropCmptRef","_beforeDismiss","reject","_resolve","_reject","_removeModalElements","windowNativeEl","removeChild","backdropNativeEl","290","NgbModal","__WEBPACK_IMPORTED_MODULE_1__modal_stack__","_moduleCFR","_modalStack","291","NgbPaginationModule","__WEBPACK_IMPORTED_MODULE_2__pagination__","__WEBPACK_IMPORTED_MODULE_3__pagination_config__","292","NgbPagination","__WEBPACK_IMPORTED_MODULE_2__pagination_config__","pageCount","pages","page","pageChange","hasPrevious","hasNext","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","unshift","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","newPage","_b","293","NgbPopoverModule","__WEBPACK_IMPORTED_MODULE_1__popover__","__WEBPACK_IMPORTED_MODULE_2__popover_config__","294","NgbPopoverWindow","NgbPopover","__WEBPACK_IMPORTED_MODULE_1__util_triggers__","__WEBPACK_IMPORTED_MODULE_3__util_popup__","__WEBPACK_IMPORTED_MODULE_4__popover_config__","componentFactoryResolver","viewContainerRef","shown","hidden","_ngbPopoverWindowId","_popupService","_windowRef","ngbPopover","popoverTitle","setAttribute","changeDetectorRef","detectChanges","removeAttribute","_unregisterListenersFn","bind","295","parseTriggers","aliases","DEFAULT_ALIASES","trimmedTriggers","parsedTriggers","trigger","triggerPair","alias","Trigger","manualTriggers","isManual","listenToTriggers","renderer","openFn","closeFn","toggleFn","listeners","noopFn","listen","unsubscribeFn","hover","296","NgbProgressbarModule","__WEBPACK_IMPORTED_MODULE_2__progressbar__","__WEBPACK_IMPORTED_MODULE_3__progressbar_config__","297","NgbProgressbar","__WEBPACK_IMPORTED_MODULE_2__progressbar_config__","height","getValue","getPercentValue","298","NgbRatingModule","__WEBPACK_IMPORTED_MODULE_2__rating_config__","__WEBPACK_IMPORTED_MODULE_3__rating__","299","NgbRating","Key","__WEBPACK_IMPORTED_MODULE_1__rating_config__","__WEBPACK_IMPORTED_MODULE_3__angular_forms__","NGB_RATING_VALUE_ACCESSOR","_changeDetectorRef","contexts","leave","rateChange","ariaValueText","nextRate","enter","handleBlur","handleClick","rate","handleKeyDown","which","ArrowDown","ArrowLeft","ArrowUp","ArrowRight","Home","End","fill","internalChange","newRate","_getFillValue","diff","Number","toFixed","nextValue","aria-valuemin","[attr.aria-valuemax]","[attr.aria-valuenow]","[attr.aria-valuetext]","[attr.aria-disabled]","starTemplate","300","NgbTabsetModule","__WEBPACK_IMPORTED_MODULE_2__tabset__","__WEBPACK_IMPORTED_MODULE_3__tabset_config__","NGB_TABSET_DIRECTIVES","301","NgbTabTitle","NgbTabContent","NgbTab","NgbTabset","__WEBPACK_IMPORTED_MODULE_1__tabset_config__","tabChange","className","justifyClass","tabId","selectedTab","_getTabById","activeTab","tabs","tabsWithId","tab","302","NgbTimepickerModule","__WEBPACK_IMPORTED_MODULE_2__timepicker__","__WEBPACK_IMPORTED_MODULE_3__timepicker_config__","303","NgbTimepicker","__WEBPACK_IMPORTED_MODULE_3__ngb_time__","__WEBPACK_IMPORTED_MODULE_4__timepicker_config__","NGB_TIMEPICKER_VALUE_ACCESSOR","hour","minute","second","changeHour","step","propagateModelChange","changeMinute","changeSecond","updateHour","newVal","isPM","enteredHour","updateMinute","updateSecond","toggleMeridian","formatHour","NaN","formatMinSec","setFormControlSize","form-control-sm","form-control-lg","setButtonSize","btn-sm","btn-lg","304","NgbTooltipModule","__WEBPACK_IMPORTED_MODULE_1__tooltip__","__WEBPACK_IMPORTED_MODULE_2__tooltip_config__","305","NgbTooltipWindow","NgbTooltip","__WEBPACK_IMPORTED_MODULE_4__tooltip_config__","_ngbTooltipWindowId","_ngbTooltip","ngbTooltip","306","NgbTypeaheadModule","__WEBPACK_IMPORTED_MODULE_2__highlight__","__WEBPACK_IMPORTED_MODULE_3__typeahead_window__","__WEBPACK_IMPORTED_MODULE_4__typeahead__","__WEBPACK_IMPORTED_MODULE_5__typeahead_config__","307","NgbHighlight","highlightClass","resultStr","resultLC","termLC","currentIdx","parts","part","originalPart","substr","308","NgbTypeahead","__WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__","__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_let__","__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_do__","__WEBPACK_IMPORTED_MODULE_5_rxjs_operator_switchMap__","__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_fromEvent__","__WEBPACK_IMPORTED_MODULE_7__util_positioning__","__WEBPACK_IMPORTED_MODULE_8__typeahead_window__","__WEBPACK_IMPORTED_MODULE_9__util_popup__","__WEBPACK_IMPORTED_MODULE_10__util_util__","__WEBPACK_IMPORTED_MODULE_11__typeahead_config__","NGB_TYPEAHEAD_VALUE_ACCESSOR","nextWindowId","_viewContainerRef","selectItem","popupId","_valueChanges","_resubscribeTypeahead","isPopupOpen","inputValues$","_inputValueBackup","results$","ngbTypeahead","processedResults$","userInput$","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","onDocumentClick","dismissPopup","_showHint","Enter","Tab","stopPropagation","_selectResult","Escape","_openPopup","_selectResultClosePopup","activeDescendant","userInputLowerCase","formattedVal","inputFormatter","resultFormatter","[class.open]","autocapitalize","autocorrect","aria-multiline","[attr.aria-autocomplete]","[attr.aria-activedescendant]","[attr.aria-owns]","33","fromJSDate","toJSDate","setFullYear","NgbCalendar","NgbCalendarGregorian","34","NgbDatepickerI18n","NgbDatepickerI18nDefault","WEEKDAYS_SHORT","MONTHS_SHORT","MONTHS_FULL","getWeekdayShortName","weekday","getMonthShortName","getMonthFullName","54","positionElements","hostElement","targetElement","appendToBody","placementVals","hasAuto","obj","appliedPlacement","topVal","leftVal","availablePlacements","positionService","getAvailablePlacements","toItemIndexes","pos","top","left","Positioning","getAllStyles","element","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","documentElement","elPosition","parentOffset","width","bottom","right","getBoundingClientRect","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","hostElPosition","targetElStyles","targetElBCR","placementPrimary","placementSecondary","targetElPosition","marginBottom","marginRight","hostElemClientRect","targetElemClientRect","html","setSecondaryPlacementForLeftRight","setSecondaryPlacementForTopBottom","innerWidth","clientWidth","innerHeight","clientHeight","primaryPlacement","availablePlacementArr","644","platform_browser_dynamic_1","app_module_1","environment","production","enableProdMode","platformBrowserDynamic","bootstrapModule","AppModule","645","platform_browser_1","forms_1","animations_1","app_component_1","password_service_1","ng_bootstrap_1","NgModule","AppComponent","BrowserModule","HttpModule","BrowserAnimationsModule","NgbModule","bootstrap","646","issueAnimationCommand","command","resolveElementFromTarget","parseTriggerCallbackName","triggerName","dotIndex","substring","instantiateSupportedAnimationDriver","__WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__","instantiateDefaultStyleNormalizer","instantiateRendererFactory","engine","zone","AnimationRendererFactory","NoopAnimationsModule","BrowserAnimationBuilder","BrowserAnimationFactory","AnimationRenderer","BaseAnimationRenderer","BROWSER_ANIMATIONS_PROVIDERS","BROWSER_NOOP_ANIMATIONS_PROVIDERS","InjectableAnimationEngine","__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__","__WEBPACK_IMPORTED_MODULE_2_tslib__","__WEBPACK_IMPORTED_MODULE_3__angular_animations__","rootRenderer","doc","_nextAnimationId","typeData","encapsulation","None","animation","createRenderer","build","entry","_id","RendererAnimationPlayer","_command","_listen","eventName","callback","delegate","_zone","_currentId","_microtaskId","_animationCallbacksBuffer","_rendererCache","_cdRecurDepth","promise","onRemovalComplete","componentId","namespaceId","registerTrigger","begin","_scheduleCountTask","scheduleListenerCallback","count","run","tuple","runOutsideAngular","flush","whenRenderingDone","destroyNode","createElement","namespace","createComment","createText","newChild","onInsert","insertBefore","refChild","oldChild","onRemove","selectRootElement","selectorOrNode","node","nextSibling","flags","removeStyle","disableAnimations","factory","process","name_1","phase","countId","driver","normalizer","SHARED_ANIMATION_PROVIDERS","useFactory","deps","647","optimizeGroupPlayer","__WEBPACK_IMPORTED_MODULE_0__angular_animations__","normalizeKeyframes","keyframes","preStyles","postStyles","normalizedKeyframes","previousOffset","previousKeyframe","kf","isSameOffset","normalizedKeyframe","normalizedProp","normalizePropertyName","normalizeStyleValue","listenOnPlayer","copyAnimationEvent","makeAnimationEvent","fromState","toState","getOrSetAsInMap","parseTimelineCommand","separatorPos","containsVendorPrefix","validateStyleProperty","_CACHED_BODY","getBodyNode","_IS_WEBKIT","toUpperCase","resolveTimingValue","matches","match","_convertTimeValueToMS","unit","ONE_SECOND","resolveTiming","timings","allowNegativeValues","parseTimeExpression","exp","duration","delay","easing","delayMatch","easingVal","containsErrors","startIndex","copyObj","destination","normalizeStyles","normalizedStyles","copyStyles","readPrototype","setStyles","camelProp","dashCaseToCamelCase","eraseStyles","normalizeAnimationEntry","validateStyleParams","params","extractStyleParams","varName","PARAM_REGEX","exec","lastIndex","interpolateParams","original","str","localVal","iteratorToArray","iterator","arr","done","DASH_CASE_REGEXP","m","allowPreviousPlayerStylesMerge","visitDslNode","visitor","visitTrigger","visitState","visitTransition","visitSequence","visitGroup","visitAnimate","visitKeyframes","visitStyle","visitReference","visitAnimateChild","visitAnimateRef","visitQuery","visitStagger","parseTransitionExpr","transitionValue","expressions","parseInnerTransitionStr","eventStr","parseAnimationAlias","separator","makeLambdaFromStates","isFullAnyStateExpr","ANY_STATE","lhs","rhs","LHS_MATCH_BOOLEAN","TRUE_BOOLEAN_VALUES","FALSE_BOOLEAN_VALUES","RHS_MATCH_BOOLEAN","lhsMatch","rhsMatch","buildAnimationAst","AnimationAstBuilderVisitor","normalizeSelector","hasAmpersand","token","SELF_TOKEN","SELF_TOKEN_REGEX","NG_TRIGGER_SELECTOR","NG_ANIMATING_SELECTOR","normalizeParams","consumeOffset","styleTuple","isObject","constructTimingAst","makeTimingAst","strValue","ast","dynamic","normalizeAnimationOptions","createTimelineInstruction","preStyleProps","postStyleProps","subTimeline","buildAnimationTimelines","rootElement","enterClassName","leaveClassName","startingStyles","finalStyles","subInstructions","AnimationTimelineBuilderVisitor","buildKeyframes","roundOffset","decimalPoints","mult","pow","flattenStyles","allStyles","allProperties","createTransitionInstruction","isRemovalTransition","fromStyles","toStyles","timelines","queriedElements","oneOrMoreTransitionsMatch","matchFns","currentState","buildTrigger","AnimationTrigger","createFallbackTransition","states","AnimationTransitionFactory","matchers","queryCount","depCount","balanceProperties","key1","key2","deleteOrUnsetInMap","currentValues","normalizeTriggerValue","isElementNode","isTriggerEventValid","cloakElement","oldValue","display","cloakAndComputeStyles","valuesMap","elements","elementPropsMap","defaultStyle","cloakVals","failedElements","props","computeStyle","REMOVAL_FLAG","NULL_REMOVED_QUERIED_STATE","buildRootMap","roots","getRoot","NULL_NODE","root","localRootMap","rootMap","nodeSet","classList","classes","CLASSES_CACHE_KEY","removeNodesAfterAnimationDone","processLeaveNode","flattenGroupPlayers","finalPlayers","_flattenGroupPlayersRecur","objEquals","k1","k2","replacePostStylesAsPre","allPreStyleElements","allPostStyleElements","postEntry","preEntry","_computeStyle","supportsWebAnimations","Element","AnimationDriver","AnimationStyleNormalizer","WebAnimationsStyleNormalizer","NoopAnimationDriver","AnimationEngine","WebAnimationsDriver","__WEBPACK_IMPORTED_MODULE_1_tslib__","_contains","elm1","elm2","_matches","_query","proto","fn_1","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","querySelectorAll","elm","matchesElement","containsElement","invokeQuery","query","animate","previousPlayers","NOOP","SUBSTITUTION_EXPR_START","_driver","AnimationAstBuilderContext","_resetContextStyleTimingState","currentQuerySelector","collectedStyles","currentTime","transitions","definitions","def","stateDef_1","transition","styleAst","astParams","containsDynamicStyles","missingSubs_1","params_1","stylesObj_1","sub","missingSubsArr","values","expr","s","furthestTime","innerAst","timingAst","currentAnimateTimings","styleMetadata","styleMetadata_1","isEmpty","newStyleData","_styleAst","isEmptyStep","_makeStyleAst","_validateStyleAst","collectedEasing","styleData","styleMap","endTime","startTime","collectedEntry","updateCollectedStyle","totalKeyframesWithOffsets","offsets","offsetsOutOfOrder","keyframesOutOfRange","style$$1","offsetVal","generatedOffset","limit","animateDuration","durationUpToThisFrame","parentSelector","currentQuery","includeSelf","optional","originalSelector","currentTransition","ElementInstructionMap","_map","consume","instructions","append","existingInstructions","clear","ENTER_TOKEN_REGEX","LEAVE_TOKEN_REGEX","AnimationTimelineContext","currentTimeline","timeline","containsAnimation","tl","allowOnlyTimelineStyles","elementInstructions","innerContext","createSubContext","_visitSubInstructions","transformIntoNewTimeline","previousNode","instruction","instructionTimings","appendInstructionToTimeline","updateOptions","subContextCount","ctx","snapshotCurrentStyles","DEFAULT_NOOP_PREVIOUS_NODE","delayNextStep","applyStylesToKeyframe","innerTimelines","mergeTimelineCollectedStyles","_visitTiming","incrementTime","getCurrentStyleProperties","forwardFrame","applyEmptyStep","innerTimeline","forwardTime","elms","currentQueryTotal","sameElementTimeline","currentQueryIndex","parentContext","abs","maxTime","currentStaggerTime","startingTime","_enterClassName","_leaveClassName","initialTimeline","TimelineBuilder","skipIfExists","newOptions","optionsToUpdate","newParams","paramsToUpdate_1","_copyOptions","oldParams_1","newTime","fork","updatedTimings","builder","SubTimelineBuilder","stretchStartingKeyframe","_elementTimelineStylesLookup","_previousKeyframe","_currentKeyframe","_keyframes","_styleSummary","_pendingStyles","_backFill","_currentEmptyStepKeyframe","_localTimelineStyles","_globalTimelineStyles","_loadKeyframe","hasPreStyleStep","_updateStyle","getFinalKeyframe","properties","details0","details1","finalKeyframes","keyframe","finalKeyframe","preProps","postProps","kf0","kf1","_stretchStartingKeyframe","newKeyframes","startingGap","newFirstKeyframe","oldFirstKeyframe","oldOffset","timeAtKeyframe","Animation","errorMessage","_animationAst","buildTimelines","destinationStyles","dest","NoopAnimationStyleNormalizer","propertyName","userProvidedProperty","normalizedProperty","strVal","DIMENSIONAL_PROP_MAP","valAndSuffixMatch","EMPTY_OBJECT","_triggerName","_stateStyles","buildStyles","stateName","backupStateStyler","stateStyler","backupStyles","currentOptions","nextOptions","transitionAnimationParams","currentAnimationParams","currentStateStyles","nextAnimationParams","nextStateStyles","preStyleMap","postStyleMap","isRemoval","animationOptions","queriedElementsList","AnimationStateStyles","defaultParams","combinedParams","styleObj_1","transitionFactories","fallbackTransition","matchTransition","f","matchStyles","EMPTY_INSTRUCTION_MAP","TimelineAnimationEngine","_normalizer","_animations","_playersById","_buildPlayer","autoStylesMap","inst","_getPlayer","baseEvent","EMPTY_PLAYER_ARRAY","NULL_REMOVAL_STATE","setForRemoval","hasAnimation","removedBeforeQueried","StateValue","isObj","absorbOptions","DEFAULT_STATE_VALUE","DELETED_STATE_VALUE","AnimationTransitionNamespace","_engine","_triggers","_queue","_elementListeners","_hostClassName","triggersWithStates","statesByElement","NG_TRIGGER_CLASSNAME","afterFlush","_getTrigger","defaultToFallback","TransitionAnimationPlayer","playersOnElement","playersByElement","queued","isFallbackTransition","totalQueuedPlayers","index_1","fromStyles_1","toStyles_1","reportError","deregister","stateMap","clearElementCache","elementPlayers","_signalRemovalForInnerTriggers","namespaces","fetchNamespacesByElement","ns","triggerLeaveAnimation","destroyAfterComplete","triggerStates","players_1","markElementAsRemoved","prepareLeaveAnimationListeners","visitedTriggers_1","listener","elementStates","removeNode","childElementCount","containsPotentialParentTransition","totalAnimations","currentPlayers","playersByQueriedElement","parent_1","destroyInnerAnimations","_onRemovalComplete","insertNode","drainQueuedTransitions","microtaskId","destroyed","markedForDestroy","sort","d0","d1","elementContainsData","containsData","TransitionAnimationEngine","newHostElements","disabledNodes","_namespaceLookup","_namespaceList","_flushFns","_whenQuietFns","namespacesByHostElement","collectedEnterElements","collectedLeaveElements","createNamespace","_balanceNamespaceList","collectEnterElement","found","nextNamespace","_fetchNamespace","afterFlushAnimationsDone","nsId","details","markElementAsDisabled","_buildInstruction","subTimelines","containerElement","destroyActiveAnimationsForElement","finishActiveQueriedAnimationOnElement","cleanupFns","_flushAnimations","quietFns_1","skippedPlayers","skippedPlayersMap","queuedInstructions","disabledElementsSet","nodesThatAreDisabled","i_1","bodyNode","allTriggerElements","enterNodeMap","enterNodeMapIds","allLeaveNodes","mergedLeaveNodes","leaveNodesWithoutAnimations","i_2","leaveNodeMapIds","leaveNodeMap","allPlayers","erroneousTransitions","i_3","stringMap","setVal_1","setVal","errors_1","error","allPreviousPlayersMap","animationElementMap","_beforeAnimationBuild","_getPreviousPlayers","prevPlayer","replaceNodes","postStylesMap","preStylesMap","pre","rootPlayers","subPlayers","NO_PARENT_ANIMATION_ELEMENT_DETECTED","parentWithAnimation_1","parentsToAdd","detectedParent","innerPlayer","_buildAnimation","setRealPlayer","parentPlayers","playersForElement","syncPlayerEvents","i_4","queriedPlayerResults","queriedInnerElements","j","queriedPlayers","activePlayers","isQueriedElement","toStateValue","queriedElementPlayers","isRemovalAnimation_1","targetNameSpaceId","targetTriggerName","this_1","timelineInstruction","realPlayer","getRealPlayer","allQueriedPlayers","allConsumedElements","allSubElements","allNewPlayers","pp","wrappedPlayer","_player","_containsRealPlayer","_queuedCallbacks","_queueEvent","_triggerCache","_transitionEngine","_timelineEngine","cacheKey","property","action","eventPhase","WebAnimationsPlayer","_initialized","previousStyles","currentSnapshot","_duration","_delay","_preparePlayerBeforeStart","previousStyleProps","startingKeyframe_1","missingStyleProps_1","self_1","domPlayer","_triggerWebAnimation","_finalKeyframe","addEventListener","_resetDomPlayerState","cancel","playerOptions","previousWebAnimationPlayers","648","passwordService","textContent","headerText","characterInfoText","conditionText1","conditionText2","conditionText3","conditionText4","statusText1","statusText2","statusText3","footerLeftBoxHeaderText","footerRightBoxHeaderText","footerRightBoxInfoText1","footerRightBoxInfoText2","footerRightBoxInfoText3","footerRightBoxConditionText1","footerRightBoxConditionText2","footerRightBoxConditionText3","footerRightBoxConditionText4","progress","lowerCase","upperCase","numeric","symbols","passwordLength","watchPassword","reviews","review","passwordType","getElementById","passLength","Component","649","650","651","NgbRootModule","__WEBPACK_IMPORTED_MODULE_1__accordion_accordion_module__","__WEBPACK_IMPORTED_MODULE_2__alert_alert_module__","__WEBPACK_IMPORTED_MODULE_3__buttons_buttons_module__","__WEBPACK_IMPORTED_MODULE_4__carousel_carousel_module__","__WEBPACK_IMPORTED_MODULE_5__collapse_collapse_module__","__WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__","__WEBPACK_IMPORTED_MODULE_7__dropdown_dropdown_module__","__WEBPACK_IMPORTED_MODULE_8__modal_modal_module__","__WEBPACK_IMPORTED_MODULE_9__pagination_pagination_module__","__WEBPACK_IMPORTED_MODULE_10__popover_popover_module__","__WEBPACK_IMPORTED_MODULE_11__progressbar_progressbar_module__","__WEBPACK_IMPORTED_MODULE_12__rating_rating_module__","__WEBPACK_IMPORTED_MODULE_13__tabset_tabset_module__","__WEBPACK_IMPORTED_MODULE_14__timepicker_timepicker_module__","__WEBPACK_IMPORTED_MODULE_15__tooltip_tooltip_module__","__WEBPACK_IMPORTED_MODULE_16__typeahead_typeahead_module__","NGB_MODULES","652","NgbDatepickerKeyMapService","__WEBPACK_IMPORTED_MODULE_1__datepicker_service__","_minDate","_maxDate","_firstViewDate","_lastViewDate","PageUp","shiftKey","PageDown","Space","653","getDaysDiff","date1","date2","ONE_DAY","NgbCalendarIslamicUmalqura","__WEBPACK_IMPORTED_MODULE_0__ngb_calendar_islamic_civil__","__WEBPACK_IMPORTED_MODULE_1__ngb_calendar_hijri__","__WEBPACK_IMPORTED_MODULE_3__angular_core__","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","ISLAMIC_CIVIL","MONTH_LENGTH","gDate","daysDiff","numOfDays","dayDiff","y","654","NgbTime","checkSecs","655","73","NgbButtonLabel","[class.btn]","[class.disabled]","[class.focus]","74","NgbDateAdapter","NgbDateStructAdapter","75","ContentRef","PopupService","_type"],"mappings":"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","file":"app.5217ceb5f868c32b049b.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 11:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = toInteger;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = toString;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getValueInRange;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = isString;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = isNumber;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = isInteger;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isDefined;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = padNumber;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = regExpEscape;\nfunction toInteger(value) {\n    return parseInt(\"\" + value, 10);\n}\nfunction toString(value) {\n    return (value !== undefined && value !== null) ? \"\" + value : '';\n}\nfunction getValueInRange(value, max, min) {\n    if (min === void 0) { min = 0; }\n    return Math.max(Math.min(value, max), min);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isNumber(value) {\n    return !isNaN(toInteger(value));\n}\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction padNumber(value) {\n    if (isNumber(value)) {\n        return (\"0\" + value).slice(-2);\n    }\n    else {\n        return '';\n    }\n}\nfunction regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n//# sourceMappingURL=util.js.map\n\n/***/ }),\n\n/***/ 114:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbAccordionConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbAccordion component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the accordions used in the application.\n */\nvar NgbAccordionConfig = (function () {\n    function NgbAccordionConfig() {\n        this.closeOthers = false;\n    }\n    NgbAccordionConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbAccordionConfig.ctorParameters = function () { return []; };\n    return NgbAccordionConfig;\n}());\n\n//# sourceMappingURL=accordion-config.js.map\n\n/***/ }),\n\n/***/ 115:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbAlertConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbAlert component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the alerts used in the application.\n */\nvar NgbAlertConfig = (function () {\n    function NgbAlertConfig() {\n        this.dismissible = true;\n        this.type = 'warning';\n    }\n    NgbAlertConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbAlertConfig.ctorParameters = function () { return []; };\n    return NgbAlertConfig;\n}());\n\n//# sourceMappingURL=alert-config.js.map\n\n/***/ }),\n\n/***/ 116:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbCarouselConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbCarousel component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the carousels used in the application.\n */\nvar NgbCarouselConfig = (function () {\n    function NgbCarouselConfig() {\n        this.interval = 5000;\n        this.wrap = true;\n        this.keyboard = true;\n    }\n    NgbCarouselConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbCarouselConfig.ctorParameters = function () { return []; };\n    return NgbCarouselConfig;\n}());\n\n//# sourceMappingURL=carousel-config.js.map\n\n/***/ }),\n\n/***/ 117:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDatepicker; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngb_calendar__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngb_date__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__datepicker_service__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__datepicker_keymap_service__ = __webpack_require__(652);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__datepicker_view_model__ = __webpack_require__(274);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__datepicker_config__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ngb_date_adapter__ = __webpack_require__(74);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__datepicker_i18n__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__datepicker_tools__ = __webpack_require__(273);\n\n\n\n\n\n\n\n\n\n\n\nvar NGB_DATEPICKER_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbDatepicker; }),\n    multi: true\n};\n/**\n * A lightweight and highly configurable datepicker directive\n */\nvar NgbDatepicker = (function () {\n    function NgbDatepicker(_keyMapService, _service, _calendar, i18n, config, _cd, _elementRef, _ngbDateAdapter) {\n        var _this = this;\n        this._keyMapService = _keyMapService;\n        this._service = _service;\n        this._calendar = _calendar;\n        this.i18n = i18n;\n        this._cd = _cd;\n        this._elementRef = _elementRef;\n        this._ngbDateAdapter = _ngbDateAdapter;\n        /**\n           * An event fired when navigation happens and currently displayed month changes.\n           * See NgbDatepickerNavigateEvent for the payload info.\n           */\n        this.navigate = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n           * An event fired when user selects a date using keyboard or mouse.\n           * The payload of the event is currently selected NgbDateStruct.\n           */\n        this.select = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\n            'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n            .forEach(function (input) { return _this[input] = config[input]; });\n        this._selectSubscription = _service.select$.subscribe(function (date) { _this.select.emit(date.toStruct()); });\n        this._subscription = _service.model$.subscribe(function (model) {\n            var newDate = model.firstDate;\n            var oldDate = _this.model ? _this.model.firstDate : null;\n            var newSelectedDate = model.selectedDate;\n            var oldSelectedDate = _this.model ? _this.model.selectedDate : null;\n            _this.model = model;\n            // handling selection change\n            if (Object(__WEBPACK_IMPORTED_MODULE_10__datepicker_tools__[\"f\" /* isChangedDate */])(newSelectedDate, oldSelectedDate)) {\n                _this.onTouched();\n                _this.onChange(_this._ngbDateAdapter.toModel(newSelectedDate));\n            }\n            // emitting navigation event if the first month changes\n            if (!newDate.equals(oldDate)) {\n                _this.navigate.emit({\n                    current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                    next: { year: newDate.year, month: newDate.month }\n                });\n            }\n            _cd.markForCheck();\n        });\n    }\n    /**\n     * Manually focus the datepicker\n     */\n    /**\n       * Manually focus the datepicker\n       */\n    NgbDatepicker.prototype.focus = /**\n       * Manually focus the datepicker\n       */\n    function () { this._elementRef.nativeElement.focus(); };\n    /**\n     * Navigates current view to provided date.\n     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     * Use 'startDate' input as an alternative\n     */\n    /**\n       * Navigates current view to provided date.\n       * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date provided calendar will open current month.\n       * Use 'startDate' input as an alternative\n       */\n    NgbDatepicker.prototype.navigateTo = /**\n       * Navigates current view to provided date.\n       * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date provided calendar will open current month.\n       * Use 'startDate' input as an alternative\n       */\n    function (date) { this._service.open(__WEBPACK_IMPORTED_MODULE_3__ngb_date__[\"a\" /* NgbDate */].from(date)); };\n    NgbDatepicker.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n        this._selectSubscription.unsubscribe();\n    };\n    NgbDatepicker.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.model === undefined) {\n            ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate'].forEach(function (input) { return _this._service[input] = _this[input]; });\n            this.navigateTo(this.startDate);\n        }\n    };\n    NgbDatepicker.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate']\n            .filter(function (input) { return input in changes; })\n            .forEach(function (input) { return _this._service[input] = _this[input]; });\n        if ('startDate' in changes) {\n            this.navigateTo(this.startDate);\n        }\n    };\n    NgbDatepicker.prototype.onDateSelect = function (date) {\n        this._service.focus(date);\n        this._service.select(date, { emitEvent: true });\n    };\n    NgbDatepicker.prototype.onKeyDown = function (event) { this._keyMapService.processKey(event); };\n    NgbDatepicker.prototype.onNavigateDateSelect = function (date) { this._service.open(date); };\n    NgbDatepicker.prototype.onNavigateEvent = function (event) {\n        switch (event) {\n            case __WEBPACK_IMPORTED_MODULE_6__datepicker_view_model__[\"a\" /* NavigationEvent */].PREV:\n                this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                break;\n            case __WEBPACK_IMPORTED_MODULE_6__datepicker_view_model__[\"a\" /* NavigationEvent */].NEXT:\n                this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                break;\n        }\n    };\n    NgbDatepicker.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbDatepicker.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbDatepicker.prototype.setDisabledState = function (isDisabled) { this._service.disabled = isDisabled; };\n    NgbDatepicker.prototype.showFocus = function (focusVisible) { this._service.focusVisible = focusVisible; };\n    NgbDatepicker.prototype.writeValue = function (value) { this._service.select(__WEBPACK_IMPORTED_MODULE_3__ngb_date__[\"a\" /* NgbDate */].from(this._ngbDateAdapter.fromModel(value))); };\n    NgbDatepicker.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    exportAs: 'ngbDatepicker',\n                    selector: 'ngb-datepicker',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    host: {\n                        'tabindex': '0',\n                        '[attr.tabindex]': 'model.disabled ? undefined : \"0\"',\n                        '(blur)': 'showFocus(false)',\n                        '(focus)': 'showFocus(true)',\n                        '(keydown)': 'onKeyDown($event)'\n                    },\n                    styles: [\"\\n    :host {\\n      border: 1px solid rgba(0, 0, 0, 0.125);\\n      border-radius: 0.25rem;\\n      display: inline-block;\\n    }\\n    .ngb-dp-month {\\n      pointer-events: none;\\n    }\\n    .ngb-dp-header {\\n      border-bottom: 0px;\\n      border-radius: .25rem 0.25rem 0rem 0rem;\\n      padding-top: 0.25rem;\\n    }\\n    ngb-datepicker-month-view {\\n      pointer-events: auto;\\n    }\\n    .ngb-dp-month-name {\\n      font-size: larger;\\n      height: 2rem;\\n      line-height: 2rem;\\n      text-align: center;\\n    }\\n    /deep/ .ngb-dp-month + .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week {\\n      padding-left: 1rem;\\n    }\\n    /deep/ .ngb-dp-month + .ngb-dp-month > .ngb-dp-month-name {\\n      padding-left: 1rem;\\n    }\\n    /deep/ .ngb-dp-month:last-child .ngb-dp-week {\\n      padding-right: .25rem;\\n    }\\n    /deep/ .ngb-dp-month:first-child .ngb-dp-week {\\n      padding-left: .25rem;\\n    }\\n    /deep/ .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week:last-child {\\n      padding-bottom: .25rem;\\n    }\\n    .ngb-dp-months {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n    }\\n  \"],\n                    template: \"\\n    <ng-template #dt let-date=\\\"date\\\" let-currentMonth=\\\"currentMonth\\\" let-selected=\\\"selected\\\" let-disabled=\\\"disabled\\\" let-focused=\\\"focused\\\">\\n      <div ngbDatepickerDayView\\n        [date]=\\\"date\\\"\\n        [currentMonth]=\\\"currentMonth\\\"\\n        [selected]=\\\"selected\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [focused]=\\\"focused\\\">\\n      </div>\\n    </ng-template>\\n\\n    <div class=\\\"ngb-dp-header bg-light\\\">\\n      <ngb-datepicker-navigation *ngIf=\\\"navigation !== 'none'\\\"\\n        [date]=\\\"model.firstDate\\\"\\n        [months]=\\\"model.months\\\"\\n        [disabled]=\\\"model.disabled\\\"\\n        [showSelect]=\\\"model.navigation === 'select'\\\"\\n        [prevDisabled]=\\\"model.prevDisabled\\\"\\n        [nextDisabled]=\\\"model.nextDisabled\\\"\\n        [selectBoxes]=\\\"model.selectBoxes\\\"\\n        (navigate)=\\\"onNavigateEvent($event)\\\"\\n        (select)=\\\"onNavigateDateSelect($event)\\\">\\n      </ngb-datepicker-navigation>\\n    </div>\\n\\n    <div class=\\\"ngb-dp-months\\\">\\n      <ng-template ngFor let-month [ngForOf]=\\\"model.months\\\" let-i=\\\"index\\\">\\n        <div class=\\\"ngb-dp-month d-block\\\">\\n          <div *ngIf=\\\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\\\"\\n                class=\\\"ngb-dp-month-name bg-light\\\">\\n            {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\\n          </div>\\n          <ngb-datepicker-month-view\\n            [month]=\\\"month\\\"\\n            [dayTemplate]=\\\"dayTemplate || dt\\\"\\n            [showWeekdays]=\\\"showWeekdays\\\"\\n            [showWeekNumbers]=\\\"showWeekNumbers\\\"\\n            [outsideDays]=\\\"(displayMonths === 1 ? outsideDays : 'hidden')\\\"\\n            (select)=\\\"onDateSelect($event)\\\">\\n          </ngb-datepicker-month-view>\\n        </div>\\n      </ng-template>\\n    </div>\\n  \",\n                    providers: [NGB_DATEPICKER_VALUE_ACCESSOR, __WEBPACK_IMPORTED_MODULE_4__datepicker_service__[\"a\" /* NgbDatepickerService */], __WEBPACK_IMPORTED_MODULE_5__datepicker_keymap_service__[\"a\" /* NgbDatepickerKeyMapService */]]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepicker.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_5__datepicker_keymap_service__[\"a\" /* NgbDatepickerKeyMapService */], },\n        { type: __WEBPACK_IMPORTED_MODULE_4__datepicker_service__[\"a\" /* NgbDatepickerService */], },\n        { type: __WEBPACK_IMPORTED_MODULE_2__ngb_calendar__[\"a\" /* NgbCalendar */], },\n        { type: __WEBPACK_IMPORTED_MODULE_9__datepicker_i18n__[\"a\" /* NgbDatepickerI18n */], },\n        { type: __WEBPACK_IMPORTED_MODULE_7__datepicker_config__[\"a\" /* NgbDatepickerConfig */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectorRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_8__ngb_date_adapter__[\"a\" /* NgbDateAdapter */], },\n    ]; };\n    NgbDatepicker.propDecorators = {\n        \"dayTemplate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"displayMonths\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"firstDayOfWeek\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"markDisabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"maxDate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"minDate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"navigation\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"outsideDays\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"showWeekdays\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"showWeekNumbers\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"startDate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"navigate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        \"select\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbDatepicker;\n}());\n\n//# sourceMappingURL=datepicker.js.map\n\n/***/ }),\n\n/***/ 118:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDatepickerService; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ngb_calendar__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ngb_date__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_util__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__datepicker_tools__ = __webpack_require__(273);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_operator_filter__ = __webpack_require__(105);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_operator_filter__);\n\n\n\n\n\n\n\nvar NgbDatepickerService = (function () {\n    function NgbDatepickerService(_calendar) {\n        this._calendar = _calendar;\n        this._model$ = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__[\"Subject\"]();\n        this._select$ = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__[\"Subject\"]();\n        this._state = {\n            disabled: false,\n            displayMonths: 1,\n            firstDayOfWeek: 1,\n            focusVisible: false,\n            months: [],\n            navigation: 'select',\n            prevDisabled: false,\n            nextDisabled: false,\n            selectBoxes: { years: [], months: [] },\n            selectedDate: null\n        };\n    }\n    Object.defineProperty(NgbDatepickerService.prototype, \"model$\", {\n        get: function () {\n            return __WEBPACK_IMPORTED_MODULE_6_rxjs_operator_filter__[\"filter\"].call(this._model$.asObservable(), function (model) { return model.months.length > 0; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"select$\", {\n        get: function () { return __WEBPACK_IMPORTED_MODULE_6_rxjs_operator_filter__[\"filter\"].call(this._select$.asObservable(), function (date) { return date !== null; }); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"disabled\", {\n        set: function (disabled) {\n            if (this._state.disabled !== disabled) {\n                this._nextState({ disabled: disabled });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"displayMonths\", {\n        set: function (displayMonths) {\n            displayMonths = Object(__WEBPACK_IMPORTED_MODULE_3__util_util__[\"h\" /* toInteger */])(displayMonths);\n            if (Object(__WEBPACK_IMPORTED_MODULE_3__util_util__[\"c\" /* isInteger */])(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n                this._nextState({ displayMonths: displayMonths });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"firstDayOfWeek\", {\n        set: function (firstDayOfWeek) {\n            firstDayOfWeek = Object(__WEBPACK_IMPORTED_MODULE_3__util_util__[\"h\" /* toInteger */])(firstDayOfWeek);\n            if (Object(__WEBPACK_IMPORTED_MODULE_3__util_util__[\"c\" /* isInteger */])(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n                this._nextState({ firstDayOfWeek: firstDayOfWeek });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"focusVisible\", {\n        set: function (focusVisible) {\n            if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n                this._nextState({ focusVisible: focusVisible });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"maxDate\", {\n        set: function (date) {\n            var maxDate = this.toValidDate(date, null);\n            if (Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"f\" /* isChangedDate */])(this._state.maxDate, maxDate)) {\n                this._nextState({ maxDate: maxDate });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"markDisabled\", {\n        set: function (markDisabled) {\n            if (this._state.markDisabled !== markDisabled) {\n                this._nextState({ markDisabled: markDisabled });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"minDate\", {\n        set: function (date) {\n            var minDate = this.toValidDate(date, null);\n            if (Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"f\" /* isChangedDate */])(this._state.minDate, minDate)) {\n                this._nextState({ minDate: minDate });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"navigation\", {\n        set: function (navigation) {\n            if (this._state.navigation !== navigation) {\n                this._nextState({ navigation: navigation });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgbDatepickerService.prototype.focus = function (date) {\n        if (!this._state.disabled && this._calendar.isValid(date) && Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"f\" /* isChangedDate */])(this._state.focusDate, date)) {\n            this._nextState({ focusDate: date });\n        }\n    };\n    NgbDatepickerService.prototype.focusMove = function (period, number) {\n        this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n    };\n    NgbDatepickerService.prototype.focusSelect = function () {\n        if (Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"g\" /* isDateSelectable */])(this._state.focusDate, this._state)) {\n            this.select(this._state.focusDate, { emitEvent: true });\n        }\n    };\n    NgbDatepickerService.prototype.open = function (date) {\n        var firstDate = this.toValidDate(date, this._calendar.getToday());\n        if (!this._state.disabled) {\n            this._nextState({ firstDate: firstDate });\n        }\n    };\n    NgbDatepickerService.prototype.select = function (date, options) {\n        if (options === void 0) { options = {}; }\n        var selectedDate = this.toValidDate(date, null);\n        if (!this._state.disabled) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"f\" /* isChangedDate */])(this._state.selectedDate, selectedDate)) {\n                this._nextState({ selectedDate: selectedDate });\n            }\n            if (options.emitEvent && Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"g\" /* isDateSelectable */])(selectedDate, this._state)) {\n                this._select$.next(selectedDate);\n            }\n        }\n    };\n    NgbDatepickerService.prototype.toValidDate = function (date, defaultValue) {\n        var ngbDate = __WEBPACK_IMPORTED_MODULE_1__ngb_date__[\"a\" /* NgbDate */].from(date);\n        if (defaultValue === undefined) {\n            defaultValue = this._calendar.getToday();\n        }\n        return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    };\n    NgbDatepickerService.prototype._nextState = function (patch) {\n        var newState = this._updateState(patch);\n        this._patchContexts(newState);\n        this._state = newState;\n        this._model$.next(this._state);\n    };\n    NgbDatepickerService.prototype._patchContexts = function (state) {\n        state.months.forEach(function (month) {\n            month.weeks.forEach(function (week) {\n                week.days.forEach(function (day) {\n                    // patch focus flag\n                    if (state.focusDate) {\n                        day.context.focused = state.focusDate.equals(day.date) && state.focusVisible;\n                    }\n                    // override context disabled\n                    if (state.disabled === true) {\n                        day.context.disabled = true;\n                    }\n                    // patch selection flag\n                    if (state.selectedDate !== undefined) {\n                        day.context.selected = state.selectedDate !== null && state.selectedDate.equals(day.date);\n                    }\n                });\n            });\n        });\n    };\n    NgbDatepickerService.prototype._updateState = function (patch) {\n        // patching fields\n        var state = Object.assign({}, this._state, patch);\n        var startDate = state.firstDate;\n        // min/max dates changed\n        if ('minDate' in patch || 'maxDate' in patch) {\n            Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"c\" /* checkMinBeforeMax */])(state.minDate, state.maxDate);\n            state.focusDate = Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"b\" /* checkDateInRange */])(state.focusDate, state.minDate, state.maxDate);\n            state.firstDate = Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"b\" /* checkDateInRange */])(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n        }\n        // disabled\n        if ('disabled' in patch) {\n            state.focusVisible = false;\n        }\n        // initial rebuild via 'select()'\n        if ('selectedDate' in patch && this._state.months.length === 0) {\n            startDate = state.selectedDate;\n        }\n        // focus date changed\n        if ('focusDate' in patch) {\n            state.focusDate = Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"b\" /* checkDateInRange */])(state.focusDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n            // nothing to rebuild if only focus changed and it is still visible\n            if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n                !state.focusDate.after(state.lastDate)) {\n                return state;\n            }\n        }\n        // first date changed\n        if ('firstDate' in patch) {\n            state.firstDate = Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"b\" /* checkDateInRange */])(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.firstDate;\n        }\n        // rebuilding months\n        if (startDate) {\n            var forceRebuild = 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch ||\n                'maxDate' in patch || 'disabled' in patch;\n            var months = Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"a\" /* buildMonths */])(this._calendar, startDate, state, forceRebuild);\n            // updating months and boundary dates\n            state.months = months;\n            state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n            state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n            // reset selected date if 'markDisabled' returns true\n            if ('selectedDate' in patch && !Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"g\" /* isDateSelectable */])(state.selectedDate, state)) {\n                state.selectedDate = null;\n            }\n            // adjusting focus after months were built\n            if ('firstDate' in patch) {\n                if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n                    state.focusDate.after(state.lastDate)) {\n                    state.focusDate = startDate;\n                }\n            }\n            // adjusting months/years for the select box navigation\n            var yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n            var monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n            if (state.navigation === 'select') {\n                // years ->  boundaries (min/max were changed)\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                    state.selectBoxes.years = Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"e\" /* generateSelectBoxYears */])(state.focusDate, state.minDate, state.maxDate);\n                }\n                // months -> when current year or boundaries change\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                    state.selectBoxes.months =\n                        Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"d\" /* generateSelectBoxMonths */])(this._calendar, state.focusDate, state.minDate, state.maxDate);\n                }\n            }\n            else {\n                state.selectBoxes = { years: [], months: [] };\n            }\n            // updating navigation arrows -> boundaries change (min/max) or month/year changes\n            if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                state.prevDisabled = state.disabled || Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"i\" /* prevMonthDisabled */])(this._calendar, state.firstDate, state.minDate);\n                state.nextDisabled = state.disabled || Object(__WEBPACK_IMPORTED_MODULE_5__datepicker_tools__[\"h\" /* nextMonthDisabled */])(this._calendar, state.lastDate, state.maxDate);\n            }\n        }\n        return state;\n    };\n    NgbDatepickerService.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerService.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__ngb_calendar__[\"a\" /* NgbCalendar */], },\n    ]; };\n    return NgbDatepickerService;\n}());\n\n//# sourceMappingURL=datepicker-service.js.map\n\n/***/ }),\n\n/***/ 119:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDatepickerConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbDatepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nvar NgbDatepickerConfig = (function () {\n    function NgbDatepickerConfig() {\n        this.displayMonths = 1;\n        this.firstDayOfWeek = 1;\n        this.navigation = 'select';\n        this.outsideDays = 'visible';\n        this.showWeekdays = true;\n        this.showWeekNumbers = false;\n    }\n    NgbDatepickerConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerConfig.ctorParameters = function () { return []; };\n    return NgbDatepickerConfig;\n}());\n\n//# sourceMappingURL=datepicker-config.js.map\n\n/***/ }),\n\n/***/ 120:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbDateParserFormatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDateISOParserFormatter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util__ = __webpack_require__(11);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\nvar /**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\nNgbDateParserFormatter = (function () {\n    function NgbDateParserFormatter() {\n    }\n    return NgbDateParserFormatter;\n}());\n/**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\n\nvar NgbDateISOParserFormatter = (function (_super) {\n    __extends(NgbDateISOParserFormatter, _super);\n    function NgbDateISOParserFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NgbDateISOParserFormatter.prototype.parse = function (value) {\n        if (value) {\n            var dateParts = value.trim().split('-');\n            if (dateParts.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(dateParts[0])) {\n                return { year: Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"h\" /* toInteger */])(dateParts[0]), month: null, day: null };\n            }\n            else if (dateParts.length === 2 && Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(dateParts[0]) && Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(dateParts[1])) {\n                return { year: Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"h\" /* toInteger */])(dateParts[0]), month: Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"h\" /* toInteger */])(dateParts[1]), day: null };\n            }\n            else if (dateParts.length === 3 && Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(dateParts[0]) && Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(dateParts[1]) && Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(dateParts[2])) {\n                return { year: Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"h\" /* toInteger */])(dateParts[0]), month: Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"h\" /* toInteger */])(dateParts[1]), day: Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"h\" /* toInteger */])(dateParts[2]) };\n            }\n        }\n        return null;\n    };\n    NgbDateISOParserFormatter.prototype.format = function (date) {\n        return date ?\n            date.year + \"-\" + (Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(date.month) ? Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"f\" /* padNumber */])(date.month) : '') + \"-\" + (Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(date.day) ? Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"f\" /* padNumber */])(date.day) : '') :\n            '';\n    };\n    return NgbDateISOParserFormatter;\n}(NgbDateParserFormatter));\n\n//# sourceMappingURL=ngb-date-parser-formatter.js.map\n\n/***/ }),\n\n/***/ 121:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDropdownConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbDropdown directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nvar NgbDropdownConfig = (function () {\n    function NgbDropdownConfig() {\n        this.autoClose = true;\n        this.placement = 'bottom-left';\n    }\n    NgbDropdownConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbDropdownConfig.ctorParameters = function () { return []; };\n    return NgbDropdownConfig;\n}());\n\n//# sourceMappingURL=dropdown-config.js.map\n\n/***/ }),\n\n/***/ 122:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbPaginationConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbPagination component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nvar NgbPaginationConfig = (function () {\n    function NgbPaginationConfig() {\n        this.disabled = false;\n        this.boundaryLinks = false;\n        this.directionLinks = true;\n        this.ellipses = true;\n        this.maxSize = 0;\n        this.pageSize = 10;\n        this.rotate = false;\n    }\n    NgbPaginationConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbPaginationConfig.ctorParameters = function () { return []; };\n    return NgbPaginationConfig;\n}());\n\n//# sourceMappingURL=pagination-config.js.map\n\n/***/ }),\n\n/***/ 123:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbPopoverConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbPopover directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nvar NgbPopoverConfig = (function () {\n    function NgbPopoverConfig() {\n        this.placement = 'top';\n        this.triggers = 'click';\n        this.disablePopover = false;\n    }\n    NgbPopoverConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbPopoverConfig.ctorParameters = function () { return []; };\n    return NgbPopoverConfig;\n}());\n\n//# sourceMappingURL=popover-config.js.map\n\n/***/ }),\n\n/***/ 124:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbProgressbarConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbProgressbar component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nvar NgbProgressbarConfig = (function () {\n    function NgbProgressbarConfig() {\n        this.max = 100;\n        this.animated = false;\n        this.striped = false;\n        this.showValue = false;\n    }\n    NgbProgressbarConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbProgressbarConfig.ctorParameters = function () { return []; };\n    return NgbProgressbarConfig;\n}());\n\n//# sourceMappingURL=progressbar-config.js.map\n\n/***/ }),\n\n/***/ 125:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbRatingConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nvar NgbRatingConfig = (function () {\n    function NgbRatingConfig() {\n        this.max = 10;\n        this.readonly = false;\n        this.resettable = false;\n    }\n    NgbRatingConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbRatingConfig.ctorParameters = function () { return []; };\n    return NgbRatingConfig;\n}());\n\n//# sourceMappingURL=rating-config.js.map\n\n/***/ }),\n\n/***/ 126:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbTabsetConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbTabset component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\nvar NgbTabsetConfig = (function () {\n    function NgbTabsetConfig() {\n        this.justify = 'start';\n        this.orientation = 'horizontal';\n        this.type = 'tabs';\n    }\n    NgbTabsetConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbTabsetConfig.ctorParameters = function () { return []; };\n    return NgbTabsetConfig;\n}());\n\n//# sourceMappingURL=tabset-config.js.map\n\n/***/ }),\n\n/***/ 127:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbTimepickerConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbTimepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nvar NgbTimepickerConfig = (function () {\n    function NgbTimepickerConfig() {\n        this.meridian = false;\n        this.spinners = true;\n        this.seconds = false;\n        this.hourStep = 1;\n        this.minuteStep = 1;\n        this.secondStep = 1;\n        this.disabled = false;\n        this.readonlyInputs = false;\n        this.size = 'medium';\n    }\n    NgbTimepickerConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbTimepickerConfig.ctorParameters = function () { return []; };\n    return NgbTimepickerConfig;\n}());\n\n//# sourceMappingURL=timepicker-config.js.map\n\n/***/ }),\n\n/***/ 128:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbTooltipConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbTooltip directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nvar NgbTooltipConfig = (function () {\n    function NgbTooltipConfig() {\n        this.placement = 'top';\n        this.triggers = 'hover';\n        this.disableTooltip = false;\n    }\n    NgbTooltipConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbTooltipConfig.ctorParameters = function () { return []; };\n    return NgbTooltipConfig;\n}());\n\n//# sourceMappingURL=tooltip-config.js.map\n\n/***/ }),\n\n/***/ 129:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbTypeaheadWindow; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(11);\n\n\nvar NgbTypeaheadWindow = (function () {\n    function NgbTypeaheadWindow() {\n        this.activeIdx = 0;\n        /**\n           * Flag indicating if the first row should be active initially\n           */\n        this.focusFirst = true;\n        /**\n           * A function used to format a given result before display. This function should return a formatted string without any\n           * HTML markup\n           */\n        this.formatter = __WEBPACK_IMPORTED_MODULE_1__util_util__[\"i\" /* toString */];\n        /**\n           * Event raised when user selects a particular result row\n           */\n        this.selectEvent = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.activeChangeEvent = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgbTypeaheadWindow.prototype.hasActive = function () { return this.activeIdx > -1 && this.activeIdx < this.results.length; };\n    NgbTypeaheadWindow.prototype.getActive = function () { return this.results[this.activeIdx]; };\n    NgbTypeaheadWindow.prototype.markActive = function (activeIdx) {\n        this.activeIdx = activeIdx;\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.next = function () {\n        if (this.activeIdx === this.results.length - 1) {\n            this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n        }\n        else {\n            this.activeIdx++;\n        }\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.prev = function () {\n        if (this.activeIdx < 0) {\n            this.activeIdx = this.results.length - 1;\n        }\n        else if (this.activeIdx === 0) {\n            this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n        }\n        else {\n            this.activeIdx--;\n        }\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.resetActive = function () {\n        this.activeIdx = this.focusFirst ? 0 : -1;\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.select = function (item) { this.selectEvent.emit(item); };\n    NgbTypeaheadWindow.prototype.ngOnInit = function () { this.resetActive(); };\n    NgbTypeaheadWindow.prototype._activeChanged = function () {\n        this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    };\n    NgbTypeaheadWindow.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-typeahead-window',\n                    exportAs: 'ngbTypeaheadWindow',\n                    host: { 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id' },\n                    template: \"\\n    <ng-template #rt let-result=\\\"result\\\" let-term=\\\"term\\\" let-formatter=\\\"formatter\\\">\\n      <ngb-highlight [result]=\\\"formatter(result)\\\" [term]=\\\"term\\\"></ngb-highlight>\\n    </ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"results\\\" let-result let-idx=\\\"index\\\">\\n      <button type=\\\"button\\\" class=\\\"dropdown-item\\\" role=\\\"option\\\"\\n        [id]=\\\"id + '-' + idx\\\"\\n        [class.active]=\\\"idx === activeIdx\\\"\\n        (mouseenter)=\\\"markActive(idx)\\\"\\n        (click)=\\\"select(result)\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"resultTemplate || rt\\\"\\n          [ngTemplateOutletContext]=\\\"{result: result, term: term, formatter: formatter}\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTypeaheadWindow.ctorParameters = function () { return []; };\n    NgbTypeaheadWindow.propDecorators = {\n        \"id\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"focusFirst\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"results\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"term\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"formatter\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"resultTemplate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"selectEvent\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['select',] },],\n        \"activeChangeEvent\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['activeChange',] },],\n    };\n    return NgbTypeaheadWindow;\n}());\n\n//# sourceMappingURL=typeahead-window.js.map\n\n/***/ }),\n\n/***/ 130:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbTypeaheadConfig; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * Configuration service for the NgbTypeahead component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nvar NgbTypeaheadConfig = (function () {\n    function NgbTypeaheadConfig() {\n        this.editable = true;\n        this.focusFirst = true;\n        this.showHint = false;\n        this.placement = 'bottom-left';\n    }\n    NgbTypeaheadConfig.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbTypeaheadConfig.ctorParameters = function () { return []; };\n    return NgbTypeaheadConfig;\n}());\n\n//# sourceMappingURL=typeahead-config.js.map\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDate; });\nvar NgbDate = (function () {\n    function NgbDate(year, month, day) {\n        this.year = year;\n        this.month = month;\n        this.day = day;\n    }\n    NgbDate.from = function (date) {\n        return date ? new NgbDate(date.year, date.month, date.day ? date.day : 1) : null;\n    };\n    NgbDate.prototype.equals = function (other) {\n        return other && this.year === other.year && this.month === other.month && this.day === other.day;\n    };\n    NgbDate.prototype.before = function (other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    };\n    NgbDate.prototype.after = function (other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    };\n    NgbDate.prototype.toStruct = function () { return { year: this.year, month: this.month, day: this.day }; };\n    NgbDate.prototype.toString = function () { return this.year + \"-\" + this.month + \"-\" + this.day; };\n    return NgbDate;\n}());\n\n//# sourceMappingURL=ngb-date.js.map\n\n/***/ }),\n\n/***/ 25:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractControlDirective\", function() { return AbstractControlDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractFormGroupDirective\", function() { return AbstractFormGroupDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CheckboxControlValueAccessor\", function() { return CheckboxControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ControlContainer\", function() { return ControlContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_VALUE_ACCESSOR\", function() { return NG_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMPOSITION_BUFFER_MODE\", function() { return COMPOSITION_BUFFER_MODE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultValueAccessor\", function() { return DefaultValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControl\", function() { return NgControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControlStatus\", function() { return NgControlStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControlStatusGroup\", function() { return NgControlStatusGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgForm\", function() { return NgForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgModel\", function() { return NgModel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgModelGroup\", function() { return NgModelGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadioControlValueAccessor\", function() { return RadioControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControlDirective\", function() { return FormControlDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControlName\", function() { return FormControlName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroupDirective\", function() { return FormGroupDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormArrayName\", function() { return FormArrayName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroupName\", function() { return FormGroupName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgSelectOption\", function() { return NgSelectOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectControlValueAccessor\", function() { return SelectControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectMultipleControlValueAccessor\", function() { return SelectMultipleControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CheckboxRequiredValidator\", function() { return CheckboxRequiredValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EmailValidator\", function() { return EmailValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MaxLengthValidator\", function() { return MaxLengthValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MinLengthValidator\", function() { return MinLengthValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PatternValidator\", function() { return PatternValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RequiredValidator\", function() { return RequiredValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormBuilder\", function() { return FormBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractControl\", function() { return AbstractControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormArray\", function() { return FormArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControl\", function() { return FormControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroup\", function() { return FormGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_ASYNC_VALIDATORS\", function() { return NG_ASYNC_VALIDATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_VALIDATORS\", function() { return NG_VALIDATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Validators\", function() { return Validators; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormsModule\", function() { return FormsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactiveFormsModule\", function() { return ReactiveFormsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵba\", function() { return InternalFormsSharedModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵz\", function() { return REACTIVE_DRIVEN_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵx\", function() { return SHARED_FORM_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵy\", function() { return TEMPLATE_DRIVEN_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return CHECKBOX_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return DEFAULT_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return AbstractControlStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return ngControlStatusHost; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return formDirectiveProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return formControlBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return modelGroupProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbf\", function() { return NgNoValidate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbb\", function() { return NUMBER_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbc\", function() { return NumberValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return RADIO_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵi\", function() { return RadioControlRegistry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbd\", function() { return RANGE_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbe\", function() { return RangeValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵj\", function() { return formControlBinding$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵk\", function() { return controlNameBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵl\", function() { return formDirectiveProvider$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵn\", function() { return formArrayNameProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵm\", function() { return formGroupNameProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵo\", function() { return SELECT_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵq\", function() { return NgSelectMultipleOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵp\", function() { return SELECT_MULTIPLE_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵs\", function() { return CHECKBOX_REQUIRED_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵt\", function() { return EMAIL_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵv\", function() { return MAX_LENGTH_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵu\", function() { return MIN_LENGTH_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵw\", function() { return PATTERN_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵr\", function() { return REQUIRED_VALIDATOR; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__ = __webpack_require__(170);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__ = __webpack_require__(101);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__ = __webpack_require__(98);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__ = __webpack_require__(31);\n/**\n * @license Angular v5.2.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControlDirective = /** @class */ (function () {\n    function AbstractControlDirective() {\n    }\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        /** The value of the control. */\n        get: /**\n         * The value of the control.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         */\n        get: /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         */\n        get: /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         */\n        get: /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         */\n        get: /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         */\n        get: /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         */\n        get: /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.errors : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         */\n        get: /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         */\n        get: /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        get: /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"status\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.control ? this.control.status : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         */\n        get: /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         */\n        get: /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        function () {\n            return this.control ? this.control.statusChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         */\n        get: /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        function () {\n            return this.control ? this.control.valueChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        /**\n         * Returns an array that represents the path from the top-level form\n         * to this control. Each index is the string name of the control on\n         * that level.\n         */\n        get: /**\n         * Returns an array that represents the path from the top-level form\n         * to this control. Each index is the string name of the control on\n         * that level.\n         * @return {?}\n         */\n        function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {@link AbstractControl}.\n     */\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {\\@link AbstractControl}.\n     * @param {?=} value\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.reset = /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {\\@link AbstractControl}.\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = undefined; }\n        if (this.control)\n            this.control.reset(value);\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     */\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.hasError = /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    function (errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     */\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.getError = /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    function (errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    };\n    return AbstractControlDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar ControlContainer = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ControlContainer, _super);\n    function ControlContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         */\n        get: /**\n         * Get the form to which this container belongs.\n         * @return {?}\n         */\n        function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         */\n        get: /**\n         * Get the path to this container.\n         * @return {?}\n         */\n        function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * ### Example\n *\n * ```typescript\n * \\@Directive({\n *   selector: '[custom-validator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return {\"custom\": true};\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar NG_VALIDATORS = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {\\@link NG_VALIDATORS} for more details.\n *\n * \\@stable\n */\nvar NG_ASYNC_VALIDATORS = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('NgAsyncValidators');\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * \\@stable\n */\nvar Validators = /** @class */ (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a value greater than a number.\n     *`min()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.min(3));`.\n     */\n    /**\n     * Validator that requires controls to have a value greater than a number.\n     * `min()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.min(3));`.\n     * @param {?} min\n     * @return {?}\n     */\n    Validators.min = /**\n     * Validator that requires controls to have a value greater than a number.\n     * `min()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.min(3));`.\n     * @param {?} min\n     * @return {?}\n     */\n    function (min) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value less than a number.\n     * `max()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.max(15));`.\n     */\n    /**\n     * Validator that requires controls to have a value less than a number.\n     * `max()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.max(15));`.\n     * @param {?} max\n     * @return {?}\n     */\n    Validators.max = /**\n     * Validator that requires controls to have a value less than a number.\n     * `max()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.max(15));`.\n     * @param {?} max\n     * @return {?}\n     */\n    function (max) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a non-empty value.\n     */\n    /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.required = /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    };\n    /**\n     * Validator that requires control value to be true.\n     */\n    /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.requiredTrue = /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        return control.value === true ? null : { 'required': true };\n    };\n    /**\n     * Validator that performs email validation.\n     */\n    /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.email = /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     */\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    Validators.minLength = /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    function (minLength) {\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     */\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    Validators.maxLength = /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    function (maxLength) {\n        return function (control) {\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     */\n    /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    Validators.pattern = /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    function (pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        var /** @type {?} */ regex;\n        var /** @type {?} */ regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    };\n    /**\n     * No-op validator.\n     */\n    /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    Validators.nullValidator = /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) { return null; };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.compose = /**\n     * @param {?} validators\n     * @return {?}\n     */\n    function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = /** @type {?} */ (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.composeAsync = /**\n     * @param {?} validators\n     * @return {?}\n     */\n    function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = /** @type {?} */ (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__[\"map\"].call(Object(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__[\"forkJoin\"])(observables), _mergeErrors);\n        };\n    };\n    return Validators;\n}());\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    var /** @type {?} */ obs = Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵisPromise\"])(r) ? Object(__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__[\"fromPromise\"])(r) : r;\n    if (!(Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵisObservable\"])(obs))) {\n        throw new Error(\"Expected validator to return Promise or Observable.\");\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n        return errors != null ? Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */])({}, /** @type {?} */ ((res)), errors) : /** @type {?} */ ((res));\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `ControlValueAccessor` acts as a bridge between the Angular forms API and a\n * native element in the DOM.\n *\n * Implement this interface if you want to create a custom form control directive\n * that integrates with Angular forms.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n *\n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nvar NG_VALUE_ACCESSOR = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('NgValueAccessor');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return CheckboxControlValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar CheckboxControlValueAccessor = /** @class */ (function () {\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    CheckboxControlValueAccessor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                    providers: [CHECKBOX_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    CheckboxControlValueAccessor.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    ]; };\n    return CheckboxControlValueAccessor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    var /** @type {?} */ userAgent = Object(__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__[\"ɵgetDOM\"])() ? Object(__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__[\"ɵgetDOM\"])().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nvar COMPOSITION_BUFFER_MODE = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar DefaultValueAccessor = /** @class */ (function () {\n    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        /**\n         * Whether the user is creating a composition string (IME events).\n         */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._handleInput = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionStart = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { this._composing = true; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionEnd = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    };\n    DefaultValueAccessor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngModel],[formControl],[formControlName]',\n                    host: {\n                        '(input)': '$any(this)._handleInput($event.target.value)',\n                        '(blur)': 'onTouched()',\n                        '(compositionstart)': '$any(this)._compositionStart()',\n                        '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                    },\n                    providers: [DEFAULT_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    DefaultValueAccessor.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [COMPOSITION_BUFFER_MODE,] },] },\n    ]; };\n    return DefaultValueAccessor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if ((/** @type {?} */ (validator)).validate) {\n        return function (c) { return (/** @type {?} */ (validator)).validate(c); };\n    }\n    else {\n        return /** @type {?} */ (validator);\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if ((/** @type {?} */ (validator)).validate) {\n        return function (c) { return (/** @type {?} */ (validator)).validate(c); };\n    }\n    else {\n        return /** @type {?} */ (validator);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nvar NumberValueAccessor = /** @class */ (function () {\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    NumberValueAccessor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()'\n                    },\n                    providers: [NUMBER_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NumberValueAccessor.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    ]; };\n    return NumberValueAccessor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * \\@stable\n * @abstract\n */\nvar NgControl = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NgControl, _super);\n    function NgControl() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * \\@internal\n         */\n        _this._parent = null;\n        _this.name = null;\n        _this.valueAccessor = null;\n        /**\n         * \\@internal\n         */\n        _this._rawValidators = [];\n        /**\n         * \\@internal\n         */\n        _this._rawAsyncValidators = [];\n        return _this;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    return NgControl;\n}(AbstractControlDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nvar RadioControlRegistry = /** @class */ (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.add = /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.remove = /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    function (accessor) {\n        for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.select = /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype._isSameGroup = /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    RadioControlRegistry.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    RadioControlRegistry.ctorParameters = function () { return []; };\n    return RadioControlRegistry;\n}());\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use radio buttons with form directives\n *\n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n *\n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n *\n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  \\@stable\n */\nvar RadioControlValueAccessor = /** @class */ (function () {\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this._registry.remove(this); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.fireUncheck = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { this.writeValue(value); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._checkName = /**\n     * @return {?}\n     */\n    function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._throwNameError = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    RadioControlValueAccessor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                    host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                    providers: [RADIO_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    RadioControlValueAccessor.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n        { type: RadioControlRegistry, },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injector\"], },\n    ]; };\n    RadioControlValueAccessor.propDecorators = {\n        \"name\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n        \"formControlName\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n        \"value\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    };\n    return RadioControlValueAccessor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return RangeValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nvar RangeValueAccessor = /** @class */ (function () {\n    function RangeValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    RangeValueAccessor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()'\n                    },\n                    providers: [RANGE_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    RangeValueAccessor.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    ]; };\n    return RangeValueAccessor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use select controls with form directives\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Caveat: Option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar SelectControlValueAccessor = /** @class */ (function () {\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵlooseIdentical\"];\n    }\n    Object.defineProperty(SelectControlValueAccessor.prototype, \"compareWith\", {\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.value = value;\n        var /** @type {?} */ id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        var /** @type {?} */ valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = _this._getOptionValue(valueString);\n            fn(_this.value);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._registerOption = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { return (this._idCounter++).toString(); };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionId = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionValue = /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    function (valueString) {\n        var /** @type {?} */ id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    };\n    SelectControlValueAccessor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                    host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    SelectControlValueAccessor.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    ]; };\n    SelectControlValueAccessor.propDecorators = {\n        \"compareWith\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    };\n    return SelectControlValueAccessor;\n}());\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * \\@howToUse\n *\n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n *\n * \\@stable\n */\nvar NgSelectOption = /** @class */ (function () {\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectOption.prototype._setElementValue = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectOption.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    NgSelectOption.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: 'option' },] },\n    ];\n    /** @nocollapse */\n    NgSelectOption.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n        { type: SelectControlValueAccessor, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] },] },\n    ]; };\n    NgSelectOption.propDecorators = {\n        \"ngValue\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngValue',] },],\n        \"value\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['value',] },],\n    };\n    return NgSelectOption;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (typeof value === 'string')\n        value = \"'\" + value + \"'\";\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n *  ### Caveat: Options selection\n *\n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * \\@stable\n */\nvar SelectMultipleControlValueAccessor = /** @class */ (function () {\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵlooseIdentical\"];\n    }\n    Object.defineProperty(SelectMultipleControlValueAccessor.prototype, \"compareWith\", {\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var _this = this;\n        this.value = value;\n        var /** @type {?} */ optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var /** @type {?} */ selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var /** @type {?} */ options = _.selectedOptions;\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var /** @type {?} */ options = /** @type {?} */ (_.options);\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    if (opt.selected) {\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            _this.value = selected;\n            fn(selected);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._registerOption = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(/** @type {?} */ ((this._optionMap.get(id)))._value, value))\n                return id;\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    function (valueString) {\n        var /** @type {?} */ id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? /** @type {?} */ ((this._optionMap.get(id)))._value : valueString;\n    };\n    SelectMultipleControlValueAccessor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                    host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    SelectMultipleControlValueAccessor.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n    ]; };\n    SelectMultipleControlValueAccessor.propDecorators = {\n        \"compareWith\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    };\n    return SelectMultipleControlValueAccessor;\n}());\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nvar NgSelectMultipleOption = /** @class */ (function () {\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setElementValue = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setSelected = /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    function (selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    NgSelectMultipleOption.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: 'option' },] },\n    ];\n    /** @nocollapse */\n    NgSelectMultipleOption.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n        { type: SelectMultipleControlValueAccessor, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] },] },\n    ]; };\n    NgSelectMultipleOption.propDecorators = {\n        \"ngValue\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngValue',] },],\n        \"value\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['value',] },],\n    };\n    return NgSelectMultipleOption;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return /** @type {?} */ ((parent.path)).concat([name]);\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([/** @type {?} */ ((control.validator)), dir.validator]);\n    control.asyncValidator = Validators.composeAsync([/** @type {?} */ ((control.asyncValidator)), dir.asyncValidator]); /** @type {?} */\n    ((dir.valueAccessor)).writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if (/** @type {?} */ ((dir.valueAccessor)).setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { /** @type {?} */ ((/** @type {?} */ ((dir.valueAccessor)).setDisabledState))(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if ((/** @type {?} */ (validator)).registerOnValidatorChange)\n            /** @type {?} */ (((/** @type {?} */ (validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if ((/** @type {?} */ (validator)).registerOnValidatorChange)\n            /** @type {?} */ (((/** @type {?} */ (validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    /** @type {?} */ ((dir.valueAccessor)).registerOnChange(function () { return _noControlError(dir); }); /** @type {?} */\n    ((dir.valueAccessor)).registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpViewChangePipeline(control, dir) {\n    /** @type {?} */ ((dir.valueAccessor)).registerOnChange(function (newValue) {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpBlurPipeline(control, dir) {\n    /** @type {?} */ ((dir.valueAccessor)).registerOnTouched(function () {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction updateControl(control, dir) {\n    dir.viewToModelUpdate(control._pendingValue);\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    control._pendingChange = false;\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        /** @type {?} */ ((\n        // control -> view\n        dir.valueAccessor)).writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    var /** @type {?} */ messageEnd;\n    if (/** @type {?} */ ((dir.path)).length > 1) {\n        messageEnd = \"path: '\" + (/** @type {?} */ ((dir.path))).join(' -> ') + \"'\";\n    }\n    else if (/** @type {?} */ ((dir.path))[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    var /** @type {?} */ change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ɵlooseIdentical\"])(viewModel, change.currentValue);\n}\nvar BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n}\n/**\n * @param {?} form\n * @param {?} directives\n * @return {?}\n */\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(function (dir) {\n        var /** @type {?} */ control = /** @type {?} */ (dir.control);\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    var /** @type {?} */ defaultAccessor = undefined;\n    var /** @type {?} */ builtinAccessor = undefined;\n    var /** @type {?} */ customAccessor = undefined;\n    valueAccessors.forEach(function (v) {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction removeDir(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n *\n * \\@stable\n */\nvar AbstractFormGroupDirective = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormGroup(this);\n    };\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {@link FormGroup} backing this binding.\n         */\n        get: /**\n         * Get the {\\@link FormGroup} backing this binding.\n         * @return {?}\n         */\n        function () { return /** @type {?} */ ((this.formDirective)).getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         */\n        get: /**\n         * Get the path to this control group.\n         * @return {?}\n         */\n        function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {@link Form} to which this group belongs.\n         */\n        get: /**\n         * Get the {\\@link Form} to which this group belongs.\n         * @return {?}\n         */\n        function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype._checkParentType = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractControlStatus = /** @class */ (function () {\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.untouched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.touched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.pristine : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.dirty : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.valid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.invalid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.pending : false; },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nvar ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * \\@stable\n */\nvar NgControlStatus = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NgControlStatus, _super);\n    function NgControlStatus(cd) {\n        return _super.call(this, cd) || this;\n    }\n    NgControlStatus.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n    ];\n    /** @nocollapse */\n    NgControlStatus.ctorParameters = function () { return [\n        { type: NgControl, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] },] },\n    ]; };\n    return NgControlStatus;\n}(AbstractControlStatus));\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatusGroup = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NgControlStatusGroup, _super);\n    function NgControlStatusGroup(cd) {\n        return _super.call(this, cd) || this;\n    }\n    NgControlStatusGroup.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                    host: ngControlStatusHost\n                },] },\n    ];\n    /** @nocollapse */\n    NgControlStatusGroup.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] },] },\n    ]; };\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nvar VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nvar INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nvar PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nvar DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = (/** @type {?} */ (path)).split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return (/** @type {?} */ (path)).reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return v.controls[name] || null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(/** @type {?} */ (name)) || null;\n        }\n        return null;\n    }, control);\n}\n/**\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction coerceToValidator(validatorOrOpts) {\n    var /** @type {?} */ validator = /** @type {?} */ ((isOptionsObj(validatorOrOpts) ? (/** @type {?} */ (validatorOrOpts)).validators :\n        validatorOrOpts));\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator, validatorOrOpts) {\n    var /** @type {?} */ origAsyncValidator = /** @type {?} */ ((isOptionsObj(validatorOrOpts) ? (/** @type {?} */ (validatorOrOpts)).asyncValidators :\n        asyncValidator));\n    return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) :\n        origAsyncValidator || null;\n}\n/**\n * @record\n */\n\n/**\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControl = /** @class */ (function () {\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = function () { };\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    Object.defineProperty(AbstractControl.prototype, \"parent\", {\n        /**\n         * The parent control.\n         */\n        get: /**\n         * The parent control.\n         * @return {?}\n         */\n        function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         */\n        get: /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        function () { return this.status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         */\n        get: /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        function () { return this.status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         */\n        get: /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        function () { return this.status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         */\n        get: /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        function () { return this.status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         */\n        get: /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        function () { return this.status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         */\n        get: /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         */\n        get: /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        function () { return !this.touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"updateOn\", {\n        /**\n         * Returns the update strategy of the `AbstractControl` (i.e.\n         * the event on which the control will update itself).\n         * Possible values: `'change'` (default) | `'blur'` | `'submit'`\n         */\n        get: /**\n         * Returns the update strategy of the `AbstractControl` (i.e.\n         * the event on which the control will update itself).\n         * Possible values: `'change'` (default) | `'blur'` | `'submit'`\n         * @return {?}\n         */\n        function () {\n            return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     */\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setValidators = /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     */\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setAsyncValidators = /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    /**\n     * Empties out the sync validator list.\n     */\n    /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearValidators = /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    function () { this.validator = null; };\n    /**\n     * Empties out the async validator list.\n     */\n    /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearAsyncValidators = /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    function () { this.asyncValidator = null; };\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     */\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsTouched = /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     */\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsUntouched = /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).touched = false;\n        this._pendingTouched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     */\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsDirty = /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    };\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     */\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPristine = /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * Marks the control as `pending`.\n     */\n    /**\n     * Marks the control as `pending`.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPending = /**\n     * Marks the control as `pending`.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).status = PENDING;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    };\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     */\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.disable = /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).status = DISABLED;\n        (/** @type {?} */ (this)).errors = null;\n        this._forEachChild(function (control) { control.disable(Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */])({}, opts, { onlySelf: true })); });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            (/** @type {?} */ (this.valueChanges)).emit(this.value);\n            (/** @type {?} */ (this.statusChanges)).emit(this.status);\n        }\n        this._updateAncestors(opts);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n    };\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     */\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.enable = /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).status = VALID;\n        this._forEachChild(function (control) { control.enable(Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */])({}, opts, { onlySelf: true })); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(opts);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateAncestors = /**\n     * @param {?} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControl.prototype.setParent = /**\n     * @param {?} parent\n     * @return {?}\n     */\n    function (parent) { this._parent = parent; };\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     */\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.updateValueAndValidity = /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            (/** @type {?} */ (this)).errors = this._runValidator();\n            (/** @type {?} */ (this)).status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            (/** @type {?} */ (this.valueChanges)).emit(this.value);\n            (/** @type {?} */ (this.statusChanges)).emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTreeValidity = /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = { emitEvent: true }; }\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity(opts); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._setInitialStatus = /**\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this)).status = this._allControlsDisabled() ? DISABLED : VALID;\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._runValidator = /**\n     * @return {?}\n     */\n    function () {\n        return this.validator ? this.validator(this) : null;\n    };\n    /**\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._runAsyncValidator = /**\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    function (emitEvent) {\n        var _this = this;\n        if (this.asyncValidator) {\n            (/** @type {?} */ (this)).status = PENDING;\n            var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe(function (errors) { return _this.setErrors(errors, { emitEvent: emitEvent }); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._cancelExistingSubscription = /**\n     * @return {?}\n     */\n    function () {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.setErrors = /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (errors, opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    };\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     */\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControl.prototype.get = /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) { return _find(this, path, '.'); };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     */\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.getError = /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    function (errorCode, path) {\n        var /** @type {?} */ control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     */\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.hasError = /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    function (errorCode, path) { return !!this.getError(errorCode, path); };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        /**\n         * Retrieves the top-level ancestor of this control.\n         */\n        get: /**\n         * Retrieves the top-level ancestor of this control.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ x = this;\n            while (x._parent) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._updateControlsErrors = /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    function (emitEvent) {\n        (/** @type {?} */ (this)).status = this._calculateStatus();\n        if (emitEvent) {\n            (/** @type {?} */ (this.statusChanges)).emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._initObservables = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this)).valueChanges = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        (/** @type {?} */ (this)).statusChanges = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._calculateStatus = /**\n     * @return {?}\n     */\n    function () {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsHaveStatus = /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    function (status) {\n        return this._anyControls(function (control) { return control.status === status; });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsDirty = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsTouched = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updatePristine = /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTouched = /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    AbstractControl.prototype._isBoxedValue = /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    function (formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    AbstractControl.prototype._registerOnCollectionChange = /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onCollectionChange = fn; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._setUpdateStrategy = /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (isOptionsObj(opts) && (/** @type {?} */ (opts)).updateOn != null) {\n            this._updateOn = /** @type {?} */ (((/** @type {?} */ (opts)).updateOn));\n        }\n    };\n    return AbstractControl;\n}());\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n *\n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n *\n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n *\n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n *\n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n *\n * The second {\\@link FormControl} argument can accept one of three things:\n * * a sync validator function\n * * an array of sync validator functions\n * * an options object containing validator and/or async validator functions\n *\n * Example of a single sync validator function:\n *\n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n *\n * Example using options object:\n *\n * ```ts\n * const ctrl = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * The options object can also be used to define when the control should update.\n * By default, the value and validity of a control updates whenever the value\n * changes. You can configure it to update on the blur event instead by setting\n * the `updateOn` option to `'blur'`.\n *\n * ```ts\n * const c = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * You can also set `updateOn` to `'submit'`, which will delay value and validity\n * updates until the parent form of the control fires a submit event.\n *\n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormControl = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FormControl, _super);\n    function FormControl(formState, validatorOrOpts, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;\n        /**\n         * \\@internal\n         */\n        _this._onChange = [];\n        _this._applyFormState(formState);\n        _this._setUpdateStrategy(validatorOrOpts);\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        _this._initObservables();\n        return _this;\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     */\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.setValue = /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        (/** @type {?} */ (this)).value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this.value, options.emitViewToModelChange !== false); });\n        }\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     */\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.patchValue = /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     */\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.reset = /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    function (formState, options) {\n        if (formState === void 0) { formState = null; }\n        if (options === void 0) { options = {}; }\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._updateValue = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormControl.prototype._anyControls = /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    function (condition) { return false; };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._allControlsDisabled = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     */\n    /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnChange = /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange.push(fn); };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._clearChangeFns = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = function () { };\n    };\n    /**\n     * Register a listener for disabled events.\n     */\n    /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnDisabledChange = /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._onDisabledChange.push(fn);\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormControl.prototype._forEachChild = /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) { };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._syncPendingControls = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} formState\n     * @return {?}\n     */\n    FormControl.prototype._applyFormState = /**\n     * @param {?} formState\n     * @return {?}\n     */\n    function (formState) {\n        if (this._isBoxedValue(formState)) {\n            (/** @type {?} */ (this)).value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            (/** @type {?} */ (this)).value = this._pendingValue = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n *\n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like {\\@link FormControl} instances, you can alternatively choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, {validators: passwordMatchValidator, asyncValidators: otherValidator});\n * ```\n *\n * The options object can also be used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls will default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *    one: new FormControl()\n * }, {updateOn: 'blur'});\n * ```\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormGroup = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FormGroup, _super);\n    function FormGroup(controls, validatorOrOpts, asyncValidator) {\n        var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpdateStrategy(validatorOrOpts);\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control, so for most cases you'll want\n     * to use {@link FormGroup#addControl addControl} instead.\n     */\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control, so for most cases you'll want\n     * to use {\\@link FormGroup#addControl addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.registerControl = /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control, so for most cases you'll want\n     * to use {\\@link FormGroup#addControl addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     */\n    /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.addControl = /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove a control from this group.\n     */\n    /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype.removeControl = /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     */\n    /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.setControl = /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    function (name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for existence in the group\n     * only, use {@link AbstractControl#get get} instead.\n     */\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for existence in the group\n     * only, use {\\@link AbstractControl#get get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    FormGroup.prototype.contains = /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for existence in the group\n     * only, use {\\@link AbstractControl#get get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    function (controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    };\n    /**\n     *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     */\n    /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.setValue = /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(function (name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     */\n    /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.patchValue = /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        Object.keys(value).forEach(function (name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.reset = /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        if (value === void 0) { value = {}; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the {@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     */\n    /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    FormGroup.prototype.getRawValue = /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control instanceof FormControl ? control.value : (/** @type {?} */ (control)).getRawValue();\n            return acc;\n        });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._syncPendingControls = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ subtreeUpdated = this._reduceChildren(false, function (updated, child) {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype._throwIfControlMissing = /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormGroup.prototype._forEachChild = /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var _this = this;\n        Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._setUpControls = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._forEachChild(function (control) {\n            control.setParent(_this);\n            control._registerOnCollectionChange(_this._onCollectionChange);\n        });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._updateValue = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).value = this._reduceValue(); };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormGroup.prototype._anyControls = /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    function (condition) {\n        var _this = this;\n        var /** @type {?} */ res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._reduceValue = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    FormGroup.prototype._reduceChildren = /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    function (initValue, fn) {\n        var /** @type {?} */ res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._allControlsDisabled = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n            var controlName = _a[_i];\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroup.prototype._checkAllValuesPresent = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n *\n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n *\n * ### Example\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * You can also include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators can be passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * The options object can also be used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls will default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormArray = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FormArray, _super);\n    function FormArray(controls, validatorOrOpts, asyncValidator) {\n        var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpdateStrategy(validatorOrOpts);\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Get the {@link AbstractControl} at the given `index` in the array.\n     */\n    /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.at = /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {@link AbstractControl} at the end of the array.\n     */\n    /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.push = /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /** Insert a new {@link AbstractControl} at the given `index` in the array. */\n    /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.insert = /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    function (index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    };\n    /** Remove the control at the given `index` in the array. */\n    /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.removeAt = /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Replace an existing control.\n     */\n    /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.setControl = /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    function (index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         */\n        get: /**\n         * Length of the control array.\n         * @return {?}\n         */\n        function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Sets the value of the {@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     */\n    /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.setValue = /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     */\n    /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.patchValue = /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     */\n    /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.reset = /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        if (value === void 0) { value = []; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     */\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    FormArray.prototype.getRawValue = /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    function () {\n        return this.controls.map(function (control) {\n            return control instanceof FormControl ? control.value : (/** @type {?} */ (control)).getRawValue();\n        });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._syncPendingControls = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ subtreeUpdated = this.controls.reduce(function (updated, child) {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype._throwIfControlMissing = /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormArray.prototype._forEachChild = /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._updateValue = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        (/** @type {?} */ (this)).value =\n            this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormArray.prototype._anyControls = /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._setUpControls = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._forEachChild(function (control) { return _this._registerControl(control); });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormArray.prototype._checkAllValuesPresent = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._allControlsDisabled = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    };\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype._registerControl = /**\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    };\n    return FormArray;\n}(AbstractControl));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * \\@howToUse\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * If you want to import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, you can add `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgForm = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NgForm, _super);\n    function NgForm(validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this.submitted = false;\n        _this._directives = [];\n        _this.ngSubmit = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () { this._setUpdateStrategy(); };\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            (/** @type {?} */ (dir)).control = /** @type {?} */ (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            _this._directives.push(dir);\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { return /** @type {?} */ (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeDir(_this._directives, dir);\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            var /** @type {?} */ group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { return /** @type {?} */ (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.updateModel = /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ ctrl = /** @type {?} */ (_this.form.get(/** @type {?} */ ((dir.path))));\n            ctrl.setValue(value);\n        });\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.setValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { this.control.setValue(value); };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NgForm.prototype.onSubmit = /**\n     * @param {?} $event\n     * @return {?}\n     */\n    function ($event) {\n        (/** @type {?} */ (this)).submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.onReset = /**\n     * @return {?}\n     */\n    function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NgForm.prototype.resetForm = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        (/** @type {?} */ (this)).submitted = false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype._setUpdateStrategy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    NgForm.prototype._findContainer = /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        path.pop();\n        return path.length ? /** @type {?} */ (this.form.get(path)) : this.form;\n    };\n    NgForm.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                    providers: [formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    outputs: ['ngSubmit'],\n                    exportAs: 'ngForm'\n                },] },\n    ];\n    /** @nocollapse */\n    NgForm.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    ]; };\n    NgForm.propDecorators = {\n        \"options\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngFormOptions',] },],\n    };\n    return NgForm;\n}(ControlContainer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; index as i\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TemplateDrivenErrors = /** @class */ (function () {\n    function TemplateDrivenErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelParentException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + FormErrorExamples.ngModelWithFormGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.formGroupNameException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.missingNameException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelGroupParentException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NgModelGroup; })\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n * \\@stable\n */\nvar NgModelGroup = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NgModelGroup, _super);\n    function NgModelGroup(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgModelGroup.prototype._checkParentType = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    NgModelGroup.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n    ];\n    /** @nocollapse */\n    NgModelGroup.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    ]; };\n    NgModelGroup.propDecorators = {\n        \"name\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModelGroup',] },],\n    };\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding = {\n    provide: NgControl,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return NgModel; })\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nvar resolvedPromise$1 = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n *\n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n *\n * \\@howToUse\n *\n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional {\\@link Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n *\n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n *\n * The following is an example of a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * Take a look at an example of using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * To see `ngModel` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgModel = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NgModel, _super);\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.control = new FormControl();\n        /**\n         * \\@internal\n         */\n        _this._registered = false;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgModel.prototype.viewToModelUpdate = /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpControl = /**\n     * @return {?}\n     */\n    function () {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpdateStrategy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._isStandalone = /**\n     * @return {?}\n     */\n    function () {\n        return !this._parent || !!(this.options && this.options.standalone);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpStandalone = /**\n     * @return {?}\n     */\n    function () {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkForErrors = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkParentType = /**\n     * @return {?}\n     */\n    function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkName = /**\n     * @return {?}\n     */\n    function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgModel.prototype._updateValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var _this = this;\n        resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype._updateDisabled = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n        var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    NgModel.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: '[ngModel]:not([formControlName]):not([formControl])',\n                    providers: [formControlBinding],\n                    exportAs: 'ngModel'\n                },] },\n    ];\n    /** @nocollapse */\n    NgModel.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n    ]; };\n    NgModel.propDecorators = {\n        \"name\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n        \"isDisabled\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['disabled',] },],\n        \"model\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModel',] },],\n        \"options\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModelOptions',] },],\n        \"update\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n    };\n    return NgModel;\n}(NgControl));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReactiveErrors = /** @class */ (function () {\n    function ReactiveErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.controlParentException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.ngModelGroupException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.missingFormException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.groupParentException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formGroupName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.arrayParentException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + FormErrorExamples.formArrayName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.disabledAttrWarning = /**\n     * @return {?}\n     */\n    function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    return ReactiveErrors;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormControlDirective; })\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n *\n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n *\n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl#setValue setValue} or\n * {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n *  \\@stable\n */\nvar FormControlDirective = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FormControlDirective, _super);\n    function FormControlDirective(validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        set: /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && /** @type {?} */ ((this.valueAccessor)).setDisabledState) {\n                /** @type {?} */ ((/** @type {?} */ ((this.valueAccessor)).setDisabledState))(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlDirective.prototype.viewToModelUpdate = /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype._isControlChanged = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        return changes.hasOwnProperty('form');\n    };\n    FormControlDirective.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n    ];\n    /** @nocollapse */\n    FormControlDirective.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n    ]; };\n    FormControlDirective.propDecorators = {\n        \"form\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formControl',] },],\n        \"model\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModel',] },],\n        \"update\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n        \"isDisabled\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['disabled',] },],\n    };\n    return FormControlDirective;\n}(NgControl));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormGroupDirective; })\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n *\n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl#valueChanges valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges statusChanges} event to be notified when the\n * validation status is re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormGroupDirective = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FormGroupDirective, _super);\n    function FormGroupDirective(_validators, _asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._validators = _validators;\n        _this._asyncValidators = _asyncValidators;\n        _this.submitted = false;\n        _this.directives = [];\n        _this.form = /** @type {?} */ ((null));\n        _this.ngSubmit = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormGroupDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { return /** @type {?} */ (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { removeDir(this.directives, dir); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { return /** @type {?} */ (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormArray = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormArray = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormArray = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { return /** @type {?} */ (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.updateModel = /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    function (dir, value) {\n        var /** @type {?} */ ctrl = /** @type {?} */ (this.form.get(dir.path));\n        ctrl.setValue(value);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onSubmit = /**\n     * @param {?} $event\n     * @return {?}\n     */\n    function ($event) {\n        (/** @type {?} */ (this)).submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onReset = /**\n     * @return {?}\n     */\n    function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.resetForm = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        (/** @type {?} */ (this)).submitted = false;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateDomValue = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n            if (dir.control !== newCtrl) {\n                cleanUpControl(dir.control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                (/** @type {?} */ (dir)).control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateRegistrations = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(function () { });\n        this._oldForm = this.form;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateValidators = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([/** @type {?} */ ((this.form.validator)), /** @type {?} */ ((sync))]);\n        var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([/** @type {?} */ ((this.form.asyncValidator)), /** @type {?} */ ((async))]);\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._checkFormPresent = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    FormGroupDirective.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: '[formGroup]',\n                    providers: [formDirectiveProvider$1],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    exportAs: 'ngForm'\n                },] },\n    ];\n    /** @nocollapse */\n    FormGroupDirective.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    ]; };\n    FormGroupDirective.propDecorators = {\n        \"form\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formGroup',] },],\n        \"ngSubmit\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"] },],\n    };\n    return FormGroupDirective;\n}(ControlContainer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormGroupName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n *\n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl#get get} method. Ex: `this.form.get('name')`.\n *\n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormGroupName = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FormGroupName, _super);\n    function FormGroupName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupName.prototype._checkParentType = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    FormGroupName.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n    ];\n    /** @nocollapse */\n    FormGroupName.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    ]; };\n    FormGroupName.propDecorators = {\n        \"name\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formGroupName',] },],\n    };\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nvar formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormArrayName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n *\n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl#get get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl#setValue setValue} or\n * {\\@link AbstractControl#patchValue patchValue} methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl#valueChanges valueChanges} event.\n * You can also listen to its {\\@link AbstractControl#statusChanges statusChanges} event to be\n * notified when the validation status is re-calculated.\n *\n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by calling\n * its {\\@link FormArray#push push} method.\n * Ex: `this.form.get('cities').push(new FormControl());`\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormArrayName = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FormArrayName, _super);\n    function FormArrayName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormArray(this);\n    };\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ ((this.formDirective)).getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._parent ? /** @type {?} */ (this._parent.formDirective) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype._checkParentType = /**\n     * @return {?}\n     */\n    function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    FormArrayName.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n    ];\n    /** @nocollapse */\n    FormArrayName.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    ]; };\n    FormArrayName.propDecorators = {\n        \"name\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formArrayName',] },],\n    };\n    return FormArrayName;\n}(ControlContainer));\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar controlNameBinding = {\n    provide: NgControl,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return FormControlName; })\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n *\n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl#get get} method.\n * Ex: `this.form.get('first');`\n *\n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n *\n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormControlName = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FormControlName, _super);\n    function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this._added = false;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        set: /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlName.prototype.viewToModelUpdate = /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return controlPath(this.name, /** @type {?} */ ((this._parent))); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ ((composeAsyncValidators(this._rawAsyncValidators)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._checkParentType = /**\n     * @return {?}\n     */\n    function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._setUpControl = /**\n     * @return {?}\n     */\n    function () {\n        this._checkParentType();\n        (/** @type {?} */ (this)).control = this.formDirective.addControl(this);\n        if (this.control.disabled && /** @type {?} */ ((this.valueAccessor)).setDisabledState) {\n            /** @type {?} */ ((/** @type {?} */ ((this.valueAccessor)).setDisabledState))(true);\n        }\n        this._added = true;\n    };\n    FormControlName.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n    ];\n    /** @nocollapse */\n    FormControlName.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"SkipSelf\"] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n    ]; };\n    FormControlName.propDecorators = {\n        \"name\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['formControlName',] },],\n        \"model\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['ngModel',] },],\n        \"update\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n        \"isDisabled\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"], args: ['disabled',] },],\n    };\n    return FormControlName;\n}(NgControl));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface that can be implemented by classes that can act as validators.\n *\n * ## Usage\n *\n * ```typescript\n * \\@Directive({\n *   selector: '[custom-validator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(c: Control): {[key: string]: any} {\n *     return {\"custom\": true};\n *   }\n * }\n * ```\n *\n * \\@stable\n * @record\n */\n\n/**\n * \\@experimental\n * @record\n */\n\nvar REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return RequiredValidator; }),\n    multi: true\n};\nvar CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return CheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@stable\n */\nvar RequiredValidator = /** @class */ (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = value != null && value !== false && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    RequiredValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this.required ? Validators.required(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RequiredValidator.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    RequiredValidator.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                    providers: [REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': 'required ? \"\" : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    RequiredValidator.ctorParameters = function () { return []; };\n    RequiredValidator.propDecorators = {\n        \"required\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    };\n    return RequiredValidator;\n}());\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@experimental\n */\nvar CheckboxRequiredValidator = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(CheckboxRequiredValidator, _super);\n    function CheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    CheckboxRequiredValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this.required ? Validators.requiredTrue(c) : null;\n    };\n    CheckboxRequiredValidator.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                    providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': 'required ? \"\" : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    CheckboxRequiredValidator.ctorParameters = function () { return []; };\n    return CheckboxRequiredValidator;\n}(RequiredValidator));\n/**\n * Provider which adds {\\@link EmailValidator} to {\\@link NG_VALIDATORS}.\n */\nvar EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return EmailValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@experimental\n */\nvar EmailValidator = /** @class */ (function () {\n    function EmailValidator() {\n    }\n    Object.defineProperty(EmailValidator.prototype, \"email\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    EmailValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this._enabled ? Validators.email(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    EmailValidator.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    EmailValidator.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                    providers: [EMAIL_VALIDATOR]\n                },] },\n    ];\n    /** @nocollapse */\n    EmailValidator.ctorParameters = function () { return []; };\n    EmailValidator.propDecorators = {\n        \"email\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    };\n    return EmailValidator;\n}());\n/**\n * \\@stable\n * @record\n */\n\n/**\n * \\@stable\n * @record\n */\n\n/**\n * Provider which adds {\\@link MinLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='min'}\n */\nvar MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * \\@stable\n */\nvar MinLengthValidator = /** @class */ (function () {\n    function MinLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MinLengthValidator.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MinLengthValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this.minlength == null ? null : this._validator(c);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MinLengthValidator.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MinLengthValidator.prototype._createValidator = /**\n     * @return {?}\n     */\n    function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    MinLengthValidator.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                    providers: [MIN_LENGTH_VALIDATOR],\n                    host: { '[attr.minlength]': 'minlength ? minlength : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    MinLengthValidator.ctorParameters = function () { return []; };\n    MinLengthValidator.propDecorators = {\n        \"minlength\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    };\n    return MinLengthValidator;\n}());\n/**\n * Provider which adds {\\@link MaxLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='max'}\n */\nvar MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n *\n * \\@stable\n */\nvar MaxLengthValidator = /** @class */ (function () {\n    function MaxLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this.maxlength != null ? this._validator(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MaxLengthValidator.prototype._createValidator = /**\n     * @return {?}\n     */\n    function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    MaxLengthValidator.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                    providers: [MAX_LENGTH_VALIDATOR],\n                    host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    MaxLengthValidator.ctorParameters = function () { return []; };\n    MaxLengthValidator.propDecorators = {\n        \"maxlength\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    };\n    return MaxLengthValidator;\n}());\nvar PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"forwardRef\"])(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nvar PatternValidator = /** @class */ (function () {\n    function PatternValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PatternValidator.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    PatternValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) { return this._validator(c); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PatternValidator.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    PatternValidator.prototype._createValidator = /**\n     * @return {?}\n     */\n    function () { this._validator = Validators.pattern(this.pattern); };\n    PatternValidator.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                    providers: [PATTERN_VALIDATOR],\n                    host: { '[attr.pattern]': 'pattern ? pattern : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    PatternValidator.ctorParameters = function () { return []; };\n    PatternValidator.propDecorators = {\n        \"pattern\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n    };\n    return PatternValidator;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n *\n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n *\n * \\@howToUse\n *\n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n *\n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  * **NgModule**: {\\@link ReactiveFormsModule}\n *\n * \\@stable\n */\nvar FormBuilder = /** @class */ (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {@link FormGroup} constructor for more details.\n     */\n    /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    FormBuilder.prototype.group = /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n        var /** @type {?} */ validator = extra != null ? extra['validator'] : null;\n        var /** @type {?} */ asyncValidator = extra != null ? extra['asyncValidator'] : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     */\n    /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.control = /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    function (formState, validator, asyncValidator) {\n        return new FormControl(formState, validator, asyncValidator);\n    };\n    /**\n     * Construct a {@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     */\n    /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.array = /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validator, asyncValidator);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._reduceControls = /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    function (controlsConfig) {\n        var _this = this;\n        var /** @type {?} */ controls = {};\n        Object.keys(controlsConfig).forEach(function (controlName) {\n            controls[controlName] = _this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._createControl = /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            var /** @type {?} */ value = controlConfig[0];\n            var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    FormBuilder.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    FormBuilder.ctorParameters = function () { return []; };\n    return FormBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar VERSION = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Version\"]('5.2.10');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@experimental\n */\nvar NgNoValidate = /** @class */ (function () {\n    function NgNoValidate() {\n    }\n    NgNoValidate.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"], args: [{\n                    selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                    host: { 'novalidate': '' },\n                },] },\n    ];\n    /** @nocollapse */\n    NgNoValidate.ctorParameters = function () { return []; };\n    return NgNoValidate;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SHARED_FORM_DIRECTIVES = [\n    NgNoValidate,\n    NgSelectOption,\n    NgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nvar TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nvar REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nvar InternalFormsSharedModule = /** @class */ (function () {\n    function InternalFormsSharedModule() {\n    }\n    InternalFormsSharedModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                    declarations: SHARED_FORM_DIRECTIVES,\n                    exports: SHARED_FORM_DIRECTIVES,\n                },] },\n    ];\n    /** @nocollapse */\n    InternalFormsSharedModule.ctorParameters = function () { return []; };\n    return InternalFormsSharedModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The ng module for forms.\n * \\@stable\n */\nvar FormsModule = /** @class */ (function () {\n    function FormsModule() {\n    }\n    FormsModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                    declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                    providers: [RadioControlRegistry],\n                    exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                },] },\n    ];\n    /** @nocollapse */\n    FormsModule.ctorParameters = function () { return []; };\n    return FormsModule;\n}());\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nvar ReactiveFormsModule = /** @class */ (function () {\n    function ReactiveFormsModule() {\n    }\n    ReactiveFormsModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                    declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                    providers: [FormBuilder, RadioControlRegistry],\n                    exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                },] },\n    ];\n    /** @nocollapse */\n    ReactiveFormsModule.ctorParameters = function () { return []; };\n    return ReactiveFormsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n\n//# sourceMappingURL=forms.js.map\n\n\n/***/ }),\n\n/***/ 259:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return AnimationBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return AnimationFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AUTO_STYLE; });\n/* unused harmony export animate */\n/* unused harmony export animateChild */\n/* unused harmony export animation */\n/* unused harmony export group */\n/* unused harmony export keyframes */\n/* unused harmony export query */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return sequence; });\n/* unused harmony export stagger */\n/* unused harmony export state */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return style; });\n/* unused harmony export transition */\n/* unused harmony export trigger */\n/* unused harmony export useAnimation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return NoopAnimationPlayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return AnimationGroupPlayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return ɵPRE_STYLE; });\n/**\n * @license Angular v5.2.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * AnimationBuilder is an injectable service that is available when the {\\@link\n * BrowserAnimationsModule BrowserAnimationsModule} or {\\@link NoopAnimationsModule\n * NoopAnimationsModule} modules are used within an application.\n *\n * The purpose if this service is to produce an animation sequence programmatically within an\n * angular component or directive.\n *\n * Programmatic animations are first built and then a player is created when the build animation is\n * attached to an element.\n *\n * ```ts\n * // remember to include the BrowserAnimationsModule module for this to work...\n * import {AnimationBuilder} from '\\@angular/animations';\n *\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first build the animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // then create a player from it\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * When an animation is built an instance of {\\@link AnimationFactory AnimationFactory} will be\n * returned. Using that an {\\@link AnimationPlayer AnimationPlayer} can be created which can then be\n * used to start the animation.\n *\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationBuilder = /** @class */ (function () {\n    function AnimationBuilder() {\n    }\n    return AnimationBuilder;\n}());\n/**\n * An instance of `AnimationFactory` is returned from {\\@link AnimationBuilder#build\n * AnimationBuilder.build}.\n *\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationFactory = /** @class */ (function () {\n    function AnimationFactory() {\n    }\n    return AnimationFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AUTO_STYLE = '*';\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disabled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\" *ngFor=\"let banner of banners\"> {{ banner }} </div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ]))\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction animation(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 8 /* Reference */, animation: steps, options: options };\n}\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\nfunction animateChild(options) {\n    if (options === void 0) { options = null; }\n    return { type: 9 /* AnimateChild */, options: options };\n}\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nfunction useAnimation(animation, options) {\n    if (options === void 0) { options = null; }\n    return { type: 10 /* AnimateRef */, animation: animation, options: options };\n}\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nfunction query(selector, animation, options) {\n    if (options === void 0) { options = null; }\n    return { type: 11 /* Query */, selector: selector, animation: animation, options: options };\n}\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\nfunction stagger(timings, animation) {\n    return { type: 12 /* Stagger */, timings: timings, animation: animation };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?} cb\n * @return {?}\n */\nfunction scheduleMicroTask(cb) {\n    Promise.resolve(null).then(cb);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * AnimationPlayer controls an animation sequence that was produced from a programmatic animation.\n * (see {\\@link AnimationBuilder AnimationBuilder} for more information on how to create programmatic\n * animations.)\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationPlayer = /** @class */ (function () {\n    function NoopAnimationPlayer() {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this.parentPlayer = null;\n        this.totalTime = 0;\n    }\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onFinish = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.hasStarted()) {\n            this._onStart();\n            this.triggerMicrotask();\n        }\n        this._started = true;\n    };\n    /* @internal */\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.triggerMicrotask = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        scheduleMicroTask(function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onStart = /**\n     * @return {?}\n     */\n    function () {\n        this._onStartFns.forEach(function (fn) { return fn(); });\n        this._onStartFns = [];\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () { this._onFinish(); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return 0; };\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(function (fn) { return fn(); });\n        methods.length = 0;\n    };\n    return NoopAnimationPlayer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationGroupPlayer = /** @class */ (function () {\n    function AnimationGroupPlayer(_players) {\n        var _this = this;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        this.totalTime = 0;\n        this.players = _players;\n        var /** @type {?} */ doneCount = 0;\n        var /** @type {?} */ destroyCount = 0;\n        var /** @type {?} */ startCount = 0;\n        var /** @type {?} */ total = this.players.length;\n        if (total == 0) {\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        else {\n            this.players.forEach(function (player) {\n                player.onDone(function () {\n                    if (++doneCount == total) {\n                        _this._onFinish();\n                    }\n                });\n                player.onDestroy(function () {\n                    if (++destroyCount == total) {\n                        _this._onDestroy();\n                    }\n                });\n                player.onStart(function () {\n                    if (++startCount == total) {\n                        _this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this.players.reduce(function (time, player) { return Math.max(time, player.totalTime); }, 0);\n    }\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onFinish = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () { this.players.forEach(function (player) { return player.init(); }); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onStart = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.hasStarted()) {\n            this._started = true;\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this.players.forEach(function (player) { return player.play(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () { this.players.forEach(function (player) { return player.pause(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () { this.players.forEach(function (player) { return player.restart(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () {\n        this._onFinish();\n        this.players.forEach(function (player) { return player.finish(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._onDestroy(); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this.players.forEach(function (player) { return player.destroy(); });\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () {\n        this.players.forEach(function (player) { return player.reset(); });\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) {\n        var /** @type {?} */ timeAtPosition = p * this.totalTime;\n        this.players.forEach(function (player) {\n            var /** @type {?} */ position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ min = 0;\n        this.players.forEach(function (player) {\n            var /** @type {?} */ p = player.getPosition();\n            min = Math.min(p, min);\n        });\n        return min;\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.beforeDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.players.forEach(function (player) {\n            if (player.beforeDestroy) {\n                player.beforeDestroy();\n            }\n        });\n    };\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(function (fn) { return fn(); });\n        methods.length = 0;\n    };\n    return AnimationGroupPlayer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ɵPRE_STYLE = '!';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n\n//# sourceMappingURL=animations.js.map\n\n\n/***/ }),\n\n/***/ 260:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar http_1 = __webpack_require__(95);\r\nvar PasswordService = /** @class */ (function () {\r\n    function PasswordService(http) {\r\n        this.http = http;\r\n        // url = \"http://localhost:3000/\";\r\n        this.url = \"https://password-backend.herokuapp.com/\";\r\n    }\r\n    PasswordService.prototype.makeAPICall = function (password) {\r\n        var data = {\r\n            password: password\r\n        };\r\n        return this.http.post(this.url, data)\r\n            .map(function (response) { return response.json(); });\r\n    };\r\n    PasswordService = __decorate([\r\n        core_1.Injectable(),\r\n        __metadata(\"design:paramtypes\", [http_1.Http])\r\n    ], PasswordService);\r\n    return PasswordService;\r\n}());\r\nexports.PasswordService = PasswordService;\r\n\n\n/***/ }),\n\n/***/ 261:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbAccordionModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__accordion__ = __webpack_require__(262);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__accordion_config__ = __webpack_require__(114);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_2__accordion__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_2__accordion__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_2__accordion__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_2__accordion__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__accordion_config__[\"a\"]; });\n\n\n\n\n\n\nvar NGB_ACCORDION_DIRECTIVES = [__WEBPACK_IMPORTED_MODULE_2__accordion__[\"a\" /* NgbAccordion */], __WEBPACK_IMPORTED_MODULE_2__accordion__[\"b\" /* NgbPanel */], __WEBPACK_IMPORTED_MODULE_2__accordion__[\"d\" /* NgbPanelTitle */], __WEBPACK_IMPORTED_MODULE_2__accordion__[\"c\" /* NgbPanelContent */]];\nvar NgbAccordionModule = (function () {\n    function NgbAccordionModule() {\n    }\n    NgbAccordionModule.forRoot = function () { return { ngModule: NgbAccordionModule, providers: [__WEBPACK_IMPORTED_MODULE_3__accordion_config__[\"a\" /* NgbAccordionConfig */]] }; };\n    NgbAccordionModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"]] },] },\n    ];\n    /** @nocollapse */\n    NgbAccordionModule.ctorParameters = function () { return []; };\n    return NgbAccordionModule;\n}());\n\n//# sourceMappingURL=accordion.module.js.map\n\n/***/ }),\n\n/***/ 262:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return NgbPanelTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbPanelContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbPanel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbAccordion; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__accordion_config__ = __webpack_require__(114);\n\n\n\nvar nextId = 0;\n/**\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\n */\nvar NgbPanelTitle = (function () {\n    function NgbPanelTitle(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPanelTitle.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: 'ng-template[ngbPanelTitle]' },] },\n    ];\n    /** @nocollapse */\n    NgbPanelTitle.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"], },\n    ]; };\n    return NgbPanelTitle;\n}());\n\n/**\n * This directive must be used to wrap accordion panel content.\n */\nvar NgbPanelContent = (function () {\n    function NgbPanelContent(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPanelContent.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: 'ng-template[ngbPanelContent]' },] },\n    ];\n    /** @nocollapse */\n    NgbPanelContent.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"], },\n    ]; };\n    return NgbPanelContent;\n}());\n\n/**\n * The NgbPanel directive represents an individual panel with the title and collapsible\n * content\n */\nvar NgbPanel = (function () {\n    function NgbPanel() {\n        /**\n           *  A flag determining whether the panel is disabled or not.\n           *  When disabled, the panel cannot be toggled.\n           */\n        this.disabled = false;\n        /**\n           *  An optional id for the panel. The id should be unique.\n           *  If not provided, it will be auto-generated.\n           */\n        this.id = \"ngb-panel-\" + nextId++;\n        /**\n           * A flag telling if the panel is currently open\n           */\n        this.isOpen = false;\n    }\n    NgbPanel.prototype.ngAfterContentChecked = function () {\n        // We are using @ContentChildren instead of @ContantChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    };\n    NgbPanel.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: 'ngb-panel' },] },\n    ];\n    /** @nocollapse */\n    NgbPanel.ctorParameters = function () { return []; };\n    NgbPanel.propDecorators = {\n        \"disabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"id\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"title\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"type\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"titleTpls\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [NgbPanelTitle, { descendants: false },] },],\n        \"contentTpls\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [NgbPanelContent, { descendants: false },] },],\n    };\n    return NgbPanel;\n}());\n\n/**\n * The NgbAccordion directive is a collection of panels.\n * It can assure that only one panel can be opened at a time.\n */\nvar NgbAccordion = (function () {\n    function NgbAccordion(config) {\n        /**\n           * An array or comma separated strings of panel identifiers that should be opened\n           */\n        this.activeIds = [];\n        /**\n           * Whether the closed panels should be hidden without destroying them\n           */\n        this.destroyOnHide = true;\n        /**\n           * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\n           */\n        this.panelChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.type = config.type;\n        this.closeOtherPanels = config.closeOthers;\n    }\n    /**\n     * Programmatically toggle a panel with a given id.\n     */\n    /**\n       * Programmatically toggle a panel with a given id.\n       */\n    NgbAccordion.prototype.toggle = /**\n       * Programmatically toggle a panel with a given id.\n       */\n    function (panelId) {\n        var panel = this.panels.find(function (p) { return p.id === panelId; });\n        if (panel && !panel.disabled) {\n            var defaultPrevented_1 = false;\n            this.panelChange.emit({ panelId: panelId, nextState: !panel.isOpen, preventDefault: function () { defaultPrevented_1 = true; } });\n            if (!defaultPrevented_1) {\n                panel.isOpen = !panel.isOpen;\n                if (this.closeOtherPanels) {\n                    this._closeOthers(panelId);\n                }\n                this._updateActiveIds();\n            }\n        }\n    };\n    NgbAccordion.prototype.ngAfterContentChecked = function () {\n        var _this = this;\n        // active id updates\n        if (Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"e\" /* isString */])(this.activeIds)) {\n            this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n        }\n        // update panels open states\n        this.panels.forEach(function (panel) { return panel.isOpen = !panel.disabled && _this.activeIds.indexOf(panel.id) > -1; });\n        // closeOthers updates\n        if (this.activeIds.length > 1 && this.closeOtherPanels) {\n            this._closeOthers(this.activeIds[0]);\n            this._updateActiveIds();\n        }\n    };\n    NgbAccordion.prototype._closeOthers = function (panelId) {\n        this.panels.forEach(function (panel) {\n            if (panel.id !== panelId) {\n                panel.isOpen = false;\n            }\n        });\n    };\n    NgbAccordion.prototype._updateActiveIds = function () {\n        this.activeIds = this.panels.filter(function (panel) { return panel.isOpen && !panel.disabled; }).map(function (panel) { return panel.id; });\n    };\n    NgbAccordion.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-accordion',\n                    exportAs: 'ngbAccordion',\n                    host: { 'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels' },\n                    template: \"\\n    <ng-template ngFor let-panel [ngForOf]=\\\"panels\\\">\\n      <div class=\\\"card\\\">\\n        <div role=\\\"tab\\\" id=\\\"{{panel.id}}-header\\\"\\n          [class]=\\\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\\\" [class.active]=\\\"panel.isOpen\\\">\\n          <a href (click)=\\\"!!toggle(panel.id)\\\" [class.text-muted]=\\\"panel.disabled\\\" [attr.tabindex]=\\\"(panel.disabled ? '-1' : null)\\\"\\n            [attr.aria-expanded]=\\\"panel.isOpen\\\" [attr.aria-controls]=\\\"(panel.isOpen ? panel.id : null)\\\"\\n            [attr.aria-disabled]=\\\"panel.disabled\\\">\\n            {{panel.title}}<ng-template [ngTemplateOutlet]=\\\"panel.titleTpl?.templateRef\\\"></ng-template>\\n          </a>\\n        </div>\\n        <div id=\\\"{{panel.id}}\\\" role=\\\"tabpanel\\\" [attr.aria-labelledby]=\\\"panel.id + '-header'\\\"\\n             class=\\\"card-body collapse {{panel.isOpen ? 'show' : null}}\\\" *ngIf=\\\"!destroyOnHide || panel.isOpen\\\">\\n             <ng-template [ngTemplateOutlet]=\\\"panel.contentTpl?.templateRef\\\"></ng-template>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbAccordion.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_2__accordion_config__[\"a\" /* NgbAccordionConfig */], },\n    ]; };\n    NgbAccordion.propDecorators = {\n        \"panels\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [NgbPanel,] },],\n        \"activeIds\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"closeOtherPanels\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['closeOthers',] },],\n        \"destroyOnHide\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"type\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"panelChange\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbAccordion;\n}());\n\n//# sourceMappingURL=accordion.js.map\n\n/***/ }),\n\n/***/ 263:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbAlertModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__alert__ = __webpack_require__(264);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__alert_config__ = __webpack_require__(115);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_2__alert__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__alert_config__[\"a\"]; });\n\n\n\n\n\n\nvar NgbAlertModule = (function () {\n    function NgbAlertModule() {\n    }\n    NgbAlertModule.forRoot = function () { return { ngModule: NgbAlertModule, providers: [__WEBPACK_IMPORTED_MODULE_3__alert_config__[\"a\" /* NgbAlertConfig */]] }; };\n    NgbAlertModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: [__WEBPACK_IMPORTED_MODULE_2__alert__[\"a\" /* NgbAlert */]], exports: [__WEBPACK_IMPORTED_MODULE_2__alert__[\"a\" /* NgbAlert */]], imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"]], entryComponents: [__WEBPACK_IMPORTED_MODULE_2__alert__[\"a\" /* NgbAlert */]] },] },\n    ];\n    /** @nocollapse */\n    NgbAlertModule.ctorParameters = function () { return []; };\n    return NgbAlertModule;\n}());\n\n//# sourceMappingURL=alert.module.js.map\n\n/***/ }),\n\n/***/ 264:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbAlert; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__alert_config__ = __webpack_require__(115);\n\n\n/**\n * Alerts can be used to provide feedback messages.\n */\nvar NgbAlert = (function () {\n    function NgbAlert(config) {\n        /**\n           * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n           */\n        this.close = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.dismissible = config.dismissible;\n        this.type = config.type;\n    }\n    NgbAlert.prototype.closeHandler = function () { this.close.emit(null); };\n    NgbAlert.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-alert',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    template: \"\\n    <div [class]=\\\"'alert alert-' + type + (dismissible ? ' alert-dismissible' : '')\\\" role=\\\"alert\\\">\\n      <button *ngIf=\\\"dismissible\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeHandler()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n      <ng-content></ng-content>\\n    </div>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbAlert.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__alert_config__[\"a\" /* NgbAlertConfig */], },\n    ]; };\n    NgbAlert.propDecorators = {\n        \"dismissible\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"type\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"close\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbAlert;\n}());\n\n//# sourceMappingURL=alert.js.map\n\n/***/ }),\n\n/***/ 265:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbButtonsModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__label__ = __webpack_require__(73);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__checkbox__ = __webpack_require__(266);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__radio__ = __webpack_require__(267);\n/* unused harmony reexport NgbButtonLabel */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__checkbox__[\"a\"]; });\n/* unused harmony reexport NgbRadio */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_3__radio__[\"b\"]; });\n\n\n\n\n\n\n\nvar NGB_BUTTON_DIRECTIVES = [__WEBPACK_IMPORTED_MODULE_1__label__[\"a\" /* NgbButtonLabel */], __WEBPACK_IMPORTED_MODULE_2__checkbox__[\"a\" /* NgbCheckBox */], __WEBPACK_IMPORTED_MODULE_3__radio__[\"b\" /* NgbRadioGroup */], __WEBPACK_IMPORTED_MODULE_3__radio__[\"a\" /* NgbRadio */]];\nvar NgbButtonsModule = (function () {\n    function NgbButtonsModule() {\n    }\n    NgbButtonsModule.forRoot = function () { return { ngModule: NgbButtonsModule, providers: [] }; };\n    NgbButtonsModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES },] },\n    ];\n    /** @nocollapse */\n    NgbButtonsModule.ctorParameters = function () { return []; };\n    return NgbButtonsModule;\n}());\n\n//# sourceMappingURL=buttons.module.js.map\n\n/***/ }),\n\n/***/ 266:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbCheckBox; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__label__ = __webpack_require__(73);\n\n\n\nvar NGB_CHECKBOX_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbCheckBox; }),\n    multi: true\n};\n/**\n * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable\n * specified via ngModel.\n */\nvar NgbCheckBox = (function () {\n    function NgbCheckBox(_label) {\n        this._label = _label;\n        /**\n           * A flag indicating if a given checkbox button is disabled.\n           */\n        this.disabled = false;\n        /**\n           * Value to be propagated as model when the checkbox is checked.\n           */\n        this.valueChecked = true;\n        /**\n           * Value to be propagated as model when the checkbox is unchecked.\n           */\n        this.valueUnChecked = false;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    Object.defineProperty(NgbCheckBox.prototype, \"focused\", {\n        set: function (isFocused) {\n            this._label.focused = isFocused;\n            if (!isFocused) {\n                this.onTouched();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgbCheckBox.prototype.onInputChange = function ($event) {\n        var modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n        this.onChange(modelToPropagate);\n        this.onTouched();\n        this.writeValue(modelToPropagate);\n    };\n    NgbCheckBox.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbCheckBox.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbCheckBox.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n        this._label.disabled = isDisabled;\n    };\n    NgbCheckBox.prototype.writeValue = function (value) {\n        this.checked = value === this.valueChecked;\n        this._label.active = this.checked;\n    };\n    NgbCheckBox.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: '[ngbButton][type=checkbox]',\n                    host: {\n                        'autocomplete': 'off',\n                        '[checked]': 'checked',\n                        '[disabled]': 'disabled',\n                        '(change)': 'onInputChange($event)',\n                        '(focus)': 'focused = true',\n                        '(blur)': 'focused = false'\n                    },\n                    providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbCheckBox.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_2__label__[\"a\" /* NgbButtonLabel */], },\n    ]; };\n    NgbCheckBox.propDecorators = {\n        \"disabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"valueChecked\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"valueUnChecked\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbCheckBox;\n}());\n\n//# sourceMappingURL=checkbox.js.map\n\n/***/ }),\n\n/***/ 267:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbRadioGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbRadio; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__label__ = __webpack_require__(73);\n\n\n\nvar NGB_RADIO_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbRadioGroup; }),\n    multi: true\n};\nvar nextId = 0;\n/**\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\n * specified via ngModel.\n */\nvar NgbRadioGroup = (function () {\n    function NgbRadioGroup() {\n        this._radios = new Set();\n        this._value = null;\n        /**\n           * The name of the group. Unless enclosed inputs specify a name, this name is used as the name of the\n           * enclosed inputs. If not specified, a name is generated automatically.\n           */\n        this.name = \"ngb-radio-\" + nextId++;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    Object.defineProperty(NgbRadioGroup.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (isDisabled) { this.setDisabledState(isDisabled); },\n        enumerable: true,\n        configurable: true\n    });\n    NgbRadioGroup.prototype.onRadioChange = function (radio) {\n        this.writeValue(radio.value);\n        this.onChange(radio.value);\n    };\n    NgbRadioGroup.prototype.onRadioValueUpdate = function () { this._updateRadiosValue(); };\n    NgbRadioGroup.prototype.register = function (radio) { this._radios.add(radio); };\n    NgbRadioGroup.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbRadioGroup.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbRadioGroup.prototype.setDisabledState = function (isDisabled) {\n        this._disabled = isDisabled;\n        this._updateRadiosDisabled();\n    };\n    NgbRadioGroup.prototype.unregister = function (radio) { this._radios.delete(radio); };\n    NgbRadioGroup.prototype.writeValue = function (value) {\n        this._value = value;\n        this._updateRadiosValue();\n    };\n    NgbRadioGroup.prototype._updateRadiosValue = function () {\n        var _this = this;\n        this._radios.forEach(function (radio) { return radio.updateValue(_this._value); });\n    };\n    NgbRadioGroup.prototype._updateRadiosDisabled = function () { this._radios.forEach(function (radio) { return radio.updateDisabled(); }); };\n    NgbRadioGroup.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: '[ngbRadioGroup]', host: { 'role': 'group' }, providers: [NGB_RADIO_VALUE_ACCESSOR] },] },\n    ];\n    /** @nocollapse */\n    NgbRadioGroup.ctorParameters = function () { return []; };\n    NgbRadioGroup.propDecorators = {\n        \"name\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbRadioGroup;\n}());\n\n/**\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\n */\nvar NgbRadio = (function () {\n    function NgbRadio(_group, _label, _renderer, _element) {\n        this._group = _group;\n        this._label = _label;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._value = null;\n        this._group.register(this);\n    }\n    Object.defineProperty(NgbRadio.prototype, \"value\", {\n        get: function () { return this._value; },\n        set: /**\n           * You can specify model value of a given radio by binding to the value property.\n           */\n        function (value) {\n            this._value = value;\n            var stringValue = value ? value.toString() : '';\n            this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n            this._group.onRadioValueUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"disabled\", {\n        get: function () { return this._group.disabled || this._disabled; },\n        set: /**\n           * A flag indicating if a given radio button is disabled.\n           */\n        function (isDisabled) {\n            this._disabled = isDisabled !== false;\n            this.updateDisabled();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"focused\", {\n        set: function (isFocused) {\n            if (this._label) {\n                this._label.focused = isFocused;\n            }\n            if (!isFocused) {\n                this._group.onTouched();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"checked\", {\n        get: function () { return this._checked; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"nameAttr\", {\n        get: function () { return this.name || this._group.name; },\n        enumerable: true,\n        configurable: true\n    });\n    NgbRadio.prototype.ngOnDestroy = function () { this._group.unregister(this); };\n    NgbRadio.prototype.onChange = function () { this._group.onRadioChange(this); };\n    NgbRadio.prototype.updateValue = function (value) {\n        this._checked = this.value === value;\n        this._label.active = this._checked;\n    };\n    NgbRadio.prototype.updateDisabled = function () { this._label.disabled = this.disabled; };\n    NgbRadio.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: '[ngbButton][type=radio]',\n                    host: {\n                        '[checked]': 'checked',\n                        '[disabled]': 'disabled',\n                        '[name]': 'nameAttr',\n                        '(change)': 'onChange()',\n                        '(focus)': 'focused = true',\n                        '(blur)': 'focused = false'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbRadio.ctorParameters = function () { return [\n        { type: NgbRadioGroup, },\n        { type: __WEBPACK_IMPORTED_MODULE_2__label__[\"a\" /* NgbButtonLabel */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    ]; };\n    NgbRadio.propDecorators = {\n        \"name\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"value\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['value',] },],\n        \"disabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['disabled',] },],\n    };\n    return NgbRadio;\n}());\n\n//# sourceMappingURL=radio.js.map\n\n/***/ }),\n\n/***/ 268:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbCarouselModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__carousel__ = __webpack_require__(269);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__carousel_config__ = __webpack_require__(116);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_2__carousel__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_2__carousel__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__carousel_config__[\"a\"]; });\n\n\n\n\n\n\nvar NgbCarouselModule = (function () {\n    function NgbCarouselModule() {\n    }\n    NgbCarouselModule.forRoot = function () { return { ngModule: NgbCarouselModule, providers: [__WEBPACK_IMPORTED_MODULE_3__carousel_config__[\"a\" /* NgbCarouselConfig */]] }; };\n    NgbCarouselModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: __WEBPACK_IMPORTED_MODULE_2__carousel__[\"a\" /* NGB_CAROUSEL_DIRECTIVES */], exports: __WEBPACK_IMPORTED_MODULE_2__carousel__[\"a\" /* NGB_CAROUSEL_DIRECTIVES */], imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"]] },] },\n    ];\n    /** @nocollapse */\n    NgbCarouselModule.ctorParameters = function () { return []; };\n    return NgbCarouselModule;\n}());\n\n//# sourceMappingURL=carousel.module.js.map\n\n/***/ }),\n\n/***/ 269:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbSlide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbCarousel; });\n/* unused harmony export NgbSlideEventDirection */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NGB_CAROUSEL_DIRECTIVES; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__carousel_config__ = __webpack_require__(116);\n\n\nvar nextId = 0;\n/**\n * Represents an individual slide to be used within a carousel.\n */\nvar NgbSlide = (function () {\n    function NgbSlide(tplRef) {\n        this.tplRef = tplRef;\n        /**\n           * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n           * Will be auto-generated if not provided.\n           */\n        this.id = \"ngb-slide-\" + nextId++;\n    }\n    NgbSlide.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: 'ng-template[ngbSlide]' },] },\n    ];\n    /** @nocollapse */\n    NgbSlide.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"], },\n    ]; };\n    NgbSlide.propDecorators = {\n        \"id\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbSlide;\n}());\n\n/**\n * Directive to easily create carousels based on Bootstrap's markup.\n */\nvar NgbCarousel = (function () {\n    function NgbCarousel(config) {\n        /**\n           * A carousel slide event fired when the slide transition is completed.\n           * See NgbSlideEvent for payload details\n           */\n        this.slide = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.interval = config.interval;\n        this.wrap = config.wrap;\n        this.keyboard = config.keyboard;\n    }\n    NgbCarousel.prototype.ngAfterContentChecked = function () {\n        var activeSlide = this._getSlideById(this.activeId);\n        this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n    };\n    NgbCarousel.prototype.ngOnInit = function () { this._startTimer(); };\n    NgbCarousel.prototype.ngOnChanges = function (changes) {\n        if ('interval' in changes && !changes['interval'].isFirstChange()) {\n            this._restartTimer();\n        }\n    };\n    NgbCarousel.prototype.ngOnDestroy = function () { clearInterval(this._slideChangeInterval); };\n    /**\n     * Navigate to a slide with the specified identifier.\n     */\n    /**\n       * Navigate to a slide with the specified identifier.\n       */\n    NgbCarousel.prototype.select = /**\n       * Navigate to a slide with the specified identifier.\n       */\n    function (slideId) {\n        this.cycleToSelected(slideId, this.getSlideEventDirection(this.activeId, slideId));\n        this._restartTimer();\n    };\n    /**\n     * Navigate to the next slide.\n     */\n    /**\n       * Navigate to the next slide.\n       */\n    NgbCarousel.prototype.prev = /**\n       * Navigate to the next slide.\n       */\n    function () {\n        this.cycleToPrev();\n        this._restartTimer();\n    };\n    /**\n     * Navigate to the next slide.\n     */\n    /**\n       * Navigate to the next slide.\n       */\n    NgbCarousel.prototype.next = /**\n       * Navigate to the next slide.\n       */\n    function () {\n        this.cycleToNext();\n        this._restartTimer();\n    };\n    /**\n     * Stops the carousel from cycling through items.\n     */\n    /**\n       * Stops the carousel from cycling through items.\n       */\n    NgbCarousel.prototype.pause = /**\n       * Stops the carousel from cycling through items.\n       */\n    function () { this._stopTimer(); };\n    /**\n     * Restarts cycling through the carousel slides from left to right.\n     */\n    /**\n       * Restarts cycling through the carousel slides from left to right.\n       */\n    NgbCarousel.prototype.cycle = /**\n       * Restarts cycling through the carousel slides from left to right.\n       */\n    function () { this._startTimer(); };\n    NgbCarousel.prototype.cycleToNext = function () { this.cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); };\n    NgbCarousel.prototype.cycleToPrev = function () { this.cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); };\n    NgbCarousel.prototype.cycleToSelected = function (slideIdx, direction) {\n        var selectedSlide = this._getSlideById(slideIdx);\n        if (selectedSlide) {\n            if (selectedSlide.id !== this.activeId) {\n                this.slide.emit({ prev: this.activeId, current: selectedSlide.id, direction: direction });\n            }\n            this.activeId = selectedSlide.id;\n        }\n    };\n    NgbCarousel.prototype.getSlideEventDirection = function (currentActiveSlideId, nextActiveSlideId) {\n        var currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n        var nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n        return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n    };\n    NgbCarousel.prototype.keyPrev = function () {\n        if (this.keyboard) {\n            this.prev();\n        }\n    };\n    NgbCarousel.prototype.keyNext = function () {\n        if (this.keyboard) {\n            this.next();\n        }\n    };\n    NgbCarousel.prototype._restartTimer = function () {\n        this._stopTimer();\n        this._startTimer();\n    };\n    NgbCarousel.prototype._startTimer = function () {\n        var _this = this;\n        if (this.interval > 0) {\n            this._slideChangeInterval = setInterval(function () { _this.cycleToNext(); }, this.interval);\n        }\n    };\n    NgbCarousel.prototype._stopTimer = function () { clearInterval(this._slideChangeInterval); };\n    NgbCarousel.prototype._getSlideById = function (slideId) {\n        var slideWithId = this.slides.filter(function (slide) { return slide.id === slideId; });\n        return slideWithId.length ? slideWithId[0] : null;\n    };\n    NgbCarousel.prototype._getSlideIdxById = function (slideId) {\n        return this.slides.toArray().indexOf(this._getSlideById(slideId));\n    };\n    NgbCarousel.prototype._getNextSlide = function (currentSlideId) {\n        var slideArr = this.slides.toArray();\n        var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        var isLastSlide = currentSlideIdx === slideArr.length - 1;\n        return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n            slideArr[currentSlideIdx + 1].id;\n    };\n    NgbCarousel.prototype._getPrevSlide = function (currentSlideId) {\n        var slideArr = this.slides.toArray();\n        var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        var isFirstSlide = currentSlideIdx === 0;\n        return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n            slideArr[currentSlideIdx - 1].id;\n    };\n    NgbCarousel.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-carousel',\n                    exportAs: 'ngbCarousel',\n                    host: {\n                        'class': 'carousel slide',\n                        '[style.display]': '\"block\"',\n                        'tabIndex': '0',\n                        '(mouseenter)': 'pause()',\n                        '(mouseleave)': 'cycle()',\n                        '(keydown.arrowLeft)': 'keyPrev()',\n                        '(keydown.arrowRight)': 'keyNext()'\n                    },\n                    template: \"\\n    <ol class=\\\"carousel-indicators\\\">\\n      <li *ngFor=\\\"let slide of slides\\\" [id]=\\\"slide.id\\\" [class.active]=\\\"slide.id === activeId\\\"\\n          (click)=\\\"cycleToSelected(slide.id, getSlideEventDirection(activeId, slide.id))\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\">\\n      <div *ngFor=\\\"let slide of slides\\\" class=\\\"carousel-item\\\" [class.active]=\\\"slide.id === activeId\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"slide.tplRef\\\"></ng-template>\\n      </div>\\n    </div>\\n    <a class=\\\"carousel-control-prev\\\" role=\\\"button\\\" (click)=\\\"cycleToPrev()\\\">\\n      <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\">Previous</span>\\n    </a>\\n    <a class=\\\"carousel-control-next\\\" role=\\\"button\\\" (click)=\\\"cycleToNext()\\\">\\n      <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\">Next</span>\\n    </a>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbCarousel.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__carousel_config__[\"a\" /* NgbCarouselConfig */], },\n    ]; };\n    NgbCarousel.propDecorators = {\n        \"slides\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [NgbSlide,] },],\n        \"interval\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"wrap\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"keyboard\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"activeId\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"slide\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbCarousel;\n}());\n\n/**\n * Enum to define the carousel slide event direction\n */\n/**\n * Enum to define the carousel slide event direction\n */\nvar NgbSlideEventDirection;\n/**\n * Enum to define the carousel slide event direction\n */\n(function (NgbSlideEventDirection) {\n    NgbSlideEventDirection[NgbSlideEventDirection[\"LEFT\"] = 'left'] = \"LEFT\";\n    NgbSlideEventDirection[NgbSlideEventDirection[\"RIGHT\"] = 'right'] = \"RIGHT\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\nvar NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n//# sourceMappingURL=carousel.js.map\n\n/***/ }),\n\n/***/ 270:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbCollapseModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__collapse__ = __webpack_require__(271);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__collapse__[\"a\"]; });\n\n\n\nvar NgbCollapseModule = (function () {\n    function NgbCollapseModule() {\n    }\n    NgbCollapseModule.forRoot = function () { return { ngModule: NgbCollapseModule, providers: [] }; };\n    NgbCollapseModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: [__WEBPACK_IMPORTED_MODULE_1__collapse__[\"a\" /* NgbCollapse */]], exports: [__WEBPACK_IMPORTED_MODULE_1__collapse__[\"a\" /* NgbCollapse */]] },] },\n    ];\n    /** @nocollapse */\n    NgbCollapseModule.ctorParameters = function () { return []; };\n    return NgbCollapseModule;\n}());\n\n//# sourceMappingURL=collapse.module.js.map\n\n/***/ }),\n\n/***/ 271:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbCollapse; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\n/**\n * The NgbCollapse directive provides a simple way to hide and show an element with animations.\n */\nvar NgbCollapse = (function () {\n    function NgbCollapse() {\n        /**\n           * A flag indicating collapsed (true) or open (false) state.\n           */\n        this.collapsed = false;\n    }\n    NgbCollapse.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: '[ngbCollapse]',\n                    exportAs: 'ngbCollapse',\n                    host: { '[class.collapse]': 'true', '[class.show]': '!collapsed' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbCollapse.ctorParameters = function () { return []; };\n    NgbCollapse.propDecorators = {\n        \"collapsed\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['ngbCollapse',] },],\n    };\n    return NgbCollapse;\n}());\n\n//# sourceMappingURL=collapse.js.map\n\n/***/ }),\n\n/***/ 272:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return NgbDatepickerModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__datepicker__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__datepicker_month_view__ = __webpack_require__(275);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__datepicker_navigation__ = __webpack_require__(276);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__datepicker_input__ = __webpack_require__(277);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__datepicker_day_view__ = __webpack_require__(278);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__datepicker_i18n__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ngb_calendar__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngb_date_parser_formatter__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ngb_date_adapter__ = __webpack_require__(74);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__datepicker_navigation_select__ = __webpack_require__(279);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__datepicker_config__ = __webpack_require__(119);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_2__datepicker__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_5__datepicker_input__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_9__ngb_calendar__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__hijri_ngb_calendar_islamic_civil__ = __webpack_require__(280);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_14__hijri_ngb_calendar_islamic_civil__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__hijri_ngb_calendar_islamic_umalqura__ = __webpack_require__(653);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_15__hijri_ngb_calendar_islamic_umalqura__[\"a\"]; });\n/* unused harmony reexport NgbDatepickerMonthView */\n/* unused harmony reexport NgbDatepickerDayView */\n/* unused harmony reexport NgbDatepickerNavigation */\n/* unused harmony reexport NgbDatepickerNavigationSelect */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_13__datepicker_config__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_8__datepicker_i18n__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_11__ngb_date_adapter__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_10__ngb_date_parser_formatter__[\"b\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar NgbDatepickerModule = (function () {\n    function NgbDatepickerModule() {\n    }\n    NgbDatepickerModule.forRoot = function () {\n        return {\n            ngModule: NgbDatepickerModule,\n            providers: [\n                { provide: __WEBPACK_IMPORTED_MODULE_9__ngb_calendar__[\"a\" /* NgbCalendar */], useClass: __WEBPACK_IMPORTED_MODULE_9__ngb_calendar__[\"b\" /* NgbCalendarGregorian */] },\n                { provide: __WEBPACK_IMPORTED_MODULE_8__datepicker_i18n__[\"a\" /* NgbDatepickerI18n */], useClass: __WEBPACK_IMPORTED_MODULE_8__datepicker_i18n__[\"b\" /* NgbDatepickerI18nDefault */] },\n                { provide: __WEBPACK_IMPORTED_MODULE_10__ngb_date_parser_formatter__[\"b\" /* NgbDateParserFormatter */], useClass: __WEBPACK_IMPORTED_MODULE_10__ngb_date_parser_formatter__[\"a\" /* NgbDateISOParserFormatter */] },\n                { provide: __WEBPACK_IMPORTED_MODULE_11__ngb_date_adapter__[\"a\" /* NgbDateAdapter */], useClass: __WEBPACK_IMPORTED_MODULE_11__ngb_date_adapter__[\"b\" /* NgbDateStructAdapter */] }, __WEBPACK_IMPORTED_MODULE_13__datepicker_config__[\"a\" /* NgbDatepickerConfig */]\n            ]\n        };\n    };\n    NgbDatepickerModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                    declarations: [\n                        __WEBPACK_IMPORTED_MODULE_2__datepicker__[\"a\" /* NgbDatepicker */], __WEBPACK_IMPORTED_MODULE_3__datepicker_month_view__[\"a\" /* NgbDatepickerMonthView */], __WEBPACK_IMPORTED_MODULE_4__datepicker_navigation__[\"a\" /* NgbDatepickerNavigation */], __WEBPACK_IMPORTED_MODULE_12__datepicker_navigation_select__[\"a\" /* NgbDatepickerNavigationSelect */], __WEBPACK_IMPORTED_MODULE_7__datepicker_day_view__[\"a\" /* NgbDatepickerDayView */],\n                        __WEBPACK_IMPORTED_MODULE_5__datepicker_input__[\"a\" /* NgbInputDatepicker */]\n                    ],\n                    exports: [__WEBPACK_IMPORTED_MODULE_2__datepicker__[\"a\" /* NgbDatepicker */], __WEBPACK_IMPORTED_MODULE_5__datepicker_input__[\"a\" /* NgbInputDatepicker */]],\n                    imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"], __WEBPACK_IMPORTED_MODULE_6__angular_forms__[\"FormsModule\"]],\n                    entryComponents: [__WEBPACK_IMPORTED_MODULE_2__datepicker__[\"a\" /* NgbDatepicker */]]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerModule.ctorParameters = function () { return []; };\n    return NgbDatepickerModule;\n}());\n\n//# sourceMappingURL=datepicker.module.js.map\n\n/***/ }),\n\n/***/ 273:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = isChangedDate;\n/* unused harmony export dateComparator */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = checkMinBeforeMax;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = checkDateInRange;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = isDateSelectable;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = generateSelectBoxMonths;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = generateSelectBoxYears;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = nextMonthDisabled;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = prevMonthDisabled;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = buildMonths;\n/* unused harmony export buildMonth */\n/* unused harmony export getFirstViewDate */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ngb_date__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(11);\n\n\nfunction isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\nfunction dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\nfunction checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(\"'maxDate' \" + maxDate + \" should be greater than 'minDate' \" + minDate);\n    }\n}\nfunction checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return __WEBPACK_IMPORTED_MODULE_0__ngb_date__[\"a\" /* NgbDate */].from(minDate);\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return __WEBPACK_IMPORTED_MODULE_0__ngb_date__[\"a\" /* NgbDate */].from(maxDate);\n    }\n    return date;\n}\nfunction isDateSelectable(date, state) {\n    var minDate = state.minDate, maxDate = state.maxDate, disabled = state.disabled, markDisabled = state.markDisabled;\n    // clang-format off\n    return !(!Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"b\" /* isDefined */])(date) ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n    // clang-format on\n}\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    var months = calendar.getMonths();\n    if (minDate && date.year === minDate.year) {\n        var index = months.findIndex(function (month) { return month === minDate.month; });\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        var index = months.findIndex(function (month) { return month === maxDate.month; });\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    var start = minDate && minDate.year || date.year - 10;\n    var end = maxDate && maxDate.year || date.year + 10;\n    return Array.from({ length: end - start + 1 }, function (e, i) { return start + i; });\n}\nfunction nextMonthDisabled(calendar, date, maxDate) {\n    return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\nfunction prevMonthDisabled(calendar, date, minDate) {\n    var prevDate = calendar.getPrev(date, 'm');\n    return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n        prevDate.year < minDate.year && minDate.month === 1);\n}\nfunction buildMonths(calendar, date, state, force) {\n    var displayMonths = state.displayMonths, months = state.months;\n    var newMonths = [];\n    var _loop_1 = function (i) {\n        var newDate = calendar.getNext(date, 'm', i);\n        var index = months.findIndex(function (month) { return month.firstDate.equals(newDate); });\n        if (force || index === -1) {\n            newMonths.push(buildMonth(calendar, newDate, state));\n        }\n        else {\n            newMonths.push(months[index]);\n        }\n    };\n    for (var i = 0; i < displayMonths; i++) {\n        _loop_1(i);\n    }\n    return newMonths;\n}\nfunction buildMonth(calendar, date, state) {\n    var minDate = state.minDate, maxDate = state.maxDate, firstDayOfWeek = state.firstDayOfWeek, markDisabled = state.markDisabled;\n    var month = { firstDate: null, lastDate: null, number: date.month, year: date.year, weeks: [], weekdays: [] };\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // month has weeks\n    for (var week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        var days = [];\n        // week has days\n        for (var day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0) {\n                month.weekdays.push(calendar.getWeekday(date));\n            }\n            var newDate = new __WEBPACK_IMPORTED_MODULE_0__ngb_date__[\"a\" /* NgbDate */](date.year, date.month, date.day);\n            var nextDate = calendar.getNext(newDate);\n            // marking date as disabled\n            var disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            days.push({\n                date: newDate,\n                context: {\n                    date: { year: newDate.year, month: newDate.month, day: newDate.day },\n                    currentMonth: month.number,\n                    disabled: disabled,\n                    focused: false,\n                    selected: false\n                }\n            });\n            date = nextDate;\n        }\n        month.weeks.push({ number: calendar.getWeekNumber(days.map(function (day) { return __WEBPACK_IMPORTED_MODULE_0__ngb_date__[\"a\" /* NgbDate */].from(day.date); }), firstDayOfWeek), days: days });\n    }\n    return month;\n}\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n    var daysPerWeek = calendar.getDaysPerWeek();\n    var firstMonthDate = new __WEBPACK_IMPORTED_MODULE_0__ngb_date__[\"a\" /* NgbDate */](date.year, date.month, 1);\n    var dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n//# sourceMappingURL=datepicker-tools.js.map\n\n/***/ }),\n\n/***/ 274:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NavigationEvent; });\n// clang-format on\n// clang-format on\nvar NavigationEvent;\n// clang-format on\n(function (NavigationEvent) {\n    NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n    NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n//# sourceMappingURL=datepicker-view-model.js.map\n\n/***/ }),\n\n/***/ 275:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDatepickerMonthView; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ngb_date__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__datepicker_i18n__ = __webpack_require__(34);\n\n\n\nvar NgbDatepickerMonthView = (function () {\n    function NgbDatepickerMonthView(i18n) {\n        this.i18n = i18n;\n        this.select = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgbDatepickerMonthView.prototype.doSelect = function (day) {\n        if (!day.context.disabled && !this.isHidden(day)) {\n            this.select.emit(__WEBPACK_IMPORTED_MODULE_1__ngb_date__[\"a\" /* NgbDate */].from(day.date));\n        }\n    };\n    NgbDatepickerMonthView.prototype.isCollapsed = function (week) {\n        return this.outsideDays === 'collapsed' && week.days[0].date.month !== this.month.number &&\n            week.days[week.days.length - 1].date.month !== this.month.number;\n    };\n    NgbDatepickerMonthView.prototype.isHidden = function (day) {\n        return (this.outsideDays === 'hidden' || this.outsideDays === 'collapsed') && this.month.number !== day.date.month;\n    };\n    NgbDatepickerMonthView.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-datepicker-month-view',\n                    host: { 'class': 'd-block' },\n                    styles: [\"\\n    .ngb-dp-weekday, .ngb-dp-week-number {\\n      line-height: 2rem;\\n    }\\n    .ngb-dp-weekday {\\n      color: #5bc0de;\\n    }\\n    .ngb-dp-week {\\n        border-radius: 0.25rem;\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n        display: flex;\\n    }\\n    .ngb-dp-weekdays {\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\\n      border-radius: 0rem;\\n    }\\n    .ngb-dp-day, .ngb-dp-weekday, .ngb-dp-week-number {\\n      width: 2rem;\\n      height: 2rem;\\n    }\\n    .ngb-dp-day {\\n      cursor: pointer;\\n    }\\n    .ngb-dp-day.disabled, .ngb-dp-day.hidden {\\n      cursor: default;\\n    }\\n  \"],\n                    template: \"\\n    <div *ngIf=\\\"showWeekdays\\\" class=\\\"ngb-dp-week ngb-dp-weekdays bg-light\\\">\\n      <div *ngIf=\\\"showWeekNumbers\\\" class=\\\"ngb-dp-weekday ngb-dp-showweek\\\"></div>\\n      <div *ngFor=\\\"let w of month.weekdays\\\" class=\\\"ngb-dp-weekday small text-center font-italic\\\">\\n        {{ i18n.getWeekdayShortName(w) }}\\n      </div>\\n    </div>\\n    <ng-template ngFor let-week [ngForOf]=\\\"month.weeks\\\">\\n      <div *ngIf=\\\"!isCollapsed(week)\\\" class=\\\"ngb-dp-week\\\">\\n        <div *ngIf=\\\"showWeekNumbers\\\" class=\\\"ngb-dp-week-number small text-center font-italic text-muted\\\">{{ week.number }}</div>\\n        <div *ngFor=\\\"let day of week.days\\\" (click)=\\\"doSelect(day)\\\" class=\\\"ngb-dp-day\\\" [class.disabled]=\\\"day.context.disabled\\\"\\n         [class.hidden]=\\\"isHidden(day)\\\">\\n          <ng-template [ngIf]=\\\"!isHidden(day)\\\">\\n            <ng-template [ngTemplateOutlet]=\\\"dayTemplate\\\" [ngTemplateOutletContext]=\\\"day.context\\\"></ng-template>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerMonthView.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_2__datepicker_i18n__[\"a\" /* NgbDatepickerI18n */], },\n    ]; };\n    NgbDatepickerMonthView.propDecorators = {\n        \"dayTemplate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"month\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"outsideDays\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"showWeekdays\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"showWeekNumbers\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"select\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbDatepickerMonthView;\n}());\n\n//# sourceMappingURL=datepicker-month-view.js.map\n\n/***/ }),\n\n/***/ 276:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDatepickerNavigation; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__datepicker_view_model__ = __webpack_require__(274);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngb_date__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__datepicker_i18n__ = __webpack_require__(34);\n\n\n\n\n// The -ms- and -webkit- element for the CSS can be removed if we are generating the CSS using SASS.\nvar NgbDatepickerNavigation = (function () {\n    function NgbDatepickerNavigation(i18n) {\n        this.i18n = i18n;\n        this.navigation = __WEBPACK_IMPORTED_MODULE_1__datepicker_view_model__[\"a\" /* NavigationEvent */];\n        this.months = [];\n        this.navigate = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.select = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgbDatepickerNavigation.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-datepicker-navigation',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    styles: [\"\\n    :host {\\n      height: 2rem;\\n      line-height: 1.85rem;\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n    }\\n    .ngb-dp-navigation-chevron::before {\\n      border-style: solid;\\n      border-width: 0.2em 0.2em 0 0;\\n      content: '';\\n      display: inline-block;\\n      width: 0.75em;\\n      height: 0.75em;\\n      transform: rotate(-135deg);\\n      -webkit-transform: rotate(-135deg);\\n      -ms-transform: rotate(-135deg);\\n    }\\n    .right .ngb-dp-navigation-chevron:before {\\n      -webkit-transform: rotate(45deg);\\n      -ms-transform: rotate(45deg);\\n      transform: rotate(45deg);\\n    }\\n    .ngb-dp-arrow {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-flex: 1 1 auto;\\n      -ms-flex: 1 1 auto;\\n      flex-basis: auto;\\n      flex-grow: 1;\\n      padding-right: 0px;\\n      padding-left: 0px;\\n      margin: 0px;\\n      width: 2rem;\\n      height: 2rem;\\n    }\\n    .ngb-dp-arrow.right {\\n      -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n      justify-content: flex-end;\\n    }\\n    .ngb-dp-arrow-btn {\\n      padding: 0rem 1rem;\\n    }\\n    .ngb-dp-month-name {\\n      font-size: larger;\\n      height: 2rem;\\n      line-height: 2rem;\\n      text-align: center;\\n    }\\n    .ngb-dp-navigation-select {\\n      -webkit-box-flex: 1 1 9rem;\\n      -ms-flex:  1 1 9rem;\\n      flex-grow: 1;\\n      flex-basis: 9rem;\\n    }\\n  \"],\n                    template: \"\\n  <div class=\\\"ngb-dp-arrow\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\"\\n            (click)=\\\"!!navigate.emit(navigation.PREV)\\\" [disabled]=\\\"prevDisabled\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n    </button>\\n  </div>\\n    <ngb-datepicker-navigation-select *ngIf=\\\"showSelect\\\" class=\\\"d-block ngb-dp-navigation-select\\\"\\n      [date]=\\\"date\\\"\\n      [disabled] = \\\"disabled\\\"\\n      [months]=\\\"selectBoxes.months\\\"\\n      [years]=\\\"selectBoxes.years\\\"\\n      (select)=\\\"select.emit($event)\\\">\\n    </ngb-datepicker-navigation-select>\\n\\n    <ng-template *ngIf=\\\"!showSelect\\\" ngFor let-month [ngForOf]=\\\"months\\\" let-i=\\\"index\\\">\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i > 0\\\"></div>\\n      <div class=\\\"ngb-dp-month-name d-block\\\">\\n        {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\\n      </div>\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i !== months.length - 1\\\"></div>\\n    </ng-template>\\n    <div class=\\\"ngb-dp-arrow right\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\"\\n            (click)=\\\"!!navigate.emit(navigation.NEXT)\\\" [disabled]=\\\"nextDisabled\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n    </button>\\n    </div>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerNavigation.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_3__datepicker_i18n__[\"a\" /* NgbDatepickerI18n */], },\n    ]; };\n    NgbDatepickerNavigation.propDecorators = {\n        \"date\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"disabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"months\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"showSelect\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"prevDisabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"nextDisabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"selectBoxes\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"navigate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        \"select\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbDatepickerNavigation;\n}());\n\n//# sourceMappingURL=datepicker-navigation.js.map\n\n/***/ }),\n\n/***/ 277:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbInputDatepicker; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngb_date__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__datepicker__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ngb_date_parser_formatter__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_positioning__ = __webpack_require__(54);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ngb_date_adapter__ = __webpack_require__(74);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ngb_calendar__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__datepicker_service__ = __webpack_require__(118);\n\n\n\n\n\n\n\n\n\nvar NGB_DATEPICKER_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbInputDatepicker; }),\n    multi: true\n};\nvar NGB_DATEPICKER_VALIDATOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__[\"NG_VALIDATORS\"],\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbInputDatepicker; }),\n    multi: true\n};\n/**\n * A directive that makes it possible to have datepickers on input fields.\n * Manages integration with the input field itself (data entry) and ngModel (validation etc.).\n */\nvar NgbInputDatepicker = (function () {\n    function NgbInputDatepicker(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, ngZone, _service, _calendar, _ngbDateAdapter) {\n        var _this = this;\n        this._parserFormatter = _parserFormatter;\n        this._elRef = _elRef;\n        this._vcRef = _vcRef;\n        this._renderer = _renderer;\n        this._cfr = _cfr;\n        this._service = _service;\n        this._calendar = _calendar;\n        this._ngbDateAdapter = _ngbDateAdapter;\n        this._cRef = null;\n        this._disabled = false;\n        /**\n           * Indicates whether the datepicker popup should be closed automatically after date selection or not.\n           * If the value is 'false', the popup can be closed via 'close()' or 'toggle()' methods.\n           *\n           * @since 1.1.0\n           */\n        this.autoClose = true;\n        /**\n              * Placement of a datepicker popup accepts:\n              *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n              *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n              * and array of above values.\n              */\n        this.placement = 'bottom-left';\n        /**\n           * An event fired when user selects a date using keyboard or mouse.\n           * The payload of the event is currently selected NgbDateStruct.\n           *\n           * @since 1.1.1\n           */\n        this.dateSelect = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n           * An event fired when navigation happens and currently displayed month changes.\n           * See NgbDatepickerNavigateEvent for the payload info.\n           */\n        this.navigate = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._onChange = function (_) { };\n        this._onTouched = function () { };\n        this._validatorChange = function () { };\n        this._zoneSubscription = ngZone.onStable.subscribe(function () {\n            if (_this._cRef) {\n                Object(__WEBPACK_IMPORTED_MODULE_5__util_positioning__[\"a\" /* positionElements */])(_this._elRef.nativeElement, _this._cRef.location.nativeElement, _this.placement, _this.container === 'body');\n            }\n        });\n    }\n    Object.defineProperty(NgbInputDatepicker.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled;\n        },\n        set: function (value) {\n            this._disabled = value === '' || (value && value !== 'false');\n            if (this.isOpen()) {\n                this._cRef.instance.setDisabledState(this._disabled);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgbInputDatepicker.prototype.registerOnChange = function (fn) { this._onChange = fn; };\n    NgbInputDatepicker.prototype.registerOnTouched = function (fn) { this._onTouched = fn; };\n    NgbInputDatepicker.prototype.registerOnValidatorChange = function (fn) { this._validatorChange = fn; };\n    ;\n    NgbInputDatepicker.prototype.setDisabledState = function (isDisabled) { this.disabled = isDisabled; };\n    NgbInputDatepicker.prototype.validate = function (c) {\n        var value = c.value;\n        if (value === null || value === undefined) {\n            return null;\n        }\n        var ngbDate = this._fromDateStruct(this._ngbDateAdapter.fromModel(value));\n        if (!this._calendar.isValid(ngbDate)) {\n            return { 'ngbDate': { invalid: c.value } };\n        }\n        if (this.minDate && ngbDate.before(__WEBPACK_IMPORTED_MODULE_2__ngb_date__[\"a\" /* NgbDate */].from(this.minDate))) {\n            return { 'ngbDate': { requiredBefore: this.minDate } };\n        }\n        if (this.maxDate && ngbDate.after(__WEBPACK_IMPORTED_MODULE_2__ngb_date__[\"a\" /* NgbDate */].from(this.maxDate))) {\n            return { 'ngbDate': { requiredAfter: this.maxDate } };\n        }\n    };\n    NgbInputDatepicker.prototype.writeValue = function (value) {\n        this._model = this._fromDateStruct(this._ngbDateAdapter.fromModel(value));\n        this._writeModelValue(this._model);\n    };\n    NgbInputDatepicker.prototype.manualDateChange = function (value, updateView) {\n        if (updateView === void 0) { updateView = false; }\n        this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n        this._onChange(this._model ? this._ngbDateAdapter.toModel(this._model) : (value === '' ? null : value));\n        if (updateView && this._model) {\n            this._writeModelValue(this._model);\n        }\n    };\n    NgbInputDatepicker.prototype.isOpen = function () { return !!this._cRef; };\n    /**\n     * Opens the datepicker with the selected date indicated by the ngModel value.\n     */\n    /**\n       * Opens the datepicker with the selected date indicated by the ngModel value.\n       */\n    NgbInputDatepicker.prototype.open = /**\n       * Opens the datepicker with the selected date indicated by the ngModel value.\n       */\n    function () {\n        var _this = this;\n        if (!this.isOpen()) {\n            var cf = this._cfr.resolveComponentFactory(__WEBPACK_IMPORTED_MODULE_3__datepicker__[\"a\" /* NgbDatepicker */]);\n            this._cRef = this._vcRef.createComponent(cf);\n            this._applyPopupStyling(this._cRef.location.nativeElement);\n            this._applyDatepickerInputs(this._cRef.instance);\n            this._subscribeForDatepickerOutputs(this._cRef.instance);\n            this._cRef.instance.ngOnInit();\n            this._cRef.instance.writeValue(this._ngbDateAdapter.toModel(this._model));\n            // date selection event handling\n            this._cRef.instance.registerOnChange(function (selectedDate) {\n                _this.writeValue(selectedDate);\n                _this._onChange(selectedDate);\n            });\n            // focus handling\n            this._cRef.instance.focus();\n            this._cRef.instance.setDisabledState(this.disabled);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n            }\n        }\n    };\n    /**\n     * Closes the datepicker popup.\n     */\n    /**\n       * Closes the datepicker popup.\n       */\n    NgbInputDatepicker.prototype.close = /**\n       * Closes the datepicker popup.\n       */\n    function () {\n        if (this.isOpen()) {\n            this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n            this._cRef = null;\n        }\n    };\n    /**\n     * Toggles the datepicker popup (opens when closed and closes when opened).\n     */\n    /**\n       * Toggles the datepicker popup (opens when closed and closes when opened).\n       */\n    NgbInputDatepicker.prototype.toggle = /**\n       * Toggles the datepicker popup (opens when closed and closes when opened).\n       */\n    function () {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Navigates current view to provided date.\n     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     * Use 'startDate' input as an alternative\n     */\n    /**\n       * Navigates current view to provided date.\n       * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date provided calendar will open current month.\n       * Use 'startDate' input as an alternative\n       */\n    NgbInputDatepicker.prototype.navigateTo = /**\n       * Navigates current view to provided date.\n       * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date provided calendar will open current month.\n       * Use 'startDate' input as an alternative\n       */\n    function (date) {\n        if (this.isOpen()) {\n            this._cRef.instance.navigateTo(date);\n        }\n    };\n    NgbInputDatepicker.prototype.onBlur = function () { this._onTouched(); };\n    NgbInputDatepicker.prototype.ngOnChanges = function (changes) {\n        if (changes['minDate'] || changes['maxDate']) {\n            this._validatorChange();\n        }\n    };\n    NgbInputDatepicker.prototype.ngOnDestroy = function () {\n        this.close();\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbInputDatepicker.prototype._applyDatepickerInputs = function (datepickerInstance) {\n        var _this = this;\n        ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\n            'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n            .forEach(function (optionName) {\n            if (_this[optionName] !== undefined) {\n                datepickerInstance[optionName] = _this[optionName];\n            }\n        });\n        datepickerInstance.startDate = this.startDate || this._model;\n    };\n    NgbInputDatepicker.prototype._applyPopupStyling = function (nativeElement) {\n        this._renderer.addClass(nativeElement, 'dropdown-menu');\n        this._renderer.setStyle(nativeElement, 'padding', '0');\n        this._renderer.addClass(nativeElement, 'show');\n    };\n    NgbInputDatepicker.prototype._subscribeForDatepickerOutputs = function (datepickerInstance) {\n        var _this = this;\n        datepickerInstance.navigate.subscribe(function (date) { return _this.navigate.emit(date); });\n        datepickerInstance.select.subscribe(function (date) {\n            _this.dateSelect.emit(date);\n            if (_this.autoClose) {\n                _this.close();\n            }\n        });\n    };\n    NgbInputDatepicker.prototype._writeModelValue = function (model) {\n        this._renderer.setProperty(this._elRef.nativeElement, 'value', this._parserFormatter.format(model));\n        if (this.isOpen()) {\n            this._cRef.instance.writeValue(this._ngbDateAdapter.toModel(model));\n            this._onTouched();\n        }\n    };\n    NgbInputDatepicker.prototype._fromDateStruct = function (date) {\n        var ngbDate = date ? new __WEBPACK_IMPORTED_MODULE_2__ngb_date__[\"a\" /* NgbDate */](date.year, date.month, date.day) : null;\n        return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    };\n    NgbInputDatepicker.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: 'input[ngbDatepicker]',\n                    exportAs: 'ngbDatepicker',\n                    host: {\n                        '(input)': 'manualDateChange($event.target.value)',\n                        '(change)': 'manualDateChange($event.target.value, true)',\n                        '(keyup.esc)': 'close()',\n                        '(blur)': 'onBlur()',\n                        '[disabled]': 'disabled'\n                    },\n                    providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, __WEBPACK_IMPORTED_MODULE_8__datepicker_service__[\"a\" /* NgbDatepickerService */]]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbInputDatepicker.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_4__ngb_date_parser_formatter__[\"b\" /* NgbDateParserFormatter */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ComponentFactoryResolver\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_8__datepicker_service__[\"a\" /* NgbDatepickerService */], },\n        { type: __WEBPACK_IMPORTED_MODULE_7__ngb_calendar__[\"a\" /* NgbCalendar */], },\n        { type: __WEBPACK_IMPORTED_MODULE_6__ngb_date_adapter__[\"a\" /* NgbDateAdapter */], },\n    ]; };\n    NgbInputDatepicker.propDecorators = {\n        \"autoClose\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"dayTemplate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"displayMonths\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"firstDayOfWeek\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"markDisabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"minDate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"maxDate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"navigation\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"outsideDays\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"placement\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"showWeekdays\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"showWeekNumbers\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"startDate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"container\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"dateSelect\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        \"navigate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        \"disabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbInputDatepicker;\n}());\n\n//# sourceMappingURL=datepicker-input.js.map\n\n/***/ }),\n\n/***/ 278:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDatepickerDayView; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\nvar NgbDatepickerDayView = (function () {\n    function NgbDatepickerDayView() {\n    }\n    NgbDatepickerDayView.prototype.isMuted = function () { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); };\n    NgbDatepickerDayView.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: '[ngbDatepickerDayView]',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    styles: [\"\\n    :host {\\n      text-align: center;\\n      width: 2rem;\\n      height: 2rem;\\n      line-height: 2rem;\\n      border-radius: 0.25rem;\\n      background: transparent;\\n    }\\n    :host.outside {\\n      opacity: 0.5;\\n    }\\n  \"],\n                    host: {\n                        'class': 'btn-light',\n                        '[class.bg-primary]': 'selected',\n                        '[class.text-white]': 'selected',\n                        '[class.text-muted]': 'isMuted()',\n                        '[class.outside]': 'isMuted()',\n                        '[class.active]': 'focused'\n                    },\n                    template: \"{{ date.day }}\"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerDayView.ctorParameters = function () { return []; };\n    NgbDatepickerDayView.propDecorators = {\n        \"currentMonth\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"date\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"disabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"focused\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"selected\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbDatepickerDayView;\n}());\n\n//# sourceMappingURL=datepicker-day-view.js.map\n\n/***/ }),\n\n/***/ 279:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDatepickerNavigationSelect; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ngb_date__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_util__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__datepicker_i18n__ = __webpack_require__(34);\n\n\n\n\nvar NgbDatepickerNavigationSelect = (function () {\n    function NgbDatepickerNavigationSelect(i18n) {\n        this.i18n = i18n;\n        this.select = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgbDatepickerNavigationSelect.prototype.changeMonth = function (month) { this.select.emit(new __WEBPACK_IMPORTED_MODULE_1__ngb_date__[\"a\" /* NgbDate */](this.date.year, Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"h\" /* toInteger */])(month), 1)); };\n    NgbDatepickerNavigationSelect.prototype.changeYear = function (year) { this.select.emit(new __WEBPACK_IMPORTED_MODULE_1__ngb_date__[\"a\" /* NgbDate */](Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"h\" /* toInteger */])(year), this.date.month, 1)); };\n    NgbDatepickerNavigationSelect.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-datepicker-navigation-select',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    styles: [\"\\n    :host>select {\\n      /* to align with btn-sm */\\n      padding: 0.25rem 0.5rem;\\n      font-size: 0.875rem;\\n      line-height: 1.25;\\n      /* to cancel the custom height set by custom-select */\\n      height: inherit;\\n      width: 50%;\\n      display: inline-block;\\n    }\\n  \"],\n                    template: \"\\n    <select\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      [value]=\\\"date?.month\\\"\\n      (change)=\\\"changeMonth($event.target.value)\\\"\\n      tabindex=\\\"-1\\\">\\n        <option *ngFor=\\\"let m of months\\\" [value]=\\\"m\\\">{{ i18n.getMonthShortName(m) }}</option>\\n    </select><select\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      [value]=\\\"date?.year\\\"\\n      (change)=\\\"changeYear($event.target.value)\\\"\\n      tabindex=\\\"-1\\\">\\n        <option *ngFor=\\\"let y of years\\\" [value]=\\\"y\\\">{{ y }}</option>\\n    </select>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerNavigationSelect.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_3__datepicker_i18n__[\"a\" /* NgbDatepickerI18n */], },\n    ]; };\n    NgbDatepickerNavigationSelect.propDecorators = {\n        \"date\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"disabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"months\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"years\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"select\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbDatepickerNavigationSelect;\n}());\n\n//# sourceMappingURL=datepicker-navigation-select.js.map\n\n/***/ }),\n\n/***/ 280:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbCalendarIslamicCivil; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ngb_calendar_hijri__ = __webpack_require__(281);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ngb_date__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(1);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nfunction isGregorianLeapYear(date) {\n    var year = date.getFullYear();\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nfunction mod(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\nvar GREGORIAN_EPOCH = 1721425.5;\nvar ISLAMIC_EPOCH = 1948439.5;\nvar NgbCalendarIslamicCivil = (function (_super) {\n    __extends(NgbCalendarIslamicCivil, _super);\n    function NgbCalendarIslamicCivil() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gdate` is a JS Date to be converted to Hijri.\n     */\n    /**\n       * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n       * `gdate` is a JS Date to be converted to Hijri.\n       */\n    NgbCalendarIslamicCivil.prototype.fromGregorian = /**\n       * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n       * `gdate` is a JS Date to be converted to Hijri.\n       */\n    function (gdate) {\n        var date = new Date(gdate);\n        var gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n        var julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n            -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n            Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(date) ? -1 : -2) + gDay);\n        julianDay = Math.floor(julianDay) + 0.5;\n        var days = julianDay - ISLAMIC_EPOCH;\n        var hYear = Math.floor((30 * days + 10646) / 10631.0);\n        var hMonth = Math.ceil((days - 29 - this._getYearStart(hYear)) / 29.5);\n        hMonth = Math.min(hMonth, 11);\n        var hDay = Math.ceil(days - this._getMonthStart(hYear, hMonth)) + 1;\n        return new __WEBPACK_IMPORTED_MODULE_1__ngb_date__[\"a\" /* NgbDate */](hYear, hMonth + 1, hDay);\n    };\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hijriDate` is an islamic(civil) date to be converted to Gregorian.\n     */\n    /**\n       * Returns the equivalent JS date value for a give input islamic(civil) date.\n       * `hijriDate` is an islamic(civil) date to be converted to Gregorian.\n       */\n    NgbCalendarIslamicCivil.prototype.toGregorian = /**\n       * Returns the equivalent JS date value for a give input islamic(civil) date.\n       * `hijriDate` is an islamic(civil) date to be converted to Gregorian.\n       */\n    function (hijriDate) {\n        var hYear = hijriDate.year;\n        var hMonth = hijriDate.month - 1;\n        var hDate = hijriDate.day;\n        var julianDay = hDate + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n        var wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH, quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524), dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461), yindex = Math.floor(dquad / 365);\n        var year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n        if (!(cent === 4 || yindex === 4)) {\n            year++;\n        }\n        var gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400);\n        var yearday = wjd - gYearStart;\n        var tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n        var leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n        var month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n        var tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n                1);\n        var day = wjd - tjd2 + 1;\n        return new Date(year, month - 1, day);\n    };\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n    /**\n       * Returns the number of days in a specific Hijri month.\n       * `month` is 1 for Muharram, 2 for Safar, etc.\n       * `year` is any Hijri year.\n       */\n    NgbCalendarIslamicCivil.prototype.getDaysInIslamicMonth = /**\n       * Returns the number of days in a specific Hijri month.\n       * `month` is 1 for Muharram, 2 for Safar, etc.\n       * `year` is any Hijri year.\n       */\n    function (month, year) {\n        year = year + Math.floor(month / 13);\n        month = ((month - 1) % 12) + 1;\n        var length = 29 + month % 2;\n        if (month === 12 && this._isIslamicLeapYear(year)) {\n            length++;\n        }\n        return length;\n    };\n    NgbCalendarIslamicCivil.prototype.getNext = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        date = __WEBPACK_IMPORTED_MODULE_1__ngb_date__[\"a\" /* NgbDate */].from(date);\n        switch (period) {\n            case 'y':\n                date = this.setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this.setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this.setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    };\n    NgbCalendarIslamicCivil.prototype.getPrev = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    NgbCalendarIslamicCivil.prototype.getWeekday = function (date) {\n        var day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    NgbCalendarIslamicCivil.prototype.getWeekNumber = function (week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        var date = week[thursdayIndex];\n        var jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        var time = jsDate.getTime();\n        var MuhDate = this.toGregorian(new __WEBPACK_IMPORTED_MODULE_1__ngb_date__[\"a\" /* NgbDate */](date.year, 1, 1)); // Compare with Muharram 1\n        return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    };\n    NgbCalendarIslamicCivil.prototype.getToday = function () { return this.fromGregorian(new Date()); };\n    NgbCalendarIslamicCivil.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbCalendarIslamicCivil.ctorParameters = function () { return []; };\n    return NgbCalendarIslamicCivil;\n}(__WEBPACK_IMPORTED_MODULE_0__ngb_calendar_hijri__[\"a\" /* NgbCalendarHijri */]));\n\n//# sourceMappingURL=ngb-calendar-islamic-civil.js.map\n\n/***/ }),\n\n/***/ 281:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbCalendarHijri; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ngb_calendar__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_util__ = __webpack_require__(11);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar NgbCalendarHijri = (function (_super) {\n    __extends(NgbCalendarHijri, _super);\n    function NgbCalendarHijri() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NgbCalendarHijri.prototype.getDaysPerWeek = function () { return 7; };\n    NgbCalendarHijri.prototype.getMonths = function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; };\n    NgbCalendarHijri.prototype.getWeeksPerMonth = function () { return 6; };\n    NgbCalendarHijri.prototype.isValid = function (date) {\n        return date && Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"d\" /* isNumber */])(date.year) && Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"d\" /* isNumber */])(date.month) && Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"d\" /* isNumber */])(date.day) &&\n            !isNaN(this.toGregorian(date).getTime());\n    };\n    NgbCalendarHijri.prototype.setDay = function (date, day) {\n        day = +day;\n        var mDays = this.getDaysInIslamicMonth(date.month, date.year);\n        if (day <= 0) {\n            while (day <= 0) {\n                date = this.setMonth(date, date.month - 1);\n                mDays = this.getDaysInIslamicMonth(date.month, date.year);\n                day += mDays;\n            }\n        }\n        else if (day > mDays) {\n            while (day > mDays) {\n                day -= mDays;\n                date = this.setMonth(date, date.month + 1);\n                mDays = this.getDaysInIslamicMonth(date.month, date.year);\n            }\n        }\n        date.day = day;\n        return date;\n    };\n    NgbCalendarHijri.prototype.setMonth = function (date, month) {\n        month = +month;\n        date.year = date.year + Math.floor((month - 1) / 12);\n        date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n        return date;\n    };\n    NgbCalendarHijri.prototype.setYear = function (date, yearValue) {\n        date.year = +yearValue;\n        return date;\n    };\n    NgbCalendarHijri.prototype._isIslamicLeapYear = function (year) { return (14 + 11 * year) % 30 < 11; };\n    /**\n     * Returns the start of Hijri Month.\n     * `month` is 0 for Muharram, 1 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n    /**\n       * Returns the start of Hijri Month.\n       * `month` is 0 for Muharram, 1 for Safar, etc.\n       * `year` is any Hijri year.\n       */\n    NgbCalendarHijri.prototype._getMonthStart = /**\n       * Returns the start of Hijri Month.\n       * `month` is 0 for Muharram, 1 for Safar, etc.\n       * `year` is any Hijri year.\n       */\n    function (year, month) {\n        return Math.ceil(29.5 * month) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n    };\n    /**\n     * Returns the start of Hijri year.\n     * `year` is any Hijri year.\n     */\n    /**\n       * Returns the start of Hijri year.\n       * `year` is any Hijri year.\n       */\n    NgbCalendarHijri.prototype._getYearStart = /**\n       * Returns the start of Hijri year.\n       * `year` is any Hijri year.\n       */\n    function (year) { return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0); };\n    NgbCalendarHijri.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbCalendarHijri.ctorParameters = function () { return []; };\n    return NgbCalendarHijri;\n}(__WEBPACK_IMPORTED_MODULE_0__ngb_calendar__[\"a\" /* NgbCalendar */]));\n\n//# sourceMappingURL=ngb-calendar-hijri.js.map\n\n/***/ }),\n\n/***/ 282:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbDropdownModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dropdown__ = __webpack_require__(283);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dropdown_config__ = __webpack_require__(121);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__dropdown__[\"a\"]; });\n/* unused harmony reexport NgbDropdownToggle */\n/* unused harmony reexport NgbDropdownMenu */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__dropdown_config__[\"a\"]; });\n\n\n\n\n\nvar NGB_DROPDOWN_DIRECTIVES = [__WEBPACK_IMPORTED_MODULE_1__dropdown__[\"a\" /* NgbDropdown */], __WEBPACK_IMPORTED_MODULE_1__dropdown__[\"b\" /* NgbDropdownAnchor */], __WEBPACK_IMPORTED_MODULE_1__dropdown__[\"d\" /* NgbDropdownToggle */], __WEBPACK_IMPORTED_MODULE_1__dropdown__[\"c\" /* NgbDropdownMenu */]];\nvar NgbDropdownModule = (function () {\n    function NgbDropdownModule() {\n    }\n    NgbDropdownModule.forRoot = function () { return { ngModule: NgbDropdownModule, providers: [__WEBPACK_IMPORTED_MODULE_2__dropdown_config__[\"a\" /* NgbDropdownConfig */]] }; };\n    NgbDropdownModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownModule.ctorParameters = function () { return []; };\n    return NgbDropdownModule;\n}());\n\n//# sourceMappingURL=dropdown.module.js.map\n\n/***/ }),\n\n/***/ 283:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbDropdownMenu; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbDropdownAnchor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return NgbDropdownToggle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDropdown; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dropdown_config__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_positioning__ = __webpack_require__(54);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n/**\n */\nvar NgbDropdownMenu = (function () {\n    function NgbDropdownMenu(dropdown, _elementRef, _renderer) {\n        this.dropdown = dropdown;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.placement = 'bottom';\n        this.isOpen = false;\n    }\n    NgbDropdownMenu.prototype.isEventFrom = function ($event) { return this._elementRef.nativeElement.contains($event.target); };\n    NgbDropdownMenu.prototype.position = function (triggerEl, placement) {\n        this.applyPlacement(Object(__WEBPACK_IMPORTED_MODULE_2__util_positioning__[\"a\" /* positionElements */])(triggerEl, this._elementRef.nativeElement, placement));\n    };\n    NgbDropdownMenu.prototype.applyPlacement = function (_placement) {\n        // remove the current placement classes\n        this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');\n        this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n        this.placement = _placement;\n        /**\n             * apply the new placement\n             * in case of top use up-arrow or down-arrow otherwise\n             */\n        if (_placement.search('^top') !== -1) {\n            this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');\n        }\n        else {\n            this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n        }\n    };\n    NgbDropdownMenu.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: '[ngbDropdownMenu]',\n                    host: { '[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()', '[attr.x-placement]': 'placement' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownMenu.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbDropdown; }),] },] },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"], },\n    ]; };\n    return NgbDropdownMenu;\n}());\n\n/**\n * Marks an element to which dropdown menu will be anchored. This is a simple version\n * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but\n * doesn't listen to click events to toggle dropdown menu thus enabling support for\n * events other than click.\n *\n * @since 1.1.0\n */\nvar NgbDropdownAnchor = (function () {\n    function NgbDropdownAnchor(dropdown, _elementRef) {\n        this.dropdown = dropdown;\n        this._elementRef = _elementRef;\n        this.anchorEl = _elementRef.nativeElement;\n    }\n    NgbDropdownAnchor.prototype.isEventFrom = function ($event) { return this._elementRef.nativeElement.contains($event.target); };\n    NgbDropdownAnchor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: '[ngbDropdownAnchor]',\n                    host: { 'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownAnchor.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbDropdown; }),] },] },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    ]; };\n    return NgbDropdownAnchor;\n}());\n\n/**\n * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an\n * alternative.\n */\nvar NgbDropdownToggle = (function (_super) {\n    __extends(NgbDropdownToggle, _super);\n    function NgbDropdownToggle(dropdown, elementRef) {\n        return _super.call(this, dropdown, elementRef) || this;\n    }\n    NgbDropdownToggle.prototype.toggleOpen = function () { this.dropdown.toggle(); };\n    NgbDropdownToggle.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: '[ngbDropdownToggle]',\n                    host: {\n                        'class': 'dropdown-toggle',\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'dropdown.isOpen()',\n                        '(click)': 'toggleOpen()'\n                    },\n                    providers: [{ provide: NgbDropdownAnchor, useExisting: Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbDropdownToggle; }) }]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownToggle.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbDropdown; }),] },] },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    ]; };\n    return NgbDropdownToggle;\n}(NgbDropdownAnchor));\n\n/**\n * Transforms a node into a dropdown.\n */\nvar NgbDropdown = (function () {\n    function NgbDropdown(config, ngZone) {\n        var _this = this;\n        /**\n           *  Defines whether or not the dropdown-menu is open initially.\n           */\n        this._open = false;\n        /**\n           *  An event fired when the dropdown is opened or closed.\n           *  Event's payload equals whether dropdown is open.\n           */\n        this.openChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.placement = config.placement;\n        this.autoClose = config.autoClose;\n        this._zoneSubscription = ngZone.onStable.subscribe(function () { _this._positionMenu(); });\n    }\n    NgbDropdown.prototype.ngOnInit = function () {\n        if (this._menu) {\n            this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement);\n        }\n    };\n    /**\n     * Checks if the dropdown menu is open or not.\n     */\n    /**\n       * Checks if the dropdown menu is open or not.\n       */\n    NgbDropdown.prototype.isOpen = /**\n       * Checks if the dropdown menu is open or not.\n       */\n    function () { return this._open; };\n    /**\n     * Opens the dropdown menu of a given navbar or tabbed navigation.\n     */\n    /**\n       * Opens the dropdown menu of a given navbar or tabbed navigation.\n       */\n    NgbDropdown.prototype.open = /**\n       * Opens the dropdown menu of a given navbar or tabbed navigation.\n       */\n    function () {\n        if (!this._open) {\n            this._open = true;\n            this._positionMenu();\n            this.openChange.emit(true);\n        }\n    };\n    /**\n     * Closes the dropdown menu of a given navbar or tabbed navigation.\n     */\n    /**\n       * Closes the dropdown menu of a given navbar or tabbed navigation.\n       */\n    NgbDropdown.prototype.close = /**\n       * Closes the dropdown menu of a given navbar or tabbed navigation.\n       */\n    function () {\n        if (this._open) {\n            this._open = false;\n            this.openChange.emit(false);\n        }\n    };\n    /**\n     * Toggles the dropdown menu of a given navbar or tabbed navigation.\n     */\n    /**\n       * Toggles the dropdown menu of a given navbar or tabbed navigation.\n       */\n    NgbDropdown.prototype.toggle = /**\n       * Toggles the dropdown menu of a given navbar or tabbed navigation.\n       */\n    function () {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    NgbDropdown.prototype.closeFromClick = function ($event) {\n        if (this.autoClose && $event.button !== 2 && !this._isEventFromToggle($event)) {\n            if (this.autoClose === true) {\n                this.close();\n            }\n            else if (this.autoClose === 'inside' && this._isEventFromMenu($event)) {\n                this.close();\n            }\n            else if (this.autoClose === 'outside' && !this._isEventFromMenu($event)) {\n                this.close();\n            }\n        }\n    };\n    NgbDropdown.prototype.closeFromOutsideEsc = function () {\n        if (this.autoClose) {\n            this.close();\n        }\n    };\n    NgbDropdown.prototype.ngOnDestroy = function () { this._zoneSubscription.unsubscribe(); };\n    NgbDropdown.prototype._isEventFromToggle = function ($event) { return this._anchor.isEventFrom($event); };\n    NgbDropdown.prototype._isEventFromMenu = function ($event) { return this._menu ? this._menu.isEventFrom($event) : false; };\n    NgbDropdown.prototype._positionMenu = function () {\n        if (this.isOpen() && this._menu) {\n            this._menu.position(this._anchor.anchorEl, this.placement);\n        }\n    };\n    NgbDropdown.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: '[ngbDropdown]',\n                    exportAs: 'ngbDropdown',\n                    host: {\n                        '[class.show]': 'isOpen()',\n                        '(keyup.esc)': 'closeFromOutsideEsc()',\n                        '(document:click)': 'closeFromClick($event)'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdown.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__dropdown_config__[\"a\" /* NgbDropdownConfig */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    ]; };\n    NgbDropdown.propDecorators = {\n        \"_menu\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChild\"], args: [NgbDropdownMenu,] },],\n        \"_anchor\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChild\"], args: [NgbDropdownAnchor,] },],\n        \"autoClose\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"_open\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['open',] },],\n        \"placement\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"openChange\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbDropdown;\n}());\n\n//# sourceMappingURL=dropdown.js.map\n\n/***/ }),\n\n/***/ 284:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return NgbModalModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__modal_backdrop__ = __webpack_require__(285);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__modal_window__ = __webpack_require__(286);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__modal_stack__ = __webpack_require__(288);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__modal__ = __webpack_require__(290);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_4__modal__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__modal_ref__ = __webpack_require__(289);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_5__modal_ref__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_5__modal_ref__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__modal_dismiss_reasons__ = __webpack_require__(287);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_6__modal_dismiss_reasons__[\"a\"]; });\n\n\n\n\n\n\n\n\nvar NgbModalModule = (function () {\n    function NgbModalModule() {\n    }\n    NgbModalModule.forRoot = function () { return { ngModule: NgbModalModule, providers: [__WEBPACK_IMPORTED_MODULE_4__modal__[\"a\" /* NgbModal */], __WEBPACK_IMPORTED_MODULE_3__modal_stack__[\"a\" /* NgbModalStack */]] }; };\n    NgbModalModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                    declarations: [__WEBPACK_IMPORTED_MODULE_1__modal_backdrop__[\"a\" /* NgbModalBackdrop */], __WEBPACK_IMPORTED_MODULE_2__modal_window__[\"a\" /* NgbModalWindow */]],\n                    entryComponents: [__WEBPACK_IMPORTED_MODULE_1__modal_backdrop__[\"a\" /* NgbModalBackdrop */], __WEBPACK_IMPORTED_MODULE_2__modal_window__[\"a\" /* NgbModalWindow */]],\n                    providers: [__WEBPACK_IMPORTED_MODULE_4__modal__[\"a\" /* NgbModal */]]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbModalModule.ctorParameters = function () { return []; };\n    return NgbModalModule;\n}());\n\n//# sourceMappingURL=modal.module.js.map\n\n/***/ }),\n\n/***/ 285:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbModalBackdrop; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\nvar NgbModalBackdrop = (function () {\n    function NgbModalBackdrop() {\n    }\n    NgbModalBackdrop.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-modal-backdrop',\n                    template: '',\n                    host: { '[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbModalBackdrop.ctorParameters = function () { return []; };\n    NgbModalBackdrop.propDecorators = {\n        \"backdropClass\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbModalBackdrop;\n}());\n\n//# sourceMappingURL=modal-backdrop.js.map\n\n/***/ }),\n\n/***/ 286:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbModalWindow; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__modal_dismiss_reasons__ = __webpack_require__(287);\n\n\n\nvar NgbModalWindow = (function () {\n    function NgbModalWindow(document, _elRef, _renderer) {\n        this._elRef = _elRef;\n        this._renderer = _renderer;\n        this.backdrop = true;\n        this.keyboard = true;\n        this.dismissEvent = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\n        this._document = document;\n    }\n    NgbModalWindow.prototype.backdropClick = function ($event) {\n        if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n            this.dismiss(__WEBPACK_IMPORTED_MODULE_2__modal_dismiss_reasons__[\"a\" /* ModalDismissReasons */].BACKDROP_CLICK);\n        }\n    };\n    NgbModalWindow.prototype.escKey = function ($event) {\n        if (this.keyboard && !$event.defaultPrevented) {\n            this.dismiss(__WEBPACK_IMPORTED_MODULE_2__modal_dismiss_reasons__[\"a\" /* ModalDismissReasons */].ESC);\n        }\n    };\n    NgbModalWindow.prototype.dismiss = function (reason) { this.dismissEvent.emit(reason); };\n    NgbModalWindow.prototype.ngOnInit = function () {\n        this._elWithFocus = this._document.activeElement;\n        this._renderer.addClass(this._document.body, 'modal-open');\n    };\n    NgbModalWindow.prototype.ngAfterViewInit = function () {\n        if (!this._elRef.nativeElement.contains(document.activeElement)) {\n            this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\n        }\n    };\n    NgbModalWindow.prototype.ngOnDestroy = function () {\n        var body = this._document.body;\n        var elWithFocus = this._elWithFocus;\n        var elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        elementToFocus['focus'].apply(elementToFocus, []);\n        this._elWithFocus = null;\n        this._renderer.removeClass(body, 'modal-open');\n    };\n    NgbModalWindow.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-modal-window',\n                    host: {\n                        '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n                        'role': 'dialog',\n                        'tabindex': '-1',\n                        '(keyup.esc)': 'escKey($event)',\n                        '(click)': 'backdropClick($event)'\n                    },\n                    template: \"\\n    <div [class]=\\\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\"><ng-content></ng-content></div>\\n    </div>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbModalWindow.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_0__angular_common__[\"DOCUMENT\"],] },] },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Renderer2\"], },\n    ]; };\n    NgbModalWindow.propDecorators = {\n        \"backdrop\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n        \"centered\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n        \"keyboard\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n        \"size\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n        \"windowClass\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"] },],\n        \"dismissEvent\": [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"], args: ['dismiss',] },],\n    };\n    return NgbModalWindow;\n}());\n\n//# sourceMappingURL=modal-window.js.map\n\n/***/ }),\n\n/***/ 287:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ModalDismissReasons; });\nvar ModalDismissReasons;\n(function (ModalDismissReasons) {\n    ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n//# sourceMappingURL=modal-dismiss-reasons.js.map\n\n/***/ }),\n\n/***/ 288:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbModalStack; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_popup__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_util__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__modal_backdrop__ = __webpack_require__(285);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__modal_window__ = __webpack_require__(286);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__modal_ref__ = __webpack_require__(289);\n\n\n\n\n\n\n\nvar NgbModalStack = (function () {\n    function NgbModalStack(_applicationRef, _injector, _componentFactoryResolver, document) {\n        this._applicationRef = _applicationRef;\n        this._injector = _injector;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._windowAttributes = ['backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\n        this._backdropAttributes = ['backdropClass'];\n        this._document = document;\n    }\n    NgbModalStack.prototype.open = function (moduleCFR, contentInjector, content, options) {\n        var containerEl = Object(__WEBPACK_IMPORTED_MODULE_3__util_util__[\"b\" /* isDefined */])(options.container) ? this._document.querySelector(options.container) : this._document.body;\n        if (!containerEl) {\n            throw new Error(\"The specified modal container \\\"\" + (options.container || 'body') + \"\\\" was not found in the DOM.\");\n        }\n        var activeModal = new __WEBPACK_IMPORTED_MODULE_6__modal_ref__[\"a\" /* NgbActiveModal */]();\n        var contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\n        var backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : null;\n        var windowCmptRef = this._attachWindowComponent(containerEl, contentRef);\n        var ngbModalRef = new __WEBPACK_IMPORTED_MODULE_6__modal_ref__[\"b\" /* NgbModalRef */](windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        activeModal.close = function (result) { ngbModalRef.close(result); };\n        activeModal.dismiss = function (reason) { ngbModalRef.dismiss(reason); };\n        this._applyWindowOptions(windowCmptRef.instance, options);\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            this._applyBackdropOptions(backdropCmptRef.instance, options);\n        }\n        return ngbModalRef;\n    };\n    NgbModalStack.prototype._attachBackdrop = function (containerEl) {\n        var backdropFactory = this._componentFactoryResolver.resolveComponentFactory(__WEBPACK_IMPORTED_MODULE_4__modal_backdrop__[\"a\" /* NgbModalBackdrop */]);\n        var backdropCmptRef = backdropFactory.create(this._injector);\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    };\n    NgbModalStack.prototype._attachWindowComponent = function (containerEl, contentRef) {\n        var windowFactory = this._componentFactoryResolver.resolveComponentFactory(__WEBPACK_IMPORTED_MODULE_5__modal_window__[\"a\" /* NgbModalWindow */]);\n        var windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n        this._applicationRef.attachView(windowCmptRef.hostView);\n        containerEl.appendChild(windowCmptRef.location.nativeElement);\n        return windowCmptRef;\n    };\n    NgbModalStack.prototype._applyWindowOptions = function (windowInstance, options) {\n        this._windowAttributes.forEach(function (optionName) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_3__util_util__[\"b\" /* isDefined */])(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        });\n    };\n    NgbModalStack.prototype._applyBackdropOptions = function (backdropInstance, options) {\n        this._backdropAttributes.forEach(function (optionName) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_3__util_util__[\"b\" /* isDefined */])(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        });\n    };\n    NgbModalStack.prototype._getContentRef = function (moduleCFR, contentInjector, content, context) {\n        if (!content) {\n            return new __WEBPACK_IMPORTED_MODULE_2__util_popup__[\"a\" /* ContentRef */]([]);\n        }\n        else if (content instanceof __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"TemplateRef\"]) {\n            return this._createFromTemplateRef(content, context);\n        }\n        else if (Object(__WEBPACK_IMPORTED_MODULE_3__util_util__[\"e\" /* isString */])(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(moduleCFR, contentInjector, content, context);\n        }\n    };\n    NgbModalStack.prototype._createFromTemplateRef = function (content, context) {\n        var viewRef = content.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new __WEBPACK_IMPORTED_MODULE_2__util_popup__[\"a\" /* ContentRef */]([viewRef.rootNodes], viewRef);\n    };\n    NgbModalStack.prototype._createFromString = function (content) {\n        var component = this._document.createTextNode(\"\" + content);\n        return new __WEBPACK_IMPORTED_MODULE_2__util_popup__[\"a\" /* ContentRef */]([[component]]);\n    };\n    NgbModalStack.prototype._createFromComponent = function (moduleCFR, contentInjector, content, context) {\n        var contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n        var modalContentInjector = __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ReflectiveInjector\"].resolveAndCreate([{ provide: __WEBPACK_IMPORTED_MODULE_6__modal_ref__[\"a\" /* NgbActiveModal */], useValue: context }], contentInjector);\n        var componentRef = contentCmptFactory.create(modalContentInjector);\n        this._applicationRef.attachView(componentRef.hostView);\n        return new __WEBPACK_IMPORTED_MODULE_2__util_popup__[\"a\" /* ContentRef */]([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n    };\n    NgbModalStack.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbModalStack.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ApplicationRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injector\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ComponentFactoryResolver\"], },\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_0__angular_common__[\"DOCUMENT\"],] },] },\n    ]; };\n    return NgbModalStack;\n}());\n\n//# sourceMappingURL=modal-stack.js.map\n\n/***/ }),\n\n/***/ 289:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbActiveModal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbModalRef; });\n/**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nvar /**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nNgbActiveModal = (function () {\n    function NgbActiveModal() {\n    }\n    /**\n     * Can be used to close a modal, passing an optional result.\n     */\n    /**\n       * Can be used to close a modal, passing an optional result.\n       */\n    NgbActiveModal.prototype.close = /**\n       * Can be used to close a modal, passing an optional result.\n       */\n    function (result) { };\n    /**\n     * Can be used to dismiss a modal, passing an optional reason.\n     */\n    /**\n       * Can be used to dismiss a modal, passing an optional reason.\n       */\n    NgbActiveModal.prototype.dismiss = /**\n       * Can be used to dismiss a modal, passing an optional reason.\n       */\n    function (reason) { };\n    return NgbActiveModal;\n}());\n/**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\n\n/**\n * A reference to a newly opened modal.\n */\nvar /**\n * A reference to a newly opened modal.\n */\nNgbModalRef = (function () {\n    function NgbModalRef(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        var _this = this;\n        this._windowCmptRef = _windowCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        _windowCmptRef.instance.dismissEvent.subscribe(function (reason) { _this.dismiss(reason); });\n        this.result = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n        this.result.then(null, function () { });\n    }\n    Object.defineProperty(NgbModalRef.prototype, \"componentInstance\", {\n        /**\n         * The instance of component used as modal's content.\n         * Undefined when a TemplateRef is used as modal's content.\n         */\n        get: /**\n           * The instance of component used as modal's content.\n           * Undefined when a TemplateRef is used as modal's content.\n           */\n        function () {\n            if (this._contentRef.componentRef) {\n                return this._contentRef.componentRef.instance;\n            }\n        },\n        // only needed to keep TS1.8 compatibility\n        set: \n        // only needed to keep TS1.8 compatibility\n        function (instance) { },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Can be used to close a modal, passing an optional result.\n     */\n    /**\n       * Can be used to close a modal, passing an optional result.\n       */\n    NgbModalRef.prototype.close = /**\n       * Can be used to close a modal, passing an optional result.\n       */\n    function (result) {\n        if (this._windowCmptRef) {\n            this._resolve(result);\n            this._removeModalElements();\n        }\n    };\n    /**\n     * Can be used to dismiss a modal, passing an optional reason.\n     */\n    /**\n       * Can be used to dismiss a modal, passing an optional reason.\n       */\n    NgbModalRef.prototype.dismiss = /**\n       * Can be used to dismiss a modal, passing an optional reason.\n       */\n    function (reason) {\n        if (this._windowCmptRef) {\n            if (!this._beforeDismiss || this._beforeDismiss() !== false) {\n                this._reject(reason);\n                this._removeModalElements();\n            }\n        }\n    };\n    NgbModalRef.prototype._removeModalElements = function () {\n        var windowNativeEl = this._windowCmptRef.location.nativeElement;\n        windowNativeEl.parentNode.removeChild(windowNativeEl);\n        this._windowCmptRef.destroy();\n        if (this._backdropCmptRef) {\n            var backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n            backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n            this._backdropCmptRef.destroy();\n        }\n        if (this._contentRef && this._contentRef.viewRef) {\n            this._contentRef.viewRef.destroy();\n        }\n        this._windowCmptRef = null;\n        this._backdropCmptRef = null;\n        this._contentRef = null;\n    };\n    return NgbModalRef;\n}());\n/**\n * A reference to a newly opened modal.\n */\n\n//# sourceMappingURL=modal-ref.js.map\n\n/***/ }),\n\n/***/ 290:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbModal; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__modal_stack__ = __webpack_require__(288);\n\n\n/**\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\n * the \"open\" method!\n */\nvar NgbModal = (function () {\n    function NgbModal(_moduleCFR, _injector, _modalStack) {\n        this._moduleCFR = _moduleCFR;\n        this._injector = _injector;\n        this._modalStack = _modalStack;\n    }\n    /**\n     * Opens a new modal window with the specified content and using supplied options. Content can be provided\n     * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n     * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n     * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n     */\n    /**\n       * Opens a new modal window with the specified content and using supplied options. Content can be provided\n       * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n       * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n       * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n       */\n    NgbModal.prototype.open = /**\n       * Opens a new modal window with the specified content and using supplied options. Content can be provided\n       * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n       * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n       * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n       */\n    function (content, options) {\n        if (options === void 0) { options = {}; }\n        return this._modalStack.open(this._moduleCFR, this._injector, content, options);\n    };\n    NgbModal.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbModal.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ComponentFactoryResolver\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injector\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_1__modal_stack__[\"a\" /* NgbModalStack */], },\n    ]; };\n    return NgbModal;\n}());\n\n//# sourceMappingURL=modal.js.map\n\n/***/ }),\n\n/***/ 291:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbPaginationModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pagination__ = __webpack_require__(292);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pagination_config__ = __webpack_require__(122);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_2__pagination__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__pagination_config__[\"a\"]; });\n\n\n\n\n\n\nvar NgbPaginationModule = (function () {\n    function NgbPaginationModule() {\n    }\n    NgbPaginationModule.forRoot = function () { return { ngModule: NgbPaginationModule, providers: [__WEBPACK_IMPORTED_MODULE_3__pagination_config__[\"a\" /* NgbPaginationConfig */]] }; };\n    NgbPaginationModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: [__WEBPACK_IMPORTED_MODULE_2__pagination__[\"a\" /* NgbPagination */]], exports: [__WEBPACK_IMPORTED_MODULE_2__pagination__[\"a\" /* NgbPagination */]], imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"]] },] },\n    ];\n    /** @nocollapse */\n    NgbPaginationModule.ctorParameters = function () { return []; };\n    return NgbPaginationModule;\n}());\n\n//# sourceMappingURL=pagination.module.js.map\n\n/***/ }),\n\n/***/ 292:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbPagination; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pagination_config__ = __webpack_require__(122);\n\n\n\n/**\n * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!\n */\nvar NgbPagination = (function () {\n    function NgbPagination(config) {\n        this.pageCount = 0;\n        this.pages = [];\n        /**\n           *  Current page. Page numbers start with 1\n           */\n        this.page = 1;\n        /**\n           *  An event fired when the page is changed.\n           *  Event's payload equals to the newly selected page.\n           *  Will fire only if collection size is set and all values are valid.\n           *  Page numbers start with 1\n           */\n        this.pageChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"](true);\n        this.disabled = config.disabled;\n        this.boundaryLinks = config.boundaryLinks;\n        this.directionLinks = config.directionLinks;\n        this.ellipses = config.ellipses;\n        this.maxSize = config.maxSize;\n        this.pageSize = config.pageSize;\n        this.rotate = config.rotate;\n        this.size = config.size;\n    }\n    NgbPagination.prototype.hasPrevious = function () { return this.page > 1; };\n    NgbPagination.prototype.hasNext = function () { return this.page < this.pageCount; };\n    NgbPagination.prototype.selectPage = function (pageNumber) { this._updatePages(pageNumber); };\n    NgbPagination.prototype.ngOnChanges = function (changes) { this._updatePages(this.page); };\n    NgbPagination.prototype.isEllipsis = function (pageNumber) { return pageNumber === -1; };\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n    /**\n       * Appends ellipses and first/last page number to the displayed pages\n       */\n    NgbPagination.prototype._applyEllipses = /**\n       * Appends ellipses and first/last page number to the displayed pages\n       */\n    function (start, end) {\n        if (this.ellipses) {\n            if (start > 0) {\n                if (start > 1) {\n                    this.pages.unshift(-1);\n                }\n                this.pages.unshift(1);\n            }\n            if (end < this.pageCount) {\n                if (end < (this.pageCount - 1)) {\n                    this.pages.push(-1);\n                }\n                this.pages.push(this.pageCount);\n            }\n        }\n    };\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n    /**\n       * Rotates page numbers based on maxSize items visible.\n       * Currently selected page stays in the middle:\n       *\n       * Ex. for selected page = 6:\n       * [5,*6*,7] for maxSize = 3\n       * [4,5,*6*,7] for maxSize = 4\n       */\n    NgbPagination.prototype._applyRotation = /**\n       * Rotates page numbers based on maxSize items visible.\n       * Currently selected page stays in the middle:\n       *\n       * Ex. for selected page = 6:\n       * [5,*6*,7] for maxSize = 3\n       * [4,5,*6*,7] for maxSize = 4\n       */\n    function () {\n        var start = 0;\n        var end = this.pageCount;\n        var leftOffset = Math.floor(this.maxSize / 2);\n        var rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n        if (this.page <= leftOffset) {\n            // very beginning, no rotation -> [0..maxSize]\n            end = this.maxSize;\n        }\n        else if (this.pageCount - this.page < leftOffset) {\n            // very end, no rotation -> [len-maxSize..len]\n            start = this.pageCount - this.maxSize;\n        }\n        else {\n            // rotate\n            start = this.page - leftOffset - 1;\n            end = this.page + rightOffset;\n        }\n        return [start, end];\n    };\n    /**\n     * Paginates page numbers based on maxSize items per page\n     */\n    /**\n       * Paginates page numbers based on maxSize items per page\n       */\n    NgbPagination.prototype._applyPagination = /**\n       * Paginates page numbers based on maxSize items per page\n       */\n    function () {\n        var page = Math.ceil(this.page / this.maxSize) - 1;\n        var start = page * this.maxSize;\n        var end = start + this.maxSize;\n        return [start, end];\n    };\n    NgbPagination.prototype._setPageInRange = function (newPageNo) {\n        var prevPageNo = this.page;\n        this.page = Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"a\" /* getValueInRange */])(newPageNo, this.pageCount, 1);\n        if (this.page !== prevPageNo && Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"d\" /* isNumber */])(this.collectionSize)) {\n            this.pageChange.emit(this.page);\n        }\n    };\n    NgbPagination.prototype._updatePages = function (newPage) {\n        this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n        if (!Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"d\" /* isNumber */])(this.pageCount)) {\n            this.pageCount = 0;\n        }\n        // fill-in model needed to render pages\n        this.pages.length = 0;\n        for (var i = 1; i <= this.pageCount; i++) {\n            this.pages.push(i);\n        }\n        // set page within 1..max range\n        this._setPageInRange(newPage);\n        // apply maxSize if necessary\n        if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n            var start = 0;\n            var end = this.pageCount;\n            // either paginating or rotating page numbers\n            if (this.rotate) {\n                _a = this._applyRotation(), start = _a[0], end = _a[1];\n            }\n            else {\n                _b = this._applyPagination(), start = _b[0], end = _b[1];\n            }\n            this.pages = this.pages.slice(start, end);\n            // adding ellipses\n            this._applyEllipses(start, end);\n        }\n        var _a, _b;\n    };\n    NgbPagination.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-pagination',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    host: { 'role': 'navigation' },\n                    template: \"\\n    <ul [class]=\\\"'pagination' + (size ? ' pagination-' + size : '')\\\">\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"!hasPrevious() || disabled\\\">\\n        <a aria-label=\\\"First\\\" class=\\\"page-link\\\" href (click)=\\\"!!selectPage(1)\\\" [attr.tabindex]=\\\"(hasPrevious() ? null : '-1')\\\">\\n          <span aria-hidden=\\\"true\\\">&laquo;&laquo;</span>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"!hasPrevious() || disabled\\\">\\n        <a aria-label=\\\"Previous\\\" class=\\\"page-link\\\" href (click)=\\\"!!selectPage(page-1)\\\" [attr.tabindex]=\\\"(hasPrevious() ? null : '-1')\\\">\\n          <span aria-hidden=\\\"true\\\">&laquo;</span>\\n        </a>\\n      </li>\\n      <li *ngFor=\\\"let pageNumber of pages\\\" class=\\\"page-item\\\" [class.active]=\\\"pageNumber === page\\\"\\n        [class.disabled]=\\\"isEllipsis(pageNumber) || disabled\\\">\\n        <a *ngIf=\\\"isEllipsis(pageNumber)\\\" class=\\\"page-link\\\">...</a>\\n        <a *ngIf=\\\"!isEllipsis(pageNumber)\\\" class=\\\"page-link\\\" href (click)=\\\"!!selectPage(pageNumber)\\\">\\n          {{pageNumber}}\\n          <span *ngIf=\\\"pageNumber === page\\\" class=\\\"sr-only\\\">(current)</span>\\n        </a>\\n      </li>\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"!hasNext() || disabled\\\">\\n        <a aria-label=\\\"Next\\\" class=\\\"page-link\\\" href (click)=\\\"!!selectPage(page+1)\\\" [attr.tabindex]=\\\"(hasNext() ? null : '-1')\\\">\\n          <span aria-hidden=\\\"true\\\">&raquo;</span>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"!hasNext() || disabled\\\">\\n        <a aria-label=\\\"Last\\\" class=\\\"page-link\\\" href (click)=\\\"!!selectPage(pageCount)\\\" [attr.tabindex]=\\\"(hasNext() ? null : '-1')\\\">\\n          <span aria-hidden=\\\"true\\\">&raquo;&raquo;</span>\\n        </a>\\n      </li>\\n    </ul>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbPagination.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_2__pagination_config__[\"a\" /* NgbPaginationConfig */], },\n    ]; };\n    NgbPagination.propDecorators = {\n        \"disabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"boundaryLinks\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"directionLinks\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"ellipses\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"rotate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"collectionSize\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"maxSize\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"page\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"pageSize\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"pageChange\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        \"size\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbPagination;\n}());\n\n//# sourceMappingURL=pagination.js.map\n\n/***/ }),\n\n/***/ 293:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbPopoverModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__popover__ = __webpack_require__(294);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__popover_config__ = __webpack_require__(123);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__popover__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__popover_config__[\"a\"]; });\n\n\n\n\n\nvar NgbPopoverModule = (function () {\n    function NgbPopoverModule() {\n    }\n    NgbPopoverModule.forRoot = function () { return { ngModule: NgbPopoverModule, providers: [__WEBPACK_IMPORTED_MODULE_2__popover_config__[\"a\" /* NgbPopoverConfig */]] }; };\n    NgbPopoverModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: [__WEBPACK_IMPORTED_MODULE_1__popover__[\"a\" /* NgbPopover */], __WEBPACK_IMPORTED_MODULE_1__popover__[\"b\" /* NgbPopoverWindow */]], exports: [__WEBPACK_IMPORTED_MODULE_1__popover__[\"a\" /* NgbPopover */]], entryComponents: [__WEBPACK_IMPORTED_MODULE_1__popover__[\"b\" /* NgbPopoverWindow */]] },] },\n    ];\n    /** @nocollapse */\n    NgbPopoverModule.ctorParameters = function () { return []; };\n    return NgbPopoverModule;\n}());\n\n//# sourceMappingURL=popover.module.js.map\n\n/***/ }),\n\n/***/ 294:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbPopoverWindow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbPopover; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_triggers__ = __webpack_require__(295);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_positioning__ = __webpack_require__(54);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_popup__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__popover_config__ = __webpack_require__(123);\n\n\n\n\n\nvar nextId = 0;\nvar NgbPopoverWindow = (function () {\n    function NgbPopoverWindow(_element, _renderer) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this.placement = 'top';\n    }\n    NgbPopoverWindow.prototype.applyPlacement = function (_placement) {\n        // remove the current placement classes\n        this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n        this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n        // set the new placement classes\n        this.placement = _placement;\n        // apply the new placement\n        this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n        this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n    };\n    NgbPopoverWindow.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-popover-window',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    host: {\n                        '[class]': '\"popover bs-popover-\" + placement.split(\"-\")[0]+\" bs-popover-\" + placement',\n                        'role': 'tooltip',\n                        '[id]': 'id'\n                    },\n                    template: \"\\n    <div class=\\\"arrow\\\"></div>\\n    <h3 class=\\\"popover-header\\\">{{title}}</h3><div class=\\\"popover-body\\\"><ng-content></ng-content></div>\",\n                    styles: [\"\\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\\n      left: 50%;\\n      margin-left: -5px;\\n    }\\n\\n    :host.bs-popover-top-left .arrow, :host.bs-popover-bottom-left .arrow {\\n      left: 2em;\\n    }\\n\\n    :host.bs-popover-top-right .arrow, :host.bs-popover-bottom-right .arrow {\\n      left: auto;\\n      right: 2em;\\n    }\\n\\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\\n      top: 50%;\\n      margin-top: -5px;\\n    }\\n    \\n    :host.bs-popover-left-top .arrow, :host.bs-popover-right-top .arrow {\\n      top: 0.7em;\\n    }\\n\\n    :host.bs-popover-left-bottom .arrow, :host.bs-popover-right-bottom .arrow {\\n      top: auto;\\n      bottom: 0.7em;\\n    }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbPopoverWindow.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"], },\n    ]; };\n    NgbPopoverWindow.propDecorators = {\n        \"placement\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"title\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"id\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbPopoverWindow;\n}());\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\nvar NgbPopover = (function () {\n    function NgbPopover(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, ngZone) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        /**\n           * Emits an event when the popover is shown\n           */\n        this.shown = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n           * Emits an event when the popover is hidden\n           */\n        this.hidden = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._ngbPopoverWindowId = \"ngb-popover-\" + nextId++;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disablePopover = config.disablePopover;\n        this._popupService = new __WEBPACK_IMPORTED_MODULE_3__util_popup__[\"b\" /* PopupService */](NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n        this._zoneSubscription = ngZone.onStable.subscribe(function () {\n            if (_this._windowRef) {\n                _this._windowRef.instance.applyPlacement(Object(__WEBPACK_IMPORTED_MODULE_2__util_positioning__[\"a\" /* positionElements */])(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body'));\n            }\n        });\n    }\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of the popover.\n     * The context is an optional value to be injected into the popover template when it is created.\n     */\n    /**\n       * Opens an element’s popover. This is considered a “manual” triggering of the popover.\n       * The context is an optional value to be injected into the popover template when it is created.\n       */\n    NgbPopover.prototype.open = /**\n       * Opens an element’s popover. This is considered a “manual” triggering of the popover.\n       * The context is an optional value to be injected into the popover template when it is created.\n       */\n    function (context) {\n        if (!this._windowRef && !this.disablePopover) {\n            this._windowRef = this._popupService.open(this.ngbPopover, context);\n            this._windowRef.instance.title = this.popoverTitle;\n            this._windowRef.instance.id = this._ngbPopoverWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // apply styling to set basic css-classes on target element, before going for positioning\n            this._windowRef.changeDetectorRef.detectChanges();\n            this._windowRef.changeDetectorRef.markForCheck();\n            // position popover along the element\n            this._windowRef.instance.applyPlacement(Object(__WEBPACK_IMPORTED_MODULE_2__util_positioning__[\"a\" /* positionElements */])(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body'));\n            this.shown.emit();\n        }\n    };\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of the popover.\n     */\n    /**\n       * Closes an element’s popover. This is considered a “manual” triggering of the popover.\n       */\n    NgbPopover.prototype.close = /**\n       * Closes an element’s popover. This is considered a “manual” triggering of the popover.\n       */\n    function () {\n        if (this._windowRef) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n        }\n    };\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of the popover.\n     */\n    /**\n       * Toggles an element’s popover. This is considered a “manual” triggering of the popover.\n       */\n    NgbPopover.prototype.toggle = /**\n       * Toggles an element’s popover. This is considered a “manual” triggering of the popover.\n       */\n    function () {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Returns whether or not the popover is currently being shown\n     */\n    /**\n       * Returns whether or not the popover is currently being shown\n       */\n    NgbPopover.prototype.isOpen = /**\n       * Returns whether or not the popover is currently being shown\n       */\n    function () { return this._windowRef != null; };\n    NgbPopover.prototype.ngOnInit = function () {\n        this._unregisterListenersFn = Object(__WEBPACK_IMPORTED_MODULE_1__util_triggers__[\"a\" /* listenToTriggers */])(this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this), this.toggle.bind(this));\n    };\n    NgbPopover.prototype.ngOnDestroy = function () {\n        this.close();\n        this._unregisterListenersFn();\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbPopover.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: '[ngbPopover]', exportAs: 'ngbPopover' },] },\n    ];\n    /** @nocollapse */\n    NgbPopover.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injector\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ComponentFactoryResolver\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_4__popover_config__[\"a\" /* NgbPopoverConfig */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    ]; };\n    NgbPopover.propDecorators = {\n        \"ngbPopover\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"popoverTitle\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"placement\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"triggers\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"container\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"disablePopover\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"shown\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        \"hidden\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbPopover;\n}());\n\n//# sourceMappingURL=popover.js.map\n\n/***/ }),\n\n/***/ 295:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Trigger */\n/* unused harmony export parseTriggers */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = listenToTriggers;\n/* unused harmony export ɵ0 */\nvar Trigger = (function () {\n    function Trigger(open, close) {\n        this.open = open;\n        this.close = close;\n        if (!close) {\n            this.close = open;\n        }\n    }\n    Trigger.prototype.isManual = function () { return this.open === 'manual' || this.close === 'manual'; };\n    return Trigger;\n}());\n\nvar DEFAULT_ALIASES = {\n    'hover': ['mouseenter', 'mouseleave']\n};\nfunction parseTriggers(triggers, aliases) {\n    if (aliases === void 0) { aliases = DEFAULT_ALIASES; }\n    var trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    var parsedTriggers = trimmedTriggers.split(/\\s+/).map(function (trigger) { return trigger.split(':'); }).map(function (triggerPair) {\n        var alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    });\n    var manualTriggers = parsedTriggers.filter(function (triggerPair) { return triggerPair.isManual(); });\n    if (manualTriggers.length > 1) {\n        throw 'Triggers parse error: only one manual trigger is allowed';\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n    }\n    return parsedTriggers;\n}\nvar noopFn = function () { };\nvar ɵ0 = noopFn;\nfunction listenToTriggers(renderer, nativeElement, triggers, openFn, closeFn, toggleFn) {\n    var parsedTriggers = parseTriggers(triggers);\n    var listeners = [];\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return noopFn;\n    }\n    parsedTriggers.forEach(function (trigger) {\n        if (trigger.open === trigger.close) {\n            listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n        }\n        else {\n            listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n        }\n    });\n    return function () { listeners.forEach(function (unsubscribeFn) { return unsubscribeFn(); }); };\n}\n\n//# sourceMappingURL=triggers.js.map\n\n/***/ }),\n\n/***/ 296:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbProgressbarModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__progressbar__ = __webpack_require__(297);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__progressbar_config__ = __webpack_require__(124);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_2__progressbar__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__progressbar_config__[\"a\"]; });\n\n\n\n\n\n\nvar NgbProgressbarModule = (function () {\n    function NgbProgressbarModule() {\n    }\n    NgbProgressbarModule.forRoot = function () { return { ngModule: NgbProgressbarModule, providers: [__WEBPACK_IMPORTED_MODULE_3__progressbar_config__[\"a\" /* NgbProgressbarConfig */]] }; };\n    NgbProgressbarModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: [__WEBPACK_IMPORTED_MODULE_2__progressbar__[\"a\" /* NgbProgressbar */]], exports: [__WEBPACK_IMPORTED_MODULE_2__progressbar__[\"a\" /* NgbProgressbar */]], imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"]] },] },\n    ];\n    /** @nocollapse */\n    NgbProgressbarModule.ctorParameters = function () { return []; };\n    return NgbProgressbarModule;\n}());\n\n//# sourceMappingURL=progressbar.module.js.map\n\n/***/ }),\n\n/***/ 297:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbProgressbar; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__progressbar_config__ = __webpack_require__(124);\n\n\n\n/**\n * Directive that can be used to provide feedback on the progress of a workflow or an action.\n */\nvar NgbProgressbar = (function () {\n    function NgbProgressbar(config) {\n        /**\n           * Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value.\n           */\n        this.value = 0;\n        this.max = config.max;\n        this.animated = config.animated;\n        this.striped = config.striped;\n        this.type = config.type;\n        this.showValue = config.showValue;\n        this.height = config.height;\n    }\n    NgbProgressbar.prototype.getValue = function () { return Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"a\" /* getValueInRange */])(this.value, this.max); };\n    NgbProgressbar.prototype.getPercentValue = function () { return 100 * this.getValue() / this.max; };\n    NgbProgressbar.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-progressbar',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    template: \"\\n    <div class=\\\"progress\\\" [style.height]=\\\"height\\\">\\n      <div class=\\\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\\n    ' progress-bar-striped' : ''}}\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"getPercentValue()\\\"\\n    [attr.aria-valuenow]=\\\"getValue()\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"max\\\">\\n        <span *ngIf=\\\"showValue\\\">{{getPercentValue()}}%</span><ng-content></ng-content>\\n      </div>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbProgressbar.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_2__progressbar_config__[\"a\" /* NgbProgressbarConfig */], },\n    ]; };\n    NgbProgressbar.propDecorators = {\n        \"max\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"animated\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"striped\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"showValue\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"type\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"value\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"height\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbProgressbar;\n}());\n\n//# sourceMappingURL=progressbar.js.map\n\n/***/ }),\n\n/***/ 298:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbRatingModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__rating_config__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__rating__ = __webpack_require__(299);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__rating__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__rating_config__[\"a\"]; });\n\n\n\n\n\n\nvar NgbRatingModule = (function () {\n    function NgbRatingModule() {\n    }\n    NgbRatingModule.forRoot = function () { return { ngModule: NgbRatingModule, providers: [__WEBPACK_IMPORTED_MODULE_2__rating_config__[\"a\" /* NgbRatingConfig */]] }; };\n    NgbRatingModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: [__WEBPACK_IMPORTED_MODULE_3__rating__[\"a\" /* NgbRating */]], exports: [__WEBPACK_IMPORTED_MODULE_3__rating__[\"a\" /* NgbRating */]], imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"]] },] },\n    ];\n    /** @nocollapse */\n    NgbRatingModule.ctorParameters = function () { return []; };\n    return NgbRatingModule;\n}());\n\n//# sourceMappingURL=rating.module.js.map\n\n/***/ }),\n\n/***/ 299:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbRating; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rating_config__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_util__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(25);\n\n\n\n\nvar Key;\n(function (Key) {\n    Key[Key[\"End\"] = 35] = \"End\";\n    Key[Key[\"Home\"] = 36] = \"Home\";\n    Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\nvar NGB_RATING_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_3__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbRating; }),\n    multi: true\n};\n/**\n * Rating directive that will take care of visualising a star rating bar.\n */\nvar NgbRating = (function () {\n    function NgbRating(config, _changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.contexts = [];\n        this.disabled = false;\n        /**\n           * An event fired when a user is hovering over a given rating.\n           * Event's payload equals to the rating being hovered over.\n           */\n        this.hover = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n           * An event fired when a user stops hovering over a given rating.\n           * Event's payload equals to the rating of the last item being hovered over.\n           */\n        this.leave = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n           * An event fired when a user selects a new rating.\n           * Event's payload equals to the newly selected rating.\n           */\n        this.rateChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"](true);\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this.max = config.max;\n        this.readonly = config.readonly;\n    }\n    NgbRating.prototype.ariaValueText = function () { return this.nextRate + \" out of \" + this.max; };\n    NgbRating.prototype.enter = function (value) {\n        if (!this.readonly && !this.disabled) {\n            this._updateState(value);\n        }\n        this.hover.emit(value);\n    };\n    NgbRating.prototype.handleBlur = function () { this.onTouched(); };\n    NgbRating.prototype.handleClick = function (value) { this.update(this.resettable && this.rate === value ? 0 : value); };\n    NgbRating.prototype.handleKeyDown = function (event) {\n        if (Key[Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"i\" /* toString */])(event.which)]) {\n            event.preventDefault();\n            switch (event.which) {\n                case Key.ArrowDown:\n                case Key.ArrowLeft:\n                    this.update(this.rate - 1);\n                    break;\n                case Key.ArrowUp:\n                case Key.ArrowRight:\n                    this.update(this.rate + 1);\n                    break;\n                case Key.Home:\n                    this.update(0);\n                    break;\n                case Key.End:\n                    this.update(this.max);\n                    break;\n            }\n        }\n    };\n    NgbRating.prototype.ngOnChanges = function (changes) {\n        if (changes['rate']) {\n            this.update(this.rate);\n        }\n    };\n    NgbRating.prototype.ngOnInit = function () {\n        this.contexts = Array.from({ length: this.max }, function (v, k) { return ({ fill: 0, index: k }); });\n        this._updateState(this.rate);\n    };\n    NgbRating.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbRating.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbRating.prototype.reset = function () {\n        this.leave.emit(this.nextRate);\n        this._updateState(this.rate);\n    };\n    NgbRating.prototype.setDisabledState = function (isDisabled) { this.disabled = isDisabled; };\n    NgbRating.prototype.update = function (value, internalChange) {\n        if (internalChange === void 0) { internalChange = true; }\n        var newRate = Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"a\" /* getValueInRange */])(value, this.max, 0);\n        if (!this.readonly && !this.disabled && this.rate !== newRate) {\n            this.rate = newRate;\n            this.rateChange.emit(this.rate);\n        }\n        if (internalChange) {\n            this.onChange(this.rate);\n            this.onTouched();\n        }\n        this._updateState(this.rate);\n    };\n    NgbRating.prototype.writeValue = function (value) {\n        this.update(value, false);\n        this._changeDetectorRef.markForCheck();\n    };\n    NgbRating.prototype._getFillValue = function (index) {\n        var diff = this.nextRate - index;\n        if (diff >= 1) {\n            return 100;\n        }\n        if (diff < 1 && diff > 0) {\n            return Number.parseInt((diff * 100).toFixed(2));\n        }\n        return 0;\n    };\n    NgbRating.prototype._updateState = function (nextValue) {\n        var _this = this;\n        this.nextRate = nextValue;\n        this.contexts.forEach(function (context, index) { return context.fill = _this._getFillValue(index); });\n    };\n    NgbRating.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-rating',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    host: {\n                        'class': 'd-inline-flex',\n                        'tabindex': '0',\n                        'role': 'slider',\n                        'aria-valuemin': '0',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuenow]': 'nextRate',\n                        '[attr.aria-valuetext]': 'ariaValueText()',\n                        '[attr.aria-disabled]': 'readonly ? true : null',\n                        '(blur)': 'handleBlur()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '(mouseleave)': 'reset()'\n                    },\n                    template: \"\\n    <ng-template #t let-fill=\\\"fill\\\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"contexts\\\" let-index=\\\"index\\\">\\n      <span class=\\\"sr-only\\\">({{ index < nextRate ? '*' : ' ' }})</span>\\n      <span (mouseenter)=\\\"enter(index + 1)\\\" (click)=\\\"handleClick(index + 1)\\\" [style.cursor]=\\\"readonly || disabled ? 'default' : 'pointer'\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"starTemplate || t\\\" [ngTemplateOutletContext]=\\\"contexts[index]\\\"></ng-template>\\n      </span>\\n    </ng-template>\\n  \",\n                    providers: [NGB_RATING_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbRating.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__rating_config__[\"a\" /* NgbRatingConfig */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectorRef\"], },\n    ]; };\n    NgbRating.propDecorators = {\n        \"max\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"rate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"readonly\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"resettable\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"starTemplate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChild\"], args: [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"],] },],\n        \"hover\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        \"leave\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        \"rateChange\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbRating;\n}());\n\n//# sourceMappingURL=rating.js.map\n\n/***/ }),\n\n/***/ 300:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return NgbTabsetModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tabset__ = __webpack_require__(301);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tabset_config__ = __webpack_require__(126);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_2__tabset__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_2__tabset__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__tabset__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__tabset__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_3__tabset_config__[\"a\"]; });\n\n\n\n\n\n\nvar NGB_TABSET_DIRECTIVES = [__WEBPACK_IMPORTED_MODULE_2__tabset__[\"d\" /* NgbTabset */], __WEBPACK_IMPORTED_MODULE_2__tabset__[\"a\" /* NgbTab */], __WEBPACK_IMPORTED_MODULE_2__tabset__[\"b\" /* NgbTabContent */], __WEBPACK_IMPORTED_MODULE_2__tabset__[\"c\" /* NgbTabTitle */]];\nvar NgbTabsetModule = (function () {\n    function NgbTabsetModule() {\n    }\n    NgbTabsetModule.forRoot = function () { return { ngModule: NgbTabsetModule, providers: [__WEBPACK_IMPORTED_MODULE_3__tabset_config__[\"a\" /* NgbTabsetConfig */]] }; };\n    NgbTabsetModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"]] },] },\n    ];\n    /** @nocollapse */\n    NgbTabsetModule.ctorParameters = function () { return []; };\n    return NgbTabsetModule;\n}());\n\n//# sourceMappingURL=tabset.module.js.map\n\n/***/ }),\n\n/***/ 301:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbTabTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbTabContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbTab; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return NgbTabset; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tabset_config__ = __webpack_require__(126);\n\n\nvar nextId = 0;\n/**\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\n */\nvar NgbTabTitle = (function () {\n    function NgbTabTitle(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbTabTitle.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: 'ng-template[ngbTabTitle]' },] },\n    ];\n    /** @nocollapse */\n    NgbTabTitle.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"], },\n    ]; };\n    return NgbTabTitle;\n}());\n\n/**\n * This directive must be used to wrap content to be displayed in a tab.\n */\nvar NgbTabContent = (function () {\n    function NgbTabContent(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbTabContent.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: 'ng-template[ngbTabContent]' },] },\n    ];\n    /** @nocollapse */\n    NgbTabContent.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"], },\n    ]; };\n    return NgbTabContent;\n}());\n\n/**\n * A directive representing an individual tab.\n */\nvar NgbTab = (function () {\n    function NgbTab() {\n        /**\n           * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\n           */\n        this.id = \"ngb-tab-\" + nextId++;\n        /**\n           * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\n           */\n        this.disabled = false;\n    }\n    NgbTab.prototype.ngAfterContentChecked = function () {\n        // We are using @ContentChildren instead of @ContantChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    };\n    NgbTab.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: 'ngb-tab' },] },\n    ];\n    /** @nocollapse */\n    NgbTab.ctorParameters = function () { return []; };\n    NgbTab.propDecorators = {\n        \"id\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"title\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"disabled\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"titleTpls\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [NgbTabTitle, { descendants: false },] },],\n        \"contentTpls\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [NgbTabContent, { descendants: false },] },],\n    };\n    return NgbTab;\n}());\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\nvar NgbTabset = (function () {\n    function NgbTabset(config) {\n        /**\n           * Whether the closed tabs should be hidden without destroying them\n           */\n        this.destroyOnHide = true;\n        /**\n           * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\n           */\n        this.tabChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.type = config.type;\n        this.justify = config.justify;\n        this.orientation = config.orientation;\n    }\n    Object.defineProperty(NgbTabset.prototype, \"justify\", {\n        set: /**\n           * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or\n           * 'justified'\n           * The default value is 'start'.\n           */\n        function (className) {\n            if (className === 'fill' || className === 'justified') {\n                this.justifyClass = \"nav-\" + className;\n            }\n            else {\n                this.justifyClass = \"justify-content-\" + className;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Selects the tab with the given id and shows its associated pane.\n     * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n     */\n    /**\n       * Selects the tab with the given id and shows its associated pane.\n       * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n       */\n    NgbTabset.prototype.select = /**\n       * Selects the tab with the given id and shows its associated pane.\n       * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n       */\n    function (tabId) {\n        var selectedTab = this._getTabById(tabId);\n        if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n            var defaultPrevented_1 = false;\n            this.tabChange.emit({ activeId: this.activeId, nextId: selectedTab.id, preventDefault: function () { defaultPrevented_1 = true; } });\n            if (!defaultPrevented_1) {\n                this.activeId = selectedTab.id;\n            }\n        }\n    };\n    NgbTabset.prototype.ngAfterContentChecked = function () {\n        // auto-correct activeId that might have been set incorrectly as input\n        var activeTab = this._getTabById(this.activeId);\n        this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n    };\n    NgbTabset.prototype._getTabById = function (id) {\n        var tabsWithId = this.tabs.filter(function (tab) { return tab.id === id; });\n        return tabsWithId.length ? tabsWithId[0] : null;\n    };\n    NgbTabset.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-tabset',\n                    exportAs: 'ngbTabset',\n                    template: \"\\n    <ul [class]=\\\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\\\" role=\\\"tablist\\\">\\n      <li class=\\\"nav-item\\\" *ngFor=\\\"let tab of tabs\\\">\\n        <a [id]=\\\"tab.id\\\" class=\\\"nav-link\\\" [class.active]=\\\"tab.id === activeId\\\" [class.disabled]=\\\"tab.disabled\\\"\\n          href (click)=\\\"!!select(tab.id)\\\" role=\\\"tab\\\" [attr.tabindex]=\\\"(tab.disabled ? '-1': undefined)\\\"\\n          [attr.aria-controls]=\\\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\\\"\\n          [attr.aria-expanded]=\\\"tab.id === activeId\\\" [attr.aria-disabled]=\\\"tab.disabled\\\">\\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\\\"tab.titleTpl?.templateRef\\\"></ng-template>\\n        </a>\\n      </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n      <ng-template ngFor let-tab [ngForOf]=\\\"tabs\\\">\\n        <div\\n          class=\\\"tab-pane {{tab.id === activeId ? 'active' : null}}\\\"\\n          *ngIf=\\\"!destroyOnHide || tab.id === activeId\\\"\\n          role=\\\"tabpanel\\\"\\n          [attr.aria-labelledby]=\\\"tab.id\\\" id=\\\"{{tab.id}}-panel\\\"\\n          [attr.aria-expanded]=\\\"tab.id === activeId\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tab.contentTpl?.templateRef\\\"></ng-template>\\n        </div>\\n      </ng-template>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTabset.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__tabset_config__[\"a\" /* NgbTabsetConfig */], },\n    ]; };\n    NgbTabset.propDecorators = {\n        \"tabs\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [NgbTab,] },],\n        \"activeId\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"destroyOnHide\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"justify\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"orientation\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"type\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"tabChange\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbTabset;\n}());\n\n//# sourceMappingURL=tabset.js.map\n\n/***/ }),\n\n/***/ 302:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbTimepickerModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timepicker__ = __webpack_require__(303);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__timepicker_config__ = __webpack_require__(127);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_2__timepicker__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__timepicker_config__[\"a\"]; });\n\n\n\n\n\n\nvar NgbTimepickerModule = (function () {\n    function NgbTimepickerModule() {\n    }\n    NgbTimepickerModule.forRoot = function () { return { ngModule: NgbTimepickerModule, providers: [__WEBPACK_IMPORTED_MODULE_3__timepicker_config__[\"a\" /* NgbTimepickerConfig */]] }; };\n    NgbTimepickerModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: [__WEBPACK_IMPORTED_MODULE_2__timepicker__[\"a\" /* NgbTimepicker */]], exports: [__WEBPACK_IMPORTED_MODULE_2__timepicker__[\"a\" /* NgbTimepicker */]], imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"]] },] },\n    ];\n    /** @nocollapse */\n    NgbTimepickerModule.ctorParameters = function () { return []; };\n    return NgbTimepickerModule;\n}());\n\n//# sourceMappingURL=timepicker.module.js.map\n\n/***/ }),\n\n/***/ 303:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbTimepicker; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_util__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngb_time__ = __webpack_require__(654);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__timepicker_config__ = __webpack_require__(127);\n\n\n\n\n\nvar NGB_TIMEPICKER_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbTimepicker; }),\n    multi: true\n};\n/**\n * A lightweight & configurable timepicker directive.\n */\nvar NgbTimepicker = (function () {\n    function NgbTimepicker(config) {\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this.meridian = config.meridian;\n        this.spinners = config.spinners;\n        this.seconds = config.seconds;\n        this.hourStep = config.hourStep;\n        this.minuteStep = config.minuteStep;\n        this.secondStep = config.secondStep;\n        this.disabled = config.disabled;\n        this.readonlyInputs = config.readonlyInputs;\n        this.size = config.size;\n    }\n    NgbTimepicker.prototype.writeValue = function (value) {\n        this.model = value ? new __WEBPACK_IMPORTED_MODULE_3__ngb_time__[\"a\" /* NgbTime */](value.hour, value.minute, value.second) : new __WEBPACK_IMPORTED_MODULE_3__ngb_time__[\"a\" /* NgbTime */]();\n        if (!this.seconds && (!value || !Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"d\" /* isNumber */])(value.second))) {\n            this.model.second = 0;\n        }\n    };\n    NgbTimepicker.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbTimepicker.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbTimepicker.prototype.setDisabledState = function (isDisabled) { this.disabled = isDisabled; };\n    NgbTimepicker.prototype.changeHour = function (step) {\n        this.model.changeHour(step);\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.changeMinute = function (step) {\n        this.model.changeMinute(step);\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.changeSecond = function (step) {\n        this.model.changeSecond(step);\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.updateHour = function (newVal) {\n        var isPM = this.model.hour >= 12;\n        var enteredHour = Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"h\" /* toInteger */])(newVal);\n        if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n            this.model.updateHour(enteredHour + 12);\n        }\n        else {\n            this.model.updateHour(enteredHour);\n        }\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.updateMinute = function (newVal) {\n        this.model.updateMinute(Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"h\" /* toInteger */])(newVal));\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.updateSecond = function (newVal) {\n        this.model.updateSecond(Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"h\" /* toInteger */])(newVal));\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.toggleMeridian = function () {\n        if (this.meridian) {\n            this.changeHour(12);\n        }\n    };\n    NgbTimepicker.prototype.formatHour = function (value) {\n        if (Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"d\" /* isNumber */])(value)) {\n            if (this.meridian) {\n                return Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"f\" /* padNumber */])(value % 12 === 0 ? 12 : value % 12);\n            }\n            else {\n                return Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"f\" /* padNumber */])(value % 24);\n            }\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"f\" /* padNumber */])(NaN);\n        }\n    };\n    NgbTimepicker.prototype.formatMinSec = function (value) { return Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"f\" /* padNumber */])(value); };\n    NgbTimepicker.prototype.setFormControlSize = function () { return { 'form-control-sm': this.size === 'small', 'form-control-lg': this.size === 'large' }; };\n    NgbTimepicker.prototype.setButtonSize = function () { return { 'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large' }; };\n    NgbTimepicker.prototype.ngOnChanges = function (changes) {\n        if (changes['seconds'] && !this.seconds && this.model && !Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"d\" /* isNumber */])(this.model.second)) {\n            this.model.second = 0;\n            this.propagateModelChange(false);\n        }\n    };\n    NgbTimepicker.prototype.propagateModelChange = function (touched) {\n        if (touched === void 0) { touched = true; }\n        if (touched) {\n            this.onTouched();\n        }\n        if (this.model.isValid(this.seconds)) {\n            this.onChange({ hour: this.model.hour, minute: this.model.minute, second: this.model.second });\n        }\n        else {\n            this.onChange(null);\n        }\n    };\n    NgbTimepicker.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-timepicker',\n                    styles: [\"\\n    .ngb-tp {\\n      display: -ms-flexbox;\\n      display: flex;\\n      -ms-flex-align: center;\\n      align-items: center;\\n    }\\n\\n    .ngb-tp-hour, .ngb-tp-minute, .ngb-tp-second, .ngb-tp-meridian {\\n      display: -ms-flexbox;\\n      display: flex;\\n      -ms-flex-direction: column;\\n      flex-direction: column;\\n      -ms-flex-align: center;\\n      align-items: center;\\n      -ms-flex-pack: distribute;\\n      justify-content: space-around;\\n    }\\n\\n    .ngb-tp-spacer {\\n      width: 1em;\\n      text-align: center;\\n    }\\n\\n    .chevron::before {\\n      border-style: solid;\\n      border-width: 0.29em 0.29em 0 0;\\n      content: '';\\n      display: inline-block;\\n      height: 0.69em;\\n      left: 0.05em;\\n      position: relative;\\n      top: 0.15em;\\n      transform: rotate(-45deg);\\n      -webkit-transform: rotate(-45deg);\\n      -ms-transform: rotate(-45deg);\\n      vertical-align: middle;\\n      width: 0.71em;\\n    }\\n\\n    .chevron.bottom:before {\\n      top: -.3em;\\n      -webkit-transform: rotate(135deg);\\n      -ms-transform: rotate(135deg);\\n      transform: rotate(135deg);\\n    }\\n\\n    input {\\n      text-align: center;\\n      display: inline-block;\\n      width: auto;\\n    }\\n  \"],\n                    template: \"\\n    <fieldset [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n      <div class=\\\"ngb-tp\\\">\\n        <div class=\\\"ngb-tp-hour\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeHour(hourStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron\\\"></span>\\n            <span class=\\\"sr-only\\\">Increment hours</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"setFormControlSize()\\\" maxlength=\\\"2\\\" size=\\\"2\\\" placeholder=\\\"HH\\\"\\n            [value]=\\\"formatHour(model?.hour)\\\" (change)=\\\"updateHour($event.target.value)\\\"\\n            [readonly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Hours\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeHour(-hourStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\">Decrement hours</span>\\n          </button>\\n        </div>\\n        <div class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div class=\\\"ngb-tp-minute\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeMinute(minuteStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron\\\"></span>\\n            <span class=\\\"sr-only\\\">Increment minutes</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"setFormControlSize()\\\" maxlength=\\\"2\\\" size=\\\"2\\\" placeholder=\\\"MM\\\"\\n            [value]=\\\"formatMinSec(model?.minute)\\\" (change)=\\\"updateMinute($event.target.value)\\\"\\n            [readonly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Minutes\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeMinute(-minuteStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\">Decrement minutes</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-second\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeSecond(secondStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron\\\"></span>\\n            <span class=\\\"sr-only\\\">Increment seconds</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"setFormControlSize()\\\" maxlength=\\\"2\\\" size=\\\"2\\\" placeholder=\\\"SS\\\"\\n            [value]=\\\"formatMinSec(model?.second)\\\" (change)=\\\"updateSecond($event.target.value)\\\"\\n            [readonly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Seconds\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeSecond(-secondStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\">Decrement seconds</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-spacer\\\"></div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-meridian\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" [ngClass]=\\\"setButtonSize()\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\"\\n            (click)=\\\"toggleMeridian()\\\">{{model?.hour >= 12 ? 'PM' : 'AM'}}</button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  \",\n                    providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTimepicker.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_4__timepicker_config__[\"a\" /* NgbTimepickerConfig */], },\n    ]; };\n    NgbTimepicker.propDecorators = {\n        \"meridian\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"spinners\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"seconds\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"hourStep\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"minuteStep\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"secondStep\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"readonlyInputs\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"size\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbTimepicker;\n}());\n\n//# sourceMappingURL=timepicker.js.map\n\n/***/ }),\n\n/***/ 304:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgbTooltipModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tooltip__ = __webpack_require__(305);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tooltip_config__ = __webpack_require__(128);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__tooltip_config__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__tooltip__[\"a\"]; });\n\n\n\n\n\nvar NgbTooltipModule = (function () {\n    function NgbTooltipModule() {\n    }\n    NgbTooltipModule.forRoot = function () { return { ngModule: NgbTooltipModule, providers: [__WEBPACK_IMPORTED_MODULE_2__tooltip_config__[\"a\" /* NgbTooltipConfig */]] }; };\n    NgbTooltipModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: [__WEBPACK_IMPORTED_MODULE_1__tooltip__[\"a\" /* NgbTooltip */], __WEBPACK_IMPORTED_MODULE_1__tooltip__[\"b\" /* NgbTooltipWindow */]], exports: [__WEBPACK_IMPORTED_MODULE_1__tooltip__[\"a\" /* NgbTooltip */]], entryComponents: [__WEBPACK_IMPORTED_MODULE_1__tooltip__[\"b\" /* NgbTooltipWindow */]] },] },\n    ];\n    /** @nocollapse */\n    NgbTooltipModule.ctorParameters = function () { return []; };\n    return NgbTooltipModule;\n}());\n\n//# sourceMappingURL=tooltip.module.js.map\n\n/***/ }),\n\n/***/ 305:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbTooltipWindow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbTooltip; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_triggers__ = __webpack_require__(295);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_positioning__ = __webpack_require__(54);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_popup__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tooltip_config__ = __webpack_require__(128);\n\n\n\n\n\nvar nextId = 0;\nvar NgbTooltipWindow = (function () {\n    function NgbTooltipWindow(_element, _renderer) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this.placement = 'top';\n    }\n    NgbTooltipWindow.prototype.applyPlacement = function (_placement) {\n        // remove the current placement classes\n        this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n        this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n        // set the new placement classes\n        this.placement = _placement;\n        // apply the new placement\n        this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n        this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n    };\n    NgbTooltipWindow.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-tooltip-window',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    host: {\n                        '[class]': '\"tooltip show bs-tooltip-\" + placement.split(\"-\")[0]+\" bs-tooltip-\" + placement',\n                        'role': 'tooltip',\n                        '[id]': 'id'\n                    },\n                    template: \"<div class=\\\"arrow\\\"></div><div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\",\n                    styles: [\"\\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\\n      left: calc(50% - 0.4rem);\\n    }\\n\\n    :host.bs-tooltip-top-left .arrow, :host.bs-tooltip-bottom-left .arrow {\\n      left: 1em;\\n    }\\n\\n    :host.bs-tooltip-top-right .arrow, :host.bs-tooltip-bottom-right .arrow {\\n      left: auto;\\n      right: 0.8rem;\\n    }\\n\\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\\n      top: calc(50% - 0.4rem);\\n    }\\n    \\n    :host.bs-tooltip-left-top .arrow, :host.bs-tooltip-right-top .arrow {\\n      top: 0.4rem;\\n    }\\n\\n    :host.bs-tooltip-left-bottom .arrow, :host.bs-tooltip-right-bottom .arrow {\\n      top: auto;\\n      bottom: 0.4rem;\\n    }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTooltipWindow.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"], },\n    ]; };\n    NgbTooltipWindow.propDecorators = {\n        \"placement\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"id\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbTooltipWindow;\n}());\n\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\nvar NgbTooltip = (function () {\n    function NgbTooltip(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, ngZone) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        /**\n           * Emits an event when the tooltip is shown\n           */\n        this.shown = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n           * Emits an event when the tooltip is hidden\n           */\n        this.hidden = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._ngbTooltipWindowId = \"ngb-tooltip-\" + nextId++;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disableTooltip = config.disableTooltip;\n        this._popupService = new __WEBPACK_IMPORTED_MODULE_3__util_popup__[\"b\" /* PopupService */](NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n        this._zoneSubscription = ngZone.onStable.subscribe(function () {\n            if (_this._windowRef) {\n                _this._windowRef.instance.applyPlacement(Object(__WEBPACK_IMPORTED_MODULE_2__util_positioning__[\"a\" /* positionElements */])(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body'));\n            }\n        });\n    }\n    Object.defineProperty(NgbTooltip.prototype, \"ngbTooltip\", {\n        get: function () { return this._ngbTooltip; },\n        set: /**\n           * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n           */\n        function (value) {\n            this._ngbTooltip = value;\n            if (!value && this._windowRef) {\n                this.close();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     * The context is an optional value to be injected into the tooltip template when it is created.\n     */\n    /**\n       * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       * The context is an optional value to be injected into the tooltip template when it is created.\n       */\n    NgbTooltip.prototype.open = /**\n       * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       * The context is an optional value to be injected into the tooltip template when it is created.\n       */\n    function (context) {\n        if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n            this._windowRef = this._popupService.open(this._ngbTooltip, context);\n            this._windowRef.instance.id = this._ngbTooltipWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement;\n            // apply styling to set basic css-classes on target element, before going for positioning\n            this._windowRef.changeDetectorRef.detectChanges();\n            this._windowRef.changeDetectorRef.markForCheck();\n            // position tooltip along the element\n            this._windowRef.instance.applyPlacement(Object(__WEBPACK_IMPORTED_MODULE_2__util_positioning__[\"a\" /* positionElements */])(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body'));\n            this.shown.emit();\n        }\n    };\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     */\n    /**\n       * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       */\n    NgbTooltip.prototype.close = /**\n       * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       */\n    function () {\n        if (this._windowRef != null) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n        }\n    };\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     */\n    /**\n       * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       */\n    NgbTooltip.prototype.toggle = /**\n       * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       */\n    function () {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     */\n    /**\n       * Returns whether or not the tooltip is currently being shown\n       */\n    NgbTooltip.prototype.isOpen = /**\n       * Returns whether or not the tooltip is currently being shown\n       */\n    function () { return this._windowRef != null; };\n    NgbTooltip.prototype.ngOnInit = function () {\n        this._unregisterListenersFn = Object(__WEBPACK_IMPORTED_MODULE_1__util_triggers__[\"a\" /* listenToTriggers */])(this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this), this.toggle.bind(this));\n    };\n    NgbTooltip.prototype.ngOnDestroy = function () {\n        this.close();\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbTooltip.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: '[ngbTooltip]', exportAs: 'ngbTooltip' },] },\n    ];\n    /** @nocollapse */\n    NgbTooltip.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injector\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ComponentFactoryResolver\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_4__tooltip_config__[\"a\" /* NgbTooltipConfig */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    ]; };\n    NgbTooltip.propDecorators = {\n        \"placement\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"triggers\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"container\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"disableTooltip\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"shown\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        \"hidden\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        \"ngbTooltip\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbTooltip;\n}());\n\n//# sourceMappingURL=tooltip.js.map\n\n/***/ }),\n\n/***/ 306:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return NgbTypeaheadModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__highlight__ = __webpack_require__(307);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__typeahead_window__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__typeahead__ = __webpack_require__(308);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__typeahead_config__ = __webpack_require__(130);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_2__highlight__[\"a\"]; });\n/* unused harmony reexport NgbTypeaheadWindow */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_5__typeahead_config__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_4__typeahead__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n\nvar NgbTypeaheadModule = (function () {\n    function NgbTypeaheadModule() {\n    }\n    NgbTypeaheadModule.forRoot = function () { return { ngModule: NgbTypeaheadModule, providers: [__WEBPACK_IMPORTED_MODULE_5__typeahead_config__[\"a\" /* NgbTypeaheadConfig */]] }; };\n    NgbTypeaheadModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                    declarations: [__WEBPACK_IMPORTED_MODULE_4__typeahead__[\"a\" /* NgbTypeahead */], __WEBPACK_IMPORTED_MODULE_2__highlight__[\"a\" /* NgbHighlight */], __WEBPACK_IMPORTED_MODULE_3__typeahead_window__[\"a\" /* NgbTypeaheadWindow */]],\n                    exports: [__WEBPACK_IMPORTED_MODULE_4__typeahead__[\"a\" /* NgbTypeahead */], __WEBPACK_IMPORTED_MODULE_2__highlight__[\"a\" /* NgbHighlight */]],\n                    imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"]],\n                    entryComponents: [__WEBPACK_IMPORTED_MODULE_3__typeahead_window__[\"a\" /* NgbTypeaheadWindow */]]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTypeaheadModule.ctorParameters = function () { return []; };\n    return NgbTypeaheadModule;\n}());\n\n//# sourceMappingURL=typeahead.module.js.map\n\n/***/ }),\n\n/***/ 307:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbHighlight; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(11);\n\n\nvar NgbHighlight = (function () {\n    function NgbHighlight() {\n        this.highlightClass = 'ngb-highlight';\n    }\n    NgbHighlight.prototype.ngOnChanges = function (changes) {\n        var resultStr = Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"i\" /* toString */])(this.result);\n        var resultLC = resultStr.toLowerCase();\n        var termLC = Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"i\" /* toString */])(this.term).toLowerCase();\n        var currentIdx = 0;\n        if (termLC.length > 0) {\n            this.parts = resultLC.split(new RegExp(\"(\" + Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"g\" /* regExpEscape */])(termLC) + \")\")).map(function (part) {\n                var originalPart = resultStr.substr(currentIdx, part.length);\n                currentIdx += part.length;\n                return originalPart;\n            });\n        }\n        else {\n            this.parts = [resultStr];\n        }\n    };\n    NgbHighlight.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    selector: 'ngb-highlight',\n                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                    template: \"<ng-template ngFor [ngForOf]=\\\"parts\\\" let-part let-isOdd=\\\"odd\\\">\" +\n                        \"<span *ngIf=\\\"isOdd\\\" class=\\\"{{highlightClass}}\\\">{{part}}</span><ng-template [ngIf]=\\\"!isOdd\\\">{{part}}</ng-template>\" +\n                        \"</ng-template>\",\n                    // template needs to be formatted in a certain way so we don't add empty text nodes\n                    styles: [\"\\n    .ngb-highlight {\\n      font-weight: bold;\\n    }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbHighlight.ctorParameters = function () { return []; };\n    NgbHighlight.propDecorators = {\n        \"highlightClass\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"result\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"term\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return NgbHighlight;\n}());\n\n//# sourceMappingURL=highlight.js.map\n\n/***/ }),\n\n/***/ 308:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbTypeahead; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__ = __webpack_require__(65);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_let__ = __webpack_require__(203);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_let___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_let__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_do__ = __webpack_require__(191);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_do___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_do__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_switchMap__ = __webpack_require__(236);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_switchMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_operator_switchMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_fromEvent__ = __webpack_require__(171);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_fromEvent___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_fromEvent__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_positioning__ = __webpack_require__(54);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__typeahead_window__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__util_popup__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__util_util__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__typeahead_config__ = __webpack_require__(130);\n\n\n\n\n\n\n\n\n\n\n\n\nvar Key;\n(function (Key) {\n    Key[Key[\"Tab\"] = 9] = \"Tab\";\n    Key[Key[\"Enter\"] = 13] = \"Enter\";\n    Key[Key[\"Escape\"] = 27] = \"Escape\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\nvar NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgbTypeahead; }),\n    multi: true\n};\nvar nextWindowId = 0;\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\nvar NgbTypeahead = (function () {\n    function NgbTypeahead(_elementRef, _viewContainerRef, _renderer, _injector, componentFactoryResolver, config, ngZone) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._injector = _injector;\n        /** Placement of a typeahead accepts:\n           *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n           *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n           * and array of above values.\n          */\n        this.placement = 'bottom-left';\n        /**\n           * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n           */\n        this.selectItem = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.popupId = \"ngb-typeahead-\" + nextWindowId++;\n        this._onTouched = function () { };\n        this._onChange = function (_) { };\n        this.container = config.container;\n        this.editable = config.editable;\n        this.focusFirst = config.focusFirst;\n        this.showHint = config.showHint;\n        this.placement = config.placement;\n        this._valueChanges = Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_fromEvent__[\"fromEvent\"])(_elementRef.nativeElement, 'input', function ($event) { return $event.target.value; });\n        this._resubscribeTypeahead = new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__[\"BehaviorSubject\"](null);\n        this._popupService = new __WEBPACK_IMPORTED_MODULE_9__util_popup__[\"b\" /* PopupService */](__WEBPACK_IMPORTED_MODULE_8__typeahead_window__[\"a\" /* NgbTypeaheadWindow */], _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n        this._zoneSubscription = ngZone.onStable.subscribe(function () {\n            if (_this.isPopupOpen()) {\n                Object(__WEBPACK_IMPORTED_MODULE_7__util_positioning__[\"a\" /* positionElements */])(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body');\n            }\n        });\n    }\n    NgbTypeahead.prototype.ngOnInit = function () {\n        var _this = this;\n        var inputValues$ = __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_do__[\"_do\"].call(this._valueChanges, function (value) {\n            _this._inputValueBackup = value;\n            if (_this.editable) {\n                _this._onChange(value);\n            }\n        });\n        var results$ = __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_let__[\"letProto\"].call(inputValues$, this.ngbTypeahead);\n        var processedResults$ = __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_do__[\"_do\"].call(results$, function () {\n            if (!_this.editable) {\n                _this._onChange(undefined);\n            }\n        });\n        var userInput$ = __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_switchMap__[\"switchMap\"].call(this._resubscribeTypeahead, function () { return processedResults$; });\n        this._subscription = this._subscribeToUserInput(userInput$);\n    };\n    NgbTypeahead.prototype.ngOnDestroy = function () {\n        this._closePopup();\n        this._unsubscribeFromUserInput();\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbTypeahead.prototype.registerOnChange = function (fn) { this._onChange = fn; };\n    NgbTypeahead.prototype.registerOnTouched = function (fn) { this._onTouched = fn; };\n    NgbTypeahead.prototype.writeValue = function (value) { this._writeInputValue(this._formatItemForInput(value)); };\n    NgbTypeahead.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    NgbTypeahead.prototype.onDocumentClick = function (event) {\n        if (event.target !== this._elementRef.nativeElement) {\n            this.dismissPopup();\n        }\n    };\n    /**\n     * Dismisses typeahead popup window\n     */\n    /**\n       * Dismisses typeahead popup window\n       */\n    NgbTypeahead.prototype.dismissPopup = /**\n       * Dismisses typeahead popup window\n       */\n    function () {\n        if (this.isPopupOpen()) {\n            this._closePopup();\n            this._writeInputValue(this._inputValueBackup);\n        }\n    };\n    /**\n     * Returns true if the typeahead popup window is displayed\n     */\n    /**\n       * Returns true if the typeahead popup window is displayed\n       */\n    NgbTypeahead.prototype.isPopupOpen = /**\n       * Returns true if the typeahead popup window is displayed\n       */\n    function () { return this._windowRef != null; };\n    NgbTypeahead.prototype.handleBlur = function () {\n        this._resubscribeTypeahead.next(null);\n        this._onTouched();\n    };\n    NgbTypeahead.prototype.handleKeyDown = function (event) {\n        if (!this.isPopupOpen()) {\n            return;\n        }\n        if (Key[Object(__WEBPACK_IMPORTED_MODULE_10__util_util__[\"i\" /* toString */])(event.which)]) {\n            switch (event.which) {\n                case Key.ArrowDown:\n                    event.preventDefault();\n                    this._windowRef.instance.next();\n                    this._showHint();\n                    break;\n                case Key.ArrowUp:\n                    event.preventDefault();\n                    this._windowRef.instance.prev();\n                    this._showHint();\n                    break;\n                case Key.Enter:\n                case Key.Tab:\n                    var result = this._windowRef.instance.getActive();\n                    if (Object(__WEBPACK_IMPORTED_MODULE_10__util_util__[\"b\" /* isDefined */])(result)) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        this._selectResult(result);\n                    }\n                    this._closePopup();\n                    break;\n                case Key.Escape:\n                    event.preventDefault();\n                    this._resubscribeTypeahead.next(null);\n                    this.dismissPopup();\n                    break;\n            }\n        }\n    };\n    NgbTypeahead.prototype._openPopup = function () {\n        var _this = this;\n        if (!this.isPopupOpen()) {\n            this._inputValueBackup = this._elementRef.nativeElement.value;\n            this._windowRef = this._popupService.open();\n            this._windowRef.instance.id = this.popupId;\n            this._windowRef.instance.selectEvent.subscribe(function (result) { return _this._selectResultClosePopup(result); });\n            this._windowRef.instance.activeChangeEvent.subscribe(function (activeId) { return _this.activeDescendant = activeId; });\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n        }\n    };\n    NgbTypeahead.prototype._closePopup = function () {\n        this._popupService.close();\n        this._windowRef = null;\n        this.activeDescendant = undefined;\n    };\n    NgbTypeahead.prototype._selectResult = function (result) {\n        var defaultPrevented = false;\n        this.selectItem.emit({ item: result, preventDefault: function () { defaultPrevented = true; } });\n        this._resubscribeTypeahead.next(null);\n        if (!defaultPrevented) {\n            this.writeValue(result);\n            this._onChange(result);\n        }\n    };\n    NgbTypeahead.prototype._selectResultClosePopup = function (result) {\n        this._selectResult(result);\n        this._closePopup();\n    };\n    NgbTypeahead.prototype._showHint = function () {\n        if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n            var userInputLowerCase = this._inputValueBackup.toLowerCase();\n            var formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n            if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n                this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n                this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n            }\n            else {\n                this.writeValue(this._windowRef.instance.getActive());\n            }\n        }\n    };\n    NgbTypeahead.prototype._formatItemForInput = function (item) {\n        return item && this.inputFormatter ? this.inputFormatter(item) : Object(__WEBPACK_IMPORTED_MODULE_10__util_util__[\"i\" /* toString */])(item);\n    };\n    NgbTypeahead.prototype._writeInputValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', Object(__WEBPACK_IMPORTED_MODULE_10__util_util__[\"i\" /* toString */])(value));\n    };\n    NgbTypeahead.prototype._subscribeToUserInput = function (userInput$) {\n        var _this = this;\n        return userInput$.subscribe(function (results) {\n            if (!results || results.length === 0) {\n                _this._closePopup();\n            }\n            else {\n                _this._openPopup();\n                _this._windowRef.instance.focusFirst = _this.focusFirst;\n                _this._windowRef.instance.results = results;\n                _this._windowRef.instance.term = _this._elementRef.nativeElement.value;\n                if (_this.resultFormatter) {\n                    _this._windowRef.instance.formatter = _this.resultFormatter;\n                }\n                if (_this.resultTemplate) {\n                    _this._windowRef.instance.resultTemplate = _this.resultTemplate;\n                }\n                _this._windowRef.instance.resetActive();\n                // The observable stream we are subscribing to might have async steps\n                // and if a component containing typeahead is using the OnPush strategy\n                // the change detection turn wouldn't be invoked automatically.\n                // The observable stream we are subscribing to might have async steps\n                // and if a component containing typeahead is using the OnPush strategy\n                // the change detection turn wouldn't be invoked automatically.\n                _this._windowRef.changeDetectorRef.detectChanges();\n                _this._showHint();\n            }\n        });\n    };\n    NgbTypeahead.prototype._unsubscribeFromUserInput = function () {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._subscription = null;\n    };\n    NgbTypeahead.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: 'input[ngbTypeahead]',\n                    exportAs: 'ngbTypeahead',\n                    host: {\n                        '(blur)': 'handleBlur()',\n                        '[class.open]': 'isPopupOpen()',\n                        '(document:click)': 'onDocumentClick($event)',\n                        '(keydown)': 'handleKeyDown($event)',\n                        'autocomplete': 'off',\n                        'autocapitalize': 'off',\n                        'autocorrect': 'off',\n                        'role': 'combobox',\n                        'aria-multiline': 'false',\n                        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n                        '[attr.aria-activedescendant]': 'activeDescendant',\n                        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n                        '[attr.aria-expanded]': 'isPopupOpen()'\n                    },\n                    providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTypeahead.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injector\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ComponentFactoryResolver\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_11__typeahead_config__[\"a\" /* NgbTypeaheadConfig */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    ]; };\n    NgbTypeahead.propDecorators = {\n        \"container\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"editable\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"focusFirst\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"inputFormatter\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"ngbTypeahead\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"resultFormatter\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"resultTemplate\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"showHint\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"placement\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        \"selectItem\": [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    };\n    return NgbTypeahead;\n}());\n\n//# sourceMappingURL=typeahead.js.map\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbCalendar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbCalendarGregorian; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ngb_date__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_util__ = __webpack_require__(11);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nfunction fromJSDate(jsDate) {\n    return new __WEBPACK_IMPORTED_MODULE_0__ngb_date__[\"a\" /* NgbDate */](jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n    var jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\nvar NgbCalendar = (function () {\n    function NgbCalendar() {\n    }\n    NgbCalendar.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbCalendar.ctorParameters = function () { return []; };\n    return NgbCalendar;\n}());\n\nvar NgbCalendarGregorian = (function (_super) {\n    __extends(NgbCalendarGregorian, _super);\n    function NgbCalendarGregorian() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NgbCalendarGregorian.prototype.getDaysPerWeek = function () { return 7; };\n    NgbCalendarGregorian.prototype.getMonths = function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; };\n    NgbCalendarGregorian.prototype.getWeeksPerMonth = function () { return 6; };\n    NgbCalendarGregorian.prototype.getNext = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        var jsDate = toJSDate(date);\n        switch (period) {\n            case 'y':\n                return new __WEBPACK_IMPORTED_MODULE_0__ngb_date__[\"a\" /* NgbDate */](date.year + number, 1, 1);\n            case 'm':\n                jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                break;\n            default:\n                return date;\n        }\n        return fromJSDate(jsDate);\n    };\n    NgbCalendarGregorian.prototype.getPrev = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    NgbCalendarGregorian.prototype.getWeekday = function (date) {\n        var jsDate = toJSDate(date);\n        var day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    NgbCalendarGregorian.prototype.getWeekNumber = function (week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        var date = week[thursdayIndex];\n        var jsDate = toJSDate(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        var time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    };\n    NgbCalendarGregorian.prototype.getToday = function () { return fromJSDate(new Date()); };\n    NgbCalendarGregorian.prototype.isValid = function (date) {\n        if (!date || !Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"c\" /* isInteger */])(date.year) || !Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"c\" /* isInteger */])(date.month) || !Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"c\" /* isInteger */])(date.day)) {\n            return false;\n        }\n        var jsDate = toJSDate(date);\n        return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day;\n    };\n    NgbCalendarGregorian.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbCalendarGregorian.ctorParameters = function () { return []; };\n    return NgbCalendarGregorian;\n}(NgbCalendar));\n\n//# sourceMappingURL=ngb-calendar.js.map\n\n/***/ }),\n\n/***/ 34:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDatepickerI18n; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbDatepickerI18nDefault; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar WEEKDAYS_SHORT = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\nvar MONTHS_SHORT = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar MONTHS_FULL = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November',\n    'December'\n];\n/**\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\n */\nvar NgbDatepickerI18n = (function () {\n    function NgbDatepickerI18n() {\n    }\n    NgbDatepickerI18n.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerI18n.ctorParameters = function () { return []; };\n    return NgbDatepickerI18n;\n}());\n\nvar NgbDatepickerI18nDefault = (function (_super) {\n    __extends(NgbDatepickerI18nDefault, _super);\n    function NgbDatepickerI18nDefault() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NgbDatepickerI18nDefault.prototype.getWeekdayShortName = function (weekday) { return WEEKDAYS_SHORT[weekday - 1]; };\n    NgbDatepickerI18nDefault.prototype.getMonthShortName = function (month) { return MONTHS_SHORT[month - 1]; };\n    NgbDatepickerI18nDefault.prototype.getMonthFullName = function (month) { return MONTHS_FULL[month - 1]; };\n    NgbDatepickerI18nDefault.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerI18nDefault.ctorParameters = function () { return []; };\n    return NgbDatepickerI18nDefault;\n}(NgbDatepickerI18n));\n\n//# sourceMappingURL=datepicker-i18n.js.map\n\n/***/ }),\n\n/***/ 54:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Positioning */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = positionElements;\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nvar \n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nPositioning = (function () {\n    function Positioning() {\n    }\n    Positioning.prototype.getAllStyles = function (element) { return window.getComputedStyle(element); };\n    Positioning.prototype.getStyle = function (element, prop) { return this.getAllStyles(element)[prop]; };\n    Positioning.prototype.isStaticPositioned = function (element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    };\n    Positioning.prototype.offsetParent = function (element) {\n        var offsetParentEl = element.offsetParent || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = offsetParentEl.offsetParent;\n        }\n        return offsetParentEl || document.documentElement;\n    };\n    Positioning.prototype.position = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elPosition;\n        var parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n        }\n        else {\n            var offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    };\n    Positioning.prototype.offset = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elBcr = element.getBoundingClientRect();\n        var viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        var elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    };\n    Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\n        var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        var targetElStyles = this.getAllStyles(targetElement);\n        var targetElBCR = targetElement.getBoundingClientRect();\n        var placementPrimary = placement.split('-')[0] || 'top';\n        var placementSecondary = placement.split('-')[1] || 'center';\n        var targetElPosition = {\n            'height': targetElBCR.height || targetElement.offsetHeight,\n            'width': targetElBCR.width || targetElement.offsetWidth,\n            'top': 0,\n            'bottom': targetElBCR.height || targetElement.offsetHeight,\n            'left': 0,\n            'right': targetElBCR.width || targetElement.offsetWidth\n        };\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.top =\n                    hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height;\n                break;\n            case 'left':\n                targetElPosition.left =\n                    hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width;\n                break;\n        }\n        switch (placementSecondary) {\n            case 'top':\n                targetElPosition.top = hostElPosition.top;\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n                break;\n            case 'left':\n                targetElPosition.left = hostElPosition.left;\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n                break;\n            case 'center':\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n                    targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n                }\n                else {\n                    targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n                }\n                break;\n        }\n        targetElPosition.top = Math.round(targetElPosition.top);\n        targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        targetElPosition.left = Math.round(targetElPosition.left);\n        targetElPosition.right = Math.round(targetElPosition.right);\n        return targetElPosition;\n    };\n    // get the availble placements of the target element in the viewport dependeing on the host element\n    // get the availble placements of the target element in the viewport dependeing on the host element\n    Positioning.prototype.getAvailablePlacements = \n    // get the availble placements of the target element in the viewport dependeing on the host element\n    function (hostElement, targetElement) {\n        var availablePlacements = [];\n        var hostElemClientRect = hostElement.getBoundingClientRect();\n        var targetElemClientRect = targetElement.getBoundingClientRect();\n        var html = document.documentElement;\n        // left: check if target width can be placed between host left and viewport start and also height of target is\n        // inside viewport\n        if (targetElemClientRect.width < hostElemClientRect.left) {\n            // check for left only\n            if ((hostElemClientRect.top + hostElemClientRect.height / 2 - targetElement.offsetHeight / 2) > 0) {\n                availablePlacements.splice(availablePlacements.length, 1, 'left');\n            }\n            // check for left-top and left-bottom\n            this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);\n        }\n        // top: target height is less than host top\n        if (targetElemClientRect.height < hostElemClientRect.top) {\n            availablePlacements.splice(availablePlacements.length, 1, 'top');\n            this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);\n        }\n        // right: check if target width can be placed between host right and viewport end and also height of target is\n        // inside viewport\n        if ((window.innerWidth || html.clientWidth) - hostElemClientRect.right > targetElemClientRect.width) {\n            // check for right only\n            if ((hostElemClientRect.top + hostElemClientRect.height / 2 - targetElement.offsetHeight / 2) > 0) {\n                availablePlacements.splice(availablePlacements.length, 1, 'right');\n            }\n            // check for right-top and right-bottom\n            this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);\n        }\n        // bottom: check if there is enough space between host bottom and viewport end for target height\n        if ((window.innerHeight || html.clientHeight) - hostElemClientRect.bottom > targetElemClientRect.height) {\n            availablePlacements.splice(availablePlacements.length, 1, 'bottom');\n            this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);\n        }\n        return availablePlacements;\n    };\n    /**\n     * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n     * primaryplacement: left|right\n     * availablePlacementArr: array in which available placemets to be set\n     */\n    /**\n       * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n       * primaryplacement: left|right\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    Positioning.prototype.setSecondaryPlacementForLeftRight = /**\n       * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n       * primaryplacement: left|right\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {\n        var html = document.documentElement;\n        // check for left-bottom\n        if (targetElemClientRect.height <= hostElemClientRect.bottom) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');\n        }\n        if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');\n        }\n    };\n    /**\n     * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n     * primaryplacement: top|bottom\n     * availablePlacementArr: array in which available placemets to be set\n     */\n    /**\n       * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n       * primaryplacement: top|bottom\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    Positioning.prototype.setSecondaryPlacementForTopBottom = /**\n       * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n       * primaryplacement: top|bottom\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {\n        var html = document.documentElement;\n        // check for left-bottom\n        if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');\n        }\n        if (targetElemClientRect.width <= hostElemClientRect.right) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');\n        }\n    };\n    return Positioning;\n}());\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n\nvar positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order 'top', 'bottom', 'left', 'right'.\n * */\nfunction positionElements(hostElement, targetElement, placement, appendToBody) {\n    var placementVals = Array.isArray(placement) ? placement : [placement];\n    // replace auto placement with other placements\n    var hasAuto = placementVals.findIndex(function (val) { return val === 'auto'; });\n    if (hasAuto >= 0) {\n        ['top', 'right', 'bottom', 'left'].forEach(function (obj) {\n            if (placementVals.find(function (val) { return val.search('^' + obj + '|^' + obj + '-') !== -1; }) == null) {\n                placementVals.splice(hasAuto++, 1, obj);\n            }\n        });\n    }\n    // coordinates where to position\n    var topVal = 0, leftVal = 0;\n    var appliedPlacement;\n    // get available placements\n    var availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);\n    var _loop_1 = function (item, index) {\n        // check if passed placement is present in the available placement or otherwise apply the last placement in the\n        // passed placement list\n        if ((availablePlacements.find(function (val) { return val === item; }) != null) || (placementVals.length === index + 1)) {\n            appliedPlacement = item;\n            var pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);\n            topVal = pos.top;\n            leftVal = pos.left;\n            return \"break\";\n        }\n    };\n    // iterate over all the passed placements\n    for (var _i = 0, _a = toItemIndexes(placementVals); _i < _a.length; _i++) {\n        var _b = _a[_i], item = _b.item, index = _b.index;\n        var state_1 = _loop_1(item, index);\n        if (state_1 === \"break\")\n            break;\n    }\n    targetElement.style.top = topVal + \"px\";\n    targetElement.style.left = leftVal + \"px\";\n    return appliedPlacement;\n}\n// function to get index and item of an array\nfunction toItemIndexes(a) {\n    return a.map(function (item, index) { return ({ item: item, index: index }); });\n}\n//# sourceMappingURL=positioning.js.map\n\n/***/ }),\n\n/***/ 644:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar platform_browser_dynamic_1 = __webpack_require__(154);\r\nvar app_module_1 = __webpack_require__(645);\r\nvar environment_1 = __webpack_require__(655);\r\nif (environment_1.environment.production) {\r\n    core_1.enableProdMode();\r\n}\r\nplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\r\n\n\n/***/ }),\n\n/***/ 645:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = __webpack_require__(31);\r\nvar core_1 = __webpack_require__(1);\r\nvar forms_1 = __webpack_require__(25);\r\nvar http_1 = __webpack_require__(95);\r\nvar animations_1 = __webpack_require__(646);\r\nvar app_component_1 = __webpack_require__(648);\r\nvar password_service_1 = __webpack_require__(260);\r\nvar ng_bootstrap_1 = __webpack_require__(651);\r\nvar AppModule = /** @class */ (function () {\r\n    function AppModule() {\r\n    }\r\n    AppModule = __decorate([\r\n        core_1.NgModule({\r\n            declarations: [\r\n                app_component_1.AppComponent\r\n            ],\r\n            imports: [\r\n                platform_browser_1.BrowserModule,\r\n                forms_1.FormsModule,\r\n                http_1.HttpModule,\r\n                animations_1.BrowserAnimationsModule,\r\n                ng_bootstrap_1.NgbModule.forRoot()\r\n            ],\r\n            providers: [\r\n                password_service_1.PasswordService\r\n            ],\r\n            bootstrap: [app_component_1.AppComponent]\r\n        })\r\n    ], AppModule);\r\n    return AppModule;\r\n}());\r\nexports.AppModule = AppModule;\r\n\n\n/***/ }),\n\n/***/ 646:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BrowserAnimationsModule\", function() { return BrowserAnimationsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoopAnimationsModule\", function() { return NoopAnimationsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵBrowserAnimationBuilder\", function() { return BrowserAnimationBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵBrowserAnimationFactory\", function() { return BrowserAnimationFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵAnimationRenderer\", function() { return AnimationRenderer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵAnimationRendererFactory\", function() { return AnimationRendererFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return BaseAnimationRenderer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return BROWSER_ANIMATIONS_PROVIDERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return BROWSER_NOOP_ANIMATIONS_PROVIDERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return InjectableAnimationEngine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return instantiateDefaultStyleNormalizer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return instantiateRendererFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return instantiateSupportedAnimationDriver; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_tslib__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_animations__ = __webpack_require__(259);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__ = __webpack_require__(647);\n/**\n * @license Angular v5.2.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar BrowserAnimationBuilder = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_2_tslib__[\"b\" /* __extends */])(BrowserAnimationBuilder, _super);\n    function BrowserAnimationBuilder(rootRenderer, doc) {\n        var _this = _super.call(this) || this;\n        _this._nextAnimationId = 0;\n        var /** @type {?} */ typeData = /** @type {?} */ ({\n            id: '0',\n            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n            styles: [],\n            data: { animation: [] }\n        });\n        _this._renderer = /** @type {?} */ (rootRenderer.createRenderer(doc.body, typeData));\n        return _this;\n    }\n    /**\n     * @param {?} animation\n     * @return {?}\n     */\n    BrowserAnimationBuilder.prototype.build = /**\n     * @param {?} animation\n     * @return {?}\n     */\n    function (animation) {\n        var /** @type {?} */ id = this._nextAnimationId.toString();\n        this._nextAnimationId++;\n        var /** @type {?} */ entry = Array.isArray(animation) ? Object(__WEBPACK_IMPORTED_MODULE_3__angular_animations__[\"e\" /* sequence */])(animation) : animation;\n        issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n        return new BrowserAnimationFactory(id, this._renderer);\n    };\n    BrowserAnimationBuilder.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    BrowserAnimationBuilder.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"RendererFactory2\"], },\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"DOCUMENT\"],] },] },\n    ]; };\n    return BrowserAnimationBuilder;\n}(__WEBPACK_IMPORTED_MODULE_3__angular_animations__[\"b\" /* AnimationBuilder */]));\nvar BrowserAnimationFactory = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_2_tslib__[\"b\" /* __extends */])(BrowserAnimationFactory, _super);\n    function BrowserAnimationFactory(_id, _renderer) {\n        var _this = _super.call(this) || this;\n        _this._id = _id;\n        _this._renderer = _renderer;\n        return _this;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    BrowserAnimationFactory.prototype.create = /**\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    function (element, options) {\n        return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n    };\n    return BrowserAnimationFactory;\n}(__WEBPACK_IMPORTED_MODULE_3__angular_animations__[\"c\" /* AnimationFactory */]));\nvar RendererAnimationPlayer = /** @class */ (function () {\n    function RendererAnimationPlayer(id, element, options, _renderer) {\n        this.id = id;\n        this.element = element;\n        this._renderer = _renderer;\n        this.parentPlayer = null;\n        this._started = false;\n        this.totalTime = 0;\n        this._command('create', options);\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype._listen = /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (eventName, callback) {\n        return this._renderer.listen(this.element, \"@@\" + this.id + \":\" + eventName, callback);\n    };\n    /**\n     * @param {?} command\n     * @param {...?} args\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype._command = /**\n     * @param {?} command\n     * @param {...?} args\n     * @return {?}\n     */\n    function (command) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._listen('done', fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._listen('start', fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._listen('destroy', fn); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () { this._command('init'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        this._command('play');\n        this._started = true;\n    };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () { this._command('pause'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () { this._command('restart'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () { this._command('finish'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._command('destroy'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () { this._command('reset'); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) { this._command('setPosition', p); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return 0; };\n    return RendererAnimationPlayer;\n}());\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} id\n * @param {?} command\n * @param {?} args\n * @return {?}\n */\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n    return renderer.setProperty(element, \"@@\" + id + \":\" + command, args);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ANIMATION_PREFIX = '@';\nvar DISABLE_ANIMATIONS_FLAG = '@.disabled';\nvar AnimationRendererFactory = /** @class */ (function () {\n    function AnimationRendererFactory(delegate, engine, _zone) {\n        this.delegate = delegate;\n        this.engine = engine;\n        this._zone = _zone;\n        this._currentId = 0;\n        this._microtaskId = 1;\n        this._animationCallbacksBuffer = [];\n        this._rendererCache = new Map();\n        this._cdRecurDepth = 0;\n        this.promise = Promise.resolve(0);\n        engine.onRemovalComplete = function (element, delegate) {\n            // Note: if an component element has a leave animation, and the component\n            // a host leave animation, the view engine will call `removeChild` for the parent\n            // component renderer as well as for the child component renderer.\n            // Therefore, we need to check if we already removed the element.\n            if (delegate && delegate.parentNode(element)) {\n                delegate.removeChild(element.parentNode, element);\n            }\n        };\n    }\n    /**\n     * @param {?} hostElement\n     * @param {?} type\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.createRenderer = /**\n     * @param {?} hostElement\n     * @param {?} type\n     * @return {?}\n     */\n    function (hostElement, type) {\n        var _this = this;\n        var /** @type {?} */ EMPTY_NAMESPACE_ID = '';\n        // cache the delegates to find out which cached delegate can\n        // be used by which cached renderer\n        var /** @type {?} */ delegate = this.delegate.createRenderer(hostElement, type);\n        if (!hostElement || !type || !type.data || !type.data['animation']) {\n            var /** @type {?} */ renderer = this._rendererCache.get(delegate);\n            if (!renderer) {\n                renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine);\n                // only cache this result when the base renderer is used\n                this._rendererCache.set(delegate, renderer);\n            }\n            return renderer;\n        }\n        var /** @type {?} */ componentId = type.id;\n        var /** @type {?} */ namespaceId = type.id + '-' + this._currentId;\n        this._currentId++;\n        this.engine.register(namespaceId, hostElement);\n        var /** @type {?} */ animationTriggers = /** @type {?} */ (type.data['animation']);\n        animationTriggers.forEach(function (trigger) {\n            return _this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger);\n        });\n        return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        this._cdRecurDepth++;\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype._scheduleCountTask = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // always use promise to schedule microtask instead of use Zone\n        this.promise.then(function () { _this._microtaskId++; });\n    };\n    /* @internal */\n    /**\n     * @param {?} count\n     * @param {?} fn\n     * @param {?} data\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.scheduleListenerCallback = /**\n     * @param {?} count\n     * @param {?} fn\n     * @param {?} data\n     * @return {?}\n     */\n    function (count, fn, data) {\n        var _this = this;\n        if (count >= 0 && count < this._microtaskId) {\n            this._zone.run(function () { return fn(data); });\n            return;\n        }\n        if (this._animationCallbacksBuffer.length == 0) {\n            Promise.resolve(null).then(function () {\n                _this._zone.run(function () {\n                    _this._animationCallbacksBuffer.forEach(function (tuple) {\n                        var fn = tuple[0], data = tuple[1];\n                        fn(data);\n                    });\n                    _this._animationCallbacksBuffer = [];\n                });\n            });\n        }\n        this._animationCallbacksBuffer.push([fn, data]);\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._cdRecurDepth--;\n        // this is to prevent animations from running twice when an inner\n        // component does CD when a parent component insted has inserted it\n        if (this._cdRecurDepth == 0) {\n            this._zone.runOutsideAngular(function () {\n                _this._scheduleCountTask();\n                _this.engine.flush(_this._microtaskId);\n            });\n        }\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () { return this.engine.whenRenderingDone(); };\n    AnimationRendererFactory.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    AnimationRendererFactory.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"RendererFactory2\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"b\" /* ɵAnimationEngine */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    ]; };\n    return AnimationRendererFactory;\n}());\nvar BaseAnimationRenderer = /** @class */ (function () {\n    function BaseAnimationRenderer(namespaceId, delegate, engine) {\n        this.namespaceId = namespaceId;\n        this.delegate = delegate;\n        this.engine = engine;\n        this.destroyNode = this.delegate.destroyNode ? function (n) { return ((delegate.destroyNode))(n); } : null;\n    }\n    Object.defineProperty(BaseAnimationRenderer.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        this.engine.destroy(this.namespaceId, this.delegate);\n        this.delegate.destroy();\n    };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        return this.delegate.createElement(name, namespace);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return this.delegate.createComment(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return this.delegate.createText(value); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        this.delegate.appendChild(parent, newChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, false);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        this.delegate.insertBefore(parent, newChild, refChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, true);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        this.engine.onRemove(this.namespaceId, oldChild, this.delegate);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) { return this.delegate.selectRootElement(selectorOrNode); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) { this.delegate.addClass(el, name); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) { this.delegate.removeClass(el, name); };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?=} flags\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?=} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?=} flags\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?=} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\n            this.disableAnimations(el, !!value);\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { this.delegate.setValue(node, value); };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.disableAnimations = /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    function (element, value) {\n        this.engine.disableAnimations(element, value);\n    };\n    return BaseAnimationRenderer;\n}());\nvar AnimationRenderer = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_2_tslib__[\"b\" /* __extends */])(AnimationRenderer, _super);\n    function AnimationRenderer(factory, namespaceId, delegate, engine) {\n        var _this = _super.call(this, namespaceId, delegate, engine) || this;\n        _this.factory = factory;\n        _this.namespaceId = namespaceId;\n        return _this;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationRenderer.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        if (name.charAt(0) == ANIMATION_PREFIX) {\n            if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\n                value = value === undefined ? true : !!value;\n                this.disableAnimations(el, /** @type {?} */ (value));\n            }\n            else {\n                this.engine.process(this.namespaceId, el, name.substr(1), value);\n            }\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationRenderer.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        var _this = this;\n        if (eventName.charAt(0) == ANIMATION_PREFIX) {\n            var /** @type {?} */ element = resolveElementFromTarget(target);\n            var /** @type {?} */ name_1 = eventName.substr(1);\n            var /** @type {?} */ phase = '';\n            // @listener.phase is for trigger animation callbacks\n            // @@listener is for animation builder callbacks\n            if (name_1.charAt(0) != ANIMATION_PREFIX) {\n                _a = parseTriggerCallbackName(name_1), name_1 = _a[0], phase = _a[1];\n            }\n            return this.engine.listen(this.namespaceId, element, name_1, phase, function (event) {\n                var /** @type {?} */ countId = (/** @type {?} */ (event))['_data'] || -1;\n                _this.factory.scheduleListenerCallback(countId, callback, event);\n            });\n        }\n        return this.delegate.listen(target, eventName, callback);\n        var _a;\n    };\n    return AnimationRenderer;\n}(BaseAnimationRenderer));\n/**\n * @param {?} target\n * @return {?}\n */\nfunction resolveElementFromTarget(target) {\n    switch (target) {\n        case 'body':\n            return document.body;\n        case 'document':\n            return document;\n        case 'window':\n            return window;\n        default:\n            return target;\n    }\n}\n/**\n * @param {?} triggerName\n * @return {?}\n */\nfunction parseTriggerCallbackName(triggerName) {\n    var /** @type {?} */ dotIndex = triggerName.indexOf('.');\n    var /** @type {?} */ trigger = triggerName.substring(0, dotIndex);\n    var /** @type {?} */ phase = triggerName.substr(dotIndex + 1);\n    return [trigger, phase];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InjectableAnimationEngine = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_2_tslib__[\"b\" /* __extends */])(InjectableAnimationEngine, _super);\n    function InjectableAnimationEngine(driver, normalizer) {\n        return _super.call(this, driver, normalizer) || this;\n    }\n    InjectableAnimationEngine.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    InjectableAnimationEngine.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"a\" /* AnimationDriver */], },\n        { type: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"c\" /* ɵAnimationStyleNormalizer */], },\n    ]; };\n    return InjectableAnimationEngine;\n}(__WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"b\" /* ɵAnimationEngine */]));\n/**\n * @return {?}\n */\nfunction instantiateSupportedAnimationDriver() {\n    if (Object(__WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"g\" /* ɵsupportsWebAnimations */])()) {\n        return new __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"e\" /* ɵWebAnimationsDriver */]();\n    }\n    return new __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"d\" /* ɵNoopAnimationDriver */]();\n}\n/**\n * @return {?}\n */\nfunction instantiateDefaultStyleNormalizer() {\n    return new __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"f\" /* ɵWebAnimationsStyleNormalizer */]();\n}\n/**\n * @param {?} renderer\n * @param {?} engine\n * @param {?} zone\n * @return {?}\n */\nfunction instantiateRendererFactory(renderer, engine, zone) {\n    return new AnimationRendererFactory(renderer, engine, zone);\n}\nvar SHARED_ANIMATION_PROVIDERS = [\n    { provide: __WEBPACK_IMPORTED_MODULE_3__angular_animations__[\"b\" /* AnimationBuilder */], useClass: BrowserAnimationBuilder },\n    { provide: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"c\" /* ɵAnimationStyleNormalizer */], useFactory: instantiateDefaultStyleNormalizer },\n    { provide: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"b\" /* ɵAnimationEngine */], useClass: InjectableAnimationEngine }, {\n        provide: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"RendererFactory2\"],\n        useFactory: instantiateRendererFactory,\n        deps: [__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"ɵDomRendererFactory2\"], __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"b\" /* ɵAnimationEngine */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"]]\n    }\n];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nvar BROWSER_ANIMATIONS_PROVIDERS = [\n    { provide: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"a\" /* AnimationDriver */], useFactory: instantiateSupportedAnimationDriver }\n].concat(SHARED_ANIMATION_PROVIDERS);\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nvar BROWSER_NOOP_ANIMATIONS_PROVIDERS = [{ provide: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"a\" /* AnimationDriver */], useClass: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"d\" /* ɵNoopAnimationDriver */] }].concat(SHARED_ANIMATION_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@experimental Animation support is experimental.\n */\nvar BrowserAnimationsModule = /** @class */ (function () {\n    function BrowserAnimationsModule() {\n    }\n    BrowserAnimationsModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                    exports: [__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"BrowserModule\"]],\n                    providers: BROWSER_ANIMATIONS_PROVIDERS,\n                },] },\n    ];\n    /** @nocollapse */\n    BrowserAnimationsModule.ctorParameters = function () { return []; };\n    return BrowserAnimationsModule;\n}());\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationsModule = /** @class */ (function () {\n    function NoopAnimationsModule() {\n    }\n    NoopAnimationsModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                    exports: [__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"BrowserModule\"]],\n                    providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n                },] },\n    ];\n    /** @nocollapse */\n    NoopAnimationsModule.ctorParameters = function () { return []; };\n    return NoopAnimationsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n\n//# sourceMappingURL=animations.js.map\n\n\n/***/ }),\n\n/***/ 647:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AnimationDriver; });\n/* unused harmony export ɵAnimation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return AnimationStyleNormalizer; });\n/* unused harmony export ɵNoopAnimationStyleNormalizer */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return WebAnimationsStyleNormalizer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return NoopAnimationDriver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return AnimationEngine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return WebAnimationsDriver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return supportsWebAnimations; });\n/* unused harmony export ɵWebAnimationsPlayer */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_animations__ = __webpack_require__(259);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(18);\n/**\n * @license Angular v5.2.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} players\n * @return {?}\n */\nfunction optimizeGroupPlayer(players) {\n    switch (players.length) {\n        case 0:\n            return new __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"d\" /* NoopAnimationPlayer */]();\n        case 1:\n            return players[0];\n        default:\n            return new __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"g\" /* ɵAnimationGroupPlayer */](players);\n    }\n}\n/**\n * @param {?} driver\n * @param {?} normalizer\n * @param {?} element\n * @param {?} keyframes\n * @param {?=} preStyles\n * @param {?=} postStyles\n * @return {?}\n */\nfunction normalizeKeyframes(driver, normalizer, element, keyframes, preStyles, postStyles) {\n    if (preStyles === void 0) { preStyles = {}; }\n    if (postStyles === void 0) { postStyles = {}; }\n    var /** @type {?} */ errors = [];\n    var /** @type {?} */ normalizedKeyframes = [];\n    var /** @type {?} */ previousOffset = -1;\n    var /** @type {?} */ previousKeyframe = null;\n    keyframes.forEach(function (kf) {\n        var /** @type {?} */ offset = /** @type {?} */ (kf['offset']);\n        var /** @type {?} */ isSameOffset = offset == previousOffset;\n        var /** @type {?} */ normalizedKeyframe = (isSameOffset && previousKeyframe) || {};\n        Object.keys(kf).forEach(function (prop) {\n            var /** @type {?} */ normalizedProp = prop;\n            var /** @type {?} */ normalizedValue = kf[prop];\n            if (prop !== 'offset') {\n                normalizedProp = normalizer.normalizePropertyName(normalizedProp, errors);\n                switch (normalizedValue) {\n                    case __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"h\" /* ɵPRE_STYLE */]:\n                        normalizedValue = preStyles[prop];\n                        break;\n                    case __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"a\" /* AUTO_STYLE */]:\n                        normalizedValue = postStyles[prop];\n                        break;\n                    default:\n                        normalizedValue =\n                            normalizer.normalizeStyleValue(prop, normalizedProp, normalizedValue, errors);\n                        break;\n                }\n            }\n            normalizedKeyframe[normalizedProp] = normalizedValue;\n        });\n        if (!isSameOffset) {\n            normalizedKeyframes.push(normalizedKeyframe);\n        }\n        previousKeyframe = normalizedKeyframe;\n        previousOffset = offset;\n    });\n    if (errors.length) {\n        var /** @type {?} */ LINE_START = '\\n - ';\n        throw new Error(\"Unable to animate due to the following errors:\" + LINE_START + errors.join(LINE_START));\n    }\n    return normalizedKeyframes;\n}\n/**\n * @param {?} player\n * @param {?} eventName\n * @param {?} event\n * @param {?} callback\n * @return {?}\n */\nfunction listenOnPlayer(player, eventName, event, callback) {\n    switch (eventName) {\n        case 'start':\n            player.onStart(function () { return callback(event && copyAnimationEvent(event, 'start', player.totalTime)); });\n            break;\n        case 'done':\n            player.onDone(function () { return callback(event && copyAnimationEvent(event, 'done', player.totalTime)); });\n            break;\n        case 'destroy':\n            player.onDestroy(function () { return callback(event && copyAnimationEvent(event, 'destroy', player.totalTime)); });\n            break;\n    }\n}\n/**\n * @param {?} e\n * @param {?=} phaseName\n * @param {?=} totalTime\n * @return {?}\n */\nfunction copyAnimationEvent(e, phaseName, totalTime) {\n    var /** @type {?} */ event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == undefined ? e.totalTime : totalTime);\n    var /** @type {?} */ data = (/** @type {?} */ (e))['_data'];\n    if (data != null) {\n        (/** @type {?} */ (event))['_data'] = data;\n    }\n    return event;\n}\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?=} phaseName\n * @param {?=} totalTime\n * @return {?}\n */\nfunction makeAnimationEvent(element, triggerName, fromState, toState, phaseName, totalTime) {\n    if (phaseName === void 0) { phaseName = ''; }\n    if (totalTime === void 0) { totalTime = 0; }\n    return { element: element, triggerName: triggerName, fromState: fromState, toState: toState, phaseName: phaseName, totalTime: totalTime };\n}\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} defaultValue\n * @return {?}\n */\nfunction getOrSetAsInMap(map, key, defaultValue) {\n    var /** @type {?} */ value;\n    if (map instanceof Map) {\n        value = map.get(key);\n        if (!value) {\n            map.set(key, value = defaultValue);\n        }\n    }\n    else {\n        value = map[key];\n        if (!value) {\n            value = map[key] = defaultValue;\n        }\n    }\n    return value;\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction parseTimelineCommand(command) {\n    var /** @type {?} */ separatorPos = command.indexOf(':');\n    var /** @type {?} */ id = command.substring(1, separatorPos);\n    var /** @type {?} */ action = command.substr(separatorPos + 1);\n    return [id, action];\n}\nvar _contains = function (elm1, elm2) { return false; };\nvar _matches = function (element, selector) {\n    return false;\n};\nvar _query = function (element, selector, multi) {\n    return [];\n};\nif (typeof Element != 'undefined') {\n    // this is well supported in all browsers\n    _contains = function (elm1, elm2) { return /** @type {?} */ (elm1.contains(elm2)); };\n    if (Element.prototype.matches) {\n        _matches = function (element, selector) { return element.matches(selector); };\n    }\n    else {\n        var /** @type {?} */ proto = /** @type {?} */ (Element.prototype);\n        var /** @type {?} */ fn_1 = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector ||\n            proto.oMatchesSelector || proto.webkitMatchesSelector;\n        if (fn_1) {\n            _matches = function (element, selector) { return fn_1.apply(element, [selector]); };\n        }\n    }\n    _query = function (element, selector, multi) {\n        var /** @type {?} */ results = [];\n        if (multi) {\n            results.push.apply(results, element.querySelectorAll(selector));\n        }\n        else {\n            var /** @type {?} */ elm = element.querySelector(selector);\n            if (elm) {\n                results.push(elm);\n            }\n        }\n        return results;\n    };\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction containsVendorPrefix(prop) {\n    // Webkit is the only real popular vendor prefix nowadays\n    // cc: http://shouldiprefix.com/\n    return prop.substring(1, 6) == 'ebkit'; // webkit or Webkit\n}\nvar _CACHED_BODY = null;\nvar _IS_WEBKIT = false;\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction validateStyleProperty(prop) {\n    if (!_CACHED_BODY) {\n        _CACHED_BODY = getBodyNode() || {};\n        _IS_WEBKIT = /** @type {?} */ ((_CACHED_BODY)).style ? ('WebkitAppearance' in /** @type {?} */ ((_CACHED_BODY)).style) : false;\n    }\n    var /** @type {?} */ result = true;\n    if (/** @type {?} */ ((_CACHED_BODY)).style && !containsVendorPrefix(prop)) {\n        result = prop in /** @type {?} */ ((_CACHED_BODY)).style;\n        if (!result && _IS_WEBKIT) {\n            var /** @type {?} */ camelProp = 'Webkit' + prop.charAt(0).toUpperCase() + prop.substr(1);\n            result = camelProp in /** @type {?} */ ((_CACHED_BODY)).style;\n        }\n    }\n    return result;\n}\n/**\n * @return {?}\n */\nfunction getBodyNode() {\n    if (typeof document != 'undefined') {\n        return document.body;\n    }\n    return null;\n}\nvar matchesElement = _matches;\nvar containsElement = _contains;\nvar invokeQuery = _query;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@experimental\n */\nvar NoopAnimationDriver = /** @class */ (function () {\n    function NoopAnimationDriver() {\n    }\n    /**\n     * @param {?} prop\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.validateStyleProperty = /**\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) { return validateStyleProperty(prop); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.matchesElement = /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.containsElement = /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    function (elm1, elm2) { return containsElement(elm1, elm2); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.query = /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.computeStyle = /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    function (element, prop, defaultValue) {\n        return defaultValue || '';\n    };\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.animate = /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        return new __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"d\" /* NoopAnimationPlayer */]();\n    };\n    return NoopAnimationDriver;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nvar AnimationDriver = /** @class */ (function () {\n    function AnimationDriver() {\n    }\n    AnimationDriver.NOOP = new NoopAnimationDriver();\n    return AnimationDriver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ONE_SECOND = 1000;\nvar SUBSTITUTION_EXPR_START = '{{';\nvar SUBSTITUTION_EXPR_END = '}}';\nvar ENTER_CLASSNAME = 'ng-enter';\nvar LEAVE_CLASSNAME = 'ng-leave';\n\n\nvar NG_TRIGGER_CLASSNAME = 'ng-trigger';\nvar NG_TRIGGER_SELECTOR = '.ng-trigger';\nvar NG_ANIMATING_CLASSNAME = 'ng-animating';\nvar NG_ANIMATING_SELECTOR = '.ng-animating';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction resolveTimingValue(value) {\n    if (typeof value == 'number')\n        return value;\n    var /** @type {?} */ matches = (/** @type {?} */ (value)).match(/^(-?[\\.\\d]+)(m?s)/);\n    if (!matches || matches.length < 2)\n        return 0;\n    return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\n/**\n * @param {?} value\n * @param {?} unit\n * @return {?}\n */\nfunction _convertTimeValueToMS(value, unit) {\n    switch (unit) {\n        case 's':\n            return value * ONE_SECOND;\n        default:\n            // ms or something else\n            return value;\n    }\n}\n/**\n * @param {?} timings\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nfunction resolveTiming(timings, errors, allowNegativeValues) {\n    return timings.hasOwnProperty('duration') ? /** @type {?} */ (timings) :\n        parseTimeExpression(/** @type {?} */ (timings), errors, allowNegativeValues);\n}\n/**\n * @param {?} exp\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nfunction parseTimeExpression(exp, errors, allowNegativeValues) {\n    var /** @type {?} */ regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n    var /** @type {?} */ duration;\n    var /** @type {?} */ delay = 0;\n    var /** @type {?} */ easing = '';\n    if (typeof exp === 'string') {\n        var /** @type {?} */ matches = exp.match(regex);\n        if (matches === null) {\n            errors.push(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n            return { duration: 0, delay: 0, easing: '' };\n        }\n        duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n        var /** @type {?} */ delayMatch = matches[3];\n        if (delayMatch != null) {\n            delay = _convertTimeValueToMS(Math.floor(parseFloat(delayMatch)), matches[4]);\n        }\n        var /** @type {?} */ easingVal = matches[5];\n        if (easingVal) {\n            easing = easingVal;\n        }\n    }\n    else {\n        duration = /** @type {?} */ (exp);\n    }\n    if (!allowNegativeValues) {\n        var /** @type {?} */ containsErrors = false;\n        var /** @type {?} */ startIndex = errors.length;\n        if (duration < 0) {\n            errors.push(\"Duration values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (delay < 0) {\n            errors.push(\"Delay values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (containsErrors) {\n            errors.splice(startIndex, 0, \"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n        }\n    }\n    return { duration: duration, delay: delay, easing: easing };\n}\n/**\n * @param {?} obj\n * @param {?=} destination\n * @return {?}\n */\nfunction copyObj(obj, destination) {\n    if (destination === void 0) { destination = {}; }\n    Object.keys(obj).forEach(function (prop) { destination[prop] = obj[prop]; });\n    return destination;\n}\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction normalizeStyles(styles) {\n    var /** @type {?} */ normalizedStyles = {};\n    if (Array.isArray(styles)) {\n        styles.forEach(function (data) { return copyStyles(data, false, normalizedStyles); });\n    }\n    else {\n        copyStyles(styles, false, normalizedStyles);\n    }\n    return normalizedStyles;\n}\n/**\n * @param {?} styles\n * @param {?} readPrototype\n * @param {?=} destination\n * @return {?}\n */\nfunction copyStyles(styles, readPrototype, destination) {\n    if (destination === void 0) { destination = {}; }\n    if (readPrototype) {\n        // we make use of a for-in loop so that the\n        // prototypically inherited properties are\n        // revealed from the backFill map\n        for (var /** @type {?} */ prop in styles) {\n            destination[prop] = styles[prop];\n        }\n    }\n    else {\n        copyObj(styles, destination);\n    }\n    return destination;\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nfunction setStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = styles[prop];\n        });\n    }\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nfunction eraseStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = '';\n        });\n    }\n}\n/**\n * @param {?} steps\n * @return {?}\n */\nfunction normalizeAnimationEntry(steps) {\n    if (Array.isArray(steps)) {\n        if (steps.length == 1)\n            return steps[0];\n        return Object(__WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"e\" /* sequence */])(steps);\n    }\n    return /** @type {?} */ (steps);\n}\n/**\n * @param {?} value\n * @param {?} options\n * @param {?} errors\n * @return {?}\n */\nfunction validateStyleParams(value, options, errors) {\n    var /** @type {?} */ params = options.params || {};\n    var /** @type {?} */ matches = extractStyleParams(value);\n    if (matches.length) {\n        matches.forEach(function (varName) {\n            if (!params.hasOwnProperty(varName)) {\n                errors.push(\"Unable to resolve the local animation param \" + varName + \" in the given list of values\");\n            }\n        });\n    }\n}\nvar PARAM_REGEX = new RegExp(SUBSTITUTION_EXPR_START + \"\\\\s*(.+?)\\\\s*\" + SUBSTITUTION_EXPR_END, 'g');\n/**\n * @param {?} value\n * @return {?}\n */\nfunction extractStyleParams(value) {\n    var /** @type {?} */ params = [];\n    if (typeof value === 'string') {\n        var /** @type {?} */ val = value.toString();\n        var /** @type {?} */ match = void 0;\n        while (match = PARAM_REGEX.exec(val)) {\n            params.push(/** @type {?} */ (match[1]));\n        }\n        PARAM_REGEX.lastIndex = 0;\n    }\n    return params;\n}\n/**\n * @param {?} value\n * @param {?} params\n * @param {?} errors\n * @return {?}\n */\nfunction interpolateParams(value, params, errors) {\n    var /** @type {?} */ original = value.toString();\n    var /** @type {?} */ str = original.replace(PARAM_REGEX, function (_, varName) {\n        var /** @type {?} */ localVal = params[varName];\n        // this means that the value was never overidden by the data passed in by the user\n        if (!params.hasOwnProperty(varName)) {\n            errors.push(\"Please provide a value for the animation param \" + varName);\n            localVal = '';\n        }\n        return localVal.toString();\n    });\n    // we do this to assert that numeric values stay as they are\n    return str == original ? value : str;\n}\n/**\n * @param {?} iterator\n * @return {?}\n */\nfunction iteratorToArray(iterator) {\n    var /** @type {?} */ arr = [];\n    var /** @type {?} */ item = iterator.next();\n    while (!item.done) {\n        arr.push(item.value);\n        item = iterator.next();\n    }\n    return arr;\n}\n/**\n * @param {?} source\n * @param {?} destination\n * @return {?}\n */\n\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} duration\n * @param {?} delay\n * @return {?}\n */\nfunction allowPreviousPlayerStylesMerge(duration, delay) {\n    return duration === 0 || delay === 0;\n}\n/**\n * @param {?} visitor\n * @param {?} node\n * @param {?} context\n * @return {?}\n */\nfunction visitDslNode(visitor, node, context) {\n    switch (node.type) {\n        case 7 /* Trigger */:\n            return visitor.visitTrigger(node, context);\n        case 0 /* State */:\n            return visitor.visitState(node, context);\n        case 1 /* Transition */:\n            return visitor.visitTransition(node, context);\n        case 2 /* Sequence */:\n            return visitor.visitSequence(node, context);\n        case 3 /* Group */:\n            return visitor.visitGroup(node, context);\n        case 4 /* Animate */:\n            return visitor.visitAnimate(node, context);\n        case 5 /* Keyframes */:\n            return visitor.visitKeyframes(node, context);\n        case 6 /* Style */:\n            return visitor.visitStyle(node, context);\n        case 8 /* Reference */:\n            return visitor.visitReference(node, context);\n        case 9 /* AnimateChild */:\n            return visitor.visitAnimateChild(node, context);\n        case 10 /* AnimateRef */:\n            return visitor.visitAnimateRef(node, context);\n        case 11 /* Query */:\n            return visitor.visitQuery(node, context);\n        case 12 /* Stagger */:\n            return visitor.visitStagger(node, context);\n        default:\n            throw new Error(\"Unable to resolve animation metadata node #\" + node.type);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANY_STATE = '*';\n/**\n * @param {?} transitionValue\n * @param {?} errors\n * @return {?}\n */\nfunction parseTransitionExpr(transitionValue, errors) {\n    var /** @type {?} */ expressions = [];\n    if (typeof transitionValue == 'string') {\n        (/** @type {?} */ (transitionValue))\n            .split(/\\s*,\\s*/)\n            .forEach(function (str) { return parseInnerTransitionStr(str, expressions, errors); });\n    }\n    else {\n        expressions.push(/** @type {?} */ (transitionValue));\n    }\n    return expressions;\n}\n/**\n * @param {?} eventStr\n * @param {?} expressions\n * @param {?} errors\n * @return {?}\n */\nfunction parseInnerTransitionStr(eventStr, expressions, errors) {\n    if (eventStr[0] == ':') {\n        var /** @type {?} */ result = parseAnimationAlias(eventStr, errors);\n        if (typeof result == 'function') {\n            expressions.push(result);\n            return;\n        }\n        eventStr = /** @type {?} */ (result);\n    }\n    var /** @type {?} */ match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n    if (match == null || match.length < 4) {\n        errors.push(\"The provided transition expression \\\"\" + eventStr + \"\\\" is not supported\");\n        return expressions;\n    }\n    var /** @type {?} */ fromState = match[1];\n    var /** @type {?} */ separator = match[2];\n    var /** @type {?} */ toState = match[3];\n    expressions.push(makeLambdaFromStates(fromState, toState));\n    var /** @type {?} */ isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n    if (separator[0] == '<' && !isFullAnyStateExpr) {\n        expressions.push(makeLambdaFromStates(toState, fromState));\n    }\n}\n/**\n * @param {?} alias\n * @param {?} errors\n * @return {?}\n */\nfunction parseAnimationAlias(alias, errors) {\n    switch (alias) {\n        case ':enter':\n            return 'void => *';\n        case ':leave':\n            return '* => void';\n        case ':increment':\n            return function (fromState, toState) { return parseFloat(toState) > parseFloat(fromState); };\n        case ':decrement':\n            return function (fromState, toState) { return parseFloat(toState) < parseFloat(fromState); };\n        default:\n            errors.push(\"The transition alias value \\\"\" + alias + \"\\\" is not supported\");\n            return '* => *';\n    }\n}\n// DO NOT REFACTOR ... keep the follow set instantiations\n// with the values intact (closure compiler for some reason\n// removes follow-up lines that add the values outside of\n// the constructor...\nvar TRUE_BOOLEAN_VALUES = new Set(['true', '1']);\nvar FALSE_BOOLEAN_VALUES = new Set(['false', '0']);\n/**\n * @param {?} lhs\n * @param {?} rhs\n * @return {?}\n */\nfunction makeLambdaFromStates(lhs, rhs) {\n    var /** @type {?} */ LHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(lhs) || FALSE_BOOLEAN_VALUES.has(lhs);\n    var /** @type {?} */ RHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(rhs) || FALSE_BOOLEAN_VALUES.has(rhs);\n    return function (fromState, toState) {\n        var /** @type {?} */ lhsMatch = lhs == ANY_STATE || lhs == fromState;\n        var /** @type {?} */ rhsMatch = rhs == ANY_STATE || rhs == toState;\n        if (!lhsMatch && LHS_MATCH_BOOLEAN && typeof fromState === 'boolean') {\n            lhsMatch = fromState ? TRUE_BOOLEAN_VALUES.has(lhs) : FALSE_BOOLEAN_VALUES.has(lhs);\n        }\n        if (!rhsMatch && RHS_MATCH_BOOLEAN && typeof toState === 'boolean') {\n            rhsMatch = toState ? TRUE_BOOLEAN_VALUES.has(rhs) : FALSE_BOOLEAN_VALUES.has(rhs);\n        }\n        return lhsMatch && rhsMatch;\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar SELF_TOKEN = ':self';\nvar SELF_TOKEN_REGEX = new RegExp(\"s*\" + SELF_TOKEN + \"s*,?\", 'g');\n/**\n * @param {?} driver\n * @param {?} metadata\n * @param {?} errors\n * @return {?}\n */\nfunction buildAnimationAst(driver, metadata, errors) {\n    return new AnimationAstBuilderVisitor(driver).build(metadata, errors);\n}\nvar ROOT_SELECTOR = '';\nvar AnimationAstBuilderVisitor = /** @class */ (function () {\n    function AnimationAstBuilderVisitor(_driver) {\n        this._driver = _driver;\n    }\n    /**\n     * @param {?} metadata\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.build = /**\n     * @param {?} metadata\n     * @param {?} errors\n     * @return {?}\n     */\n    function (metadata, errors) {\n        var /** @type {?} */ context = new AnimationAstBuilderContext(errors);\n        this._resetContextStyleTimingState(context);\n        return /** @type {?} */ (visitDslNode(this, normalizeAnimationEntry(metadata), context));\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._resetContextStyleTimingState = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        context.currentQuerySelector = ROOT_SELECTOR;\n        context.collectedStyles = {};\n        context.collectedStyles[ROOT_SELECTOR] = {};\n        context.currentTime = 0;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTrigger = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ queryCount = context.queryCount = 0;\n        var /** @type {?} */ depCount = context.depCount = 0;\n        var /** @type {?} */ states = [];\n        var /** @type {?} */ transitions = [];\n        if (metadata.name.charAt(0) == '@') {\n            context.errors.push('animation triggers cannot be prefixed with an `@` sign (e.g. trigger(\\'@foo\\', [...]))');\n        }\n        metadata.definitions.forEach(function (def) {\n            _this._resetContextStyleTimingState(context);\n            if (def.type == 0 /* State */) {\n                var /** @type {?} */ stateDef_1 = /** @type {?} */ (def);\n                var /** @type {?} */ name_1 = stateDef_1.name;\n                name_1.split(/\\s*,\\s*/).forEach(function (n) {\n                    stateDef_1.name = n;\n                    states.push(_this.visitState(stateDef_1, context));\n                });\n                stateDef_1.name = name_1;\n            }\n            else if (def.type == 1 /* Transition */) {\n                var /** @type {?} */ transition = _this.visitTransition(/** @type {?} */ (def), context);\n                queryCount += transition.queryCount;\n                depCount += transition.depCount;\n                transitions.push(transition);\n            }\n            else {\n                context.errors.push('only state() and transition() definitions can sit inside of a trigger()');\n            }\n        });\n        return {\n            type: 7 /* Trigger */,\n            name: metadata.name, states: states, transitions: transitions, queryCount: queryCount, depCount: depCount,\n            options: null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitState = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ styleAst = this.visitStyle(metadata.styles, context);\n        var /** @type {?} */ astParams = (metadata.options && metadata.options.params) || null;\n        if (styleAst.containsDynamicStyles) {\n            var /** @type {?} */ missingSubs_1 = new Set();\n            var /** @type {?} */ params_1 = astParams || {};\n            styleAst.styles.forEach(function (value) {\n                if (isObject(value)) {\n                    var /** @type {?} */ stylesObj_1 = /** @type {?} */ (value);\n                    Object.keys(stylesObj_1).forEach(function (prop) {\n                        extractStyleParams(stylesObj_1[prop]).forEach(function (sub) {\n                            if (!params_1.hasOwnProperty(sub)) {\n                                missingSubs_1.add(sub);\n                            }\n                        });\n                    });\n                }\n            });\n            if (missingSubs_1.size) {\n                var /** @type {?} */ missingSubsArr = iteratorToArray(missingSubs_1.values());\n                context.errors.push(\"state(\\\"\" + metadata.name + \"\\\", ...) must define default values for all the following style substitutions: \" + missingSubsArr.join(', '));\n            }\n        }\n        return {\n            type: 0 /* State */,\n            name: metadata.name,\n            style: styleAst,\n            options: astParams ? { params: astParams } : null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTransition = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        context.queryCount = 0;\n        context.depCount = 0;\n        var /** @type {?} */ animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        var /** @type {?} */ matchers = parseTransitionExpr(metadata.expr, context.errors);\n        return {\n            type: 1 /* Transition */,\n            matchers: matchers,\n            animation: animation,\n            queryCount: context.queryCount,\n            depCount: context.depCount,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitSequence = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        return {\n            type: 2 /* Sequence */,\n            steps: metadata.steps.map(function (s) { return visitDslNode(_this, s, context); }),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitGroup = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ furthestTime = 0;\n        var /** @type {?} */ steps = metadata.steps.map(function (step) {\n            context.currentTime = currentTime;\n            var /** @type {?} */ innerAst = visitDslNode(_this, step, context);\n            furthestTime = Math.max(furthestTime, context.currentTime);\n            return innerAst;\n        });\n        context.currentTime = furthestTime;\n        return {\n            type: 3 /* Group */,\n            steps: steps,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimate = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ timingAst = constructTimingAst(metadata.timings, context.errors);\n        context.currentAnimateTimings = timingAst;\n        var /** @type {?} */ styleAst;\n        var /** @type {?} */ styleMetadata = metadata.styles ? metadata.styles : Object(__WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"f\" /* style */])({});\n        if (styleMetadata.type == 5 /* Keyframes */) {\n            styleAst = this.visitKeyframes(/** @type {?} */ (styleMetadata), context);\n        }\n        else {\n            var /** @type {?} */ styleMetadata_1 = /** @type {?} */ (metadata.styles);\n            var /** @type {?} */ isEmpty = false;\n            if (!styleMetadata_1) {\n                isEmpty = true;\n                var /** @type {?} */ newStyleData = {};\n                if (timingAst.easing) {\n                    newStyleData['easing'] = timingAst.easing;\n                }\n                styleMetadata_1 = Object(__WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"f\" /* style */])(newStyleData);\n            }\n            context.currentTime += timingAst.duration + timingAst.delay;\n            var /** @type {?} */ _styleAst = this.visitStyle(styleMetadata_1, context);\n            _styleAst.isEmptyStep = isEmpty;\n            styleAst = _styleAst;\n        }\n        context.currentAnimateTimings = null;\n        return {\n            type: 4 /* Animate */,\n            timings: timingAst,\n            style: styleAst,\n            options: null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStyle = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ ast = this._makeStyleAst(metadata, context);\n        this._validateStyleAst(ast, context);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._makeStyleAst = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ styles = [];\n        if (Array.isArray(metadata.styles)) {\n            (/** @type {?} */ (metadata.styles)).forEach(function (styleTuple) {\n                if (typeof styleTuple == 'string') {\n                    if (styleTuple == __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"a\" /* AUTO_STYLE */]) {\n                        styles.push(/** @type {?} */ (styleTuple));\n                    }\n                    else {\n                        context.errors.push(\"The provided style string value \" + styleTuple + \" is not allowed.\");\n                    }\n                }\n                else {\n                    styles.push(/** @type {?} */ (styleTuple));\n                }\n            });\n        }\n        else {\n            styles.push(metadata.styles);\n        }\n        var /** @type {?} */ containsDynamicStyles = false;\n        var /** @type {?} */ collectedEasing = null;\n        styles.forEach(function (styleData) {\n            if (isObject(styleData)) {\n                var /** @type {?} */ styleMap = /** @type {?} */ (styleData);\n                var /** @type {?} */ easing = styleMap['easing'];\n                if (easing) {\n                    collectedEasing = /** @type {?} */ (easing);\n                    delete styleMap['easing'];\n                }\n                if (!containsDynamicStyles) {\n                    for (var /** @type {?} */ prop in styleMap) {\n                        var /** @type {?} */ value = styleMap[prop];\n                        if (value.toString().indexOf(SUBSTITUTION_EXPR_START) >= 0) {\n                            containsDynamicStyles = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            type: 6 /* Style */,\n            styles: styles,\n            easing: collectedEasing,\n            offset: metadata.offset, containsDynamicStyles: containsDynamicStyles,\n            options: null\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._validateStyleAst = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ timings = context.currentAnimateTimings;\n        var /** @type {?} */ endTime = context.currentTime;\n        var /** @type {?} */ startTime = context.currentTime;\n        if (timings && startTime > 0) {\n            startTime -= timings.duration + timings.delay;\n        }\n        ast.styles.forEach(function (tuple) {\n            if (typeof tuple == 'string')\n                return;\n            Object.keys(tuple).forEach(function (prop) {\n                if (!_this._driver.validateStyleProperty(prop)) {\n                    context.errors.push(\"The provided animation property \\\"\" + prop + \"\\\" is not a supported CSS property for animations\");\n                    return;\n                }\n                var /** @type {?} */ collectedStyles = context.collectedStyles[/** @type {?} */ ((context.currentQuerySelector))];\n                var /** @type {?} */ collectedEntry = collectedStyles[prop];\n                var /** @type {?} */ updateCollectedStyle = true;\n                if (collectedEntry) {\n                    if (startTime != endTime && startTime >= collectedEntry.startTime &&\n                        endTime <= collectedEntry.endTime) {\n                        context.errors.push(\"The CSS property \\\"\" + prop + \"\\\" that exists between the times of \\\"\" + collectedEntry.startTime + \"ms\\\" and \\\"\" + collectedEntry.endTime + \"ms\\\" is also being animated in a parallel animation between the times of \\\"\" + startTime + \"ms\\\" and \\\"\" + endTime + \"ms\\\"\");\n                        updateCollectedStyle = false;\n                    }\n                    // we always choose the smaller start time value since we\n                    // want to have a record of the entire animation window where\n                    // the style property is being animated in between\n                    startTime = collectedEntry.startTime;\n                }\n                if (updateCollectedStyle) {\n                    collectedStyles[prop] = { startTime: startTime, endTime: endTime };\n                }\n                if (context.options) {\n                    validateStyleParams(tuple[prop], context.options, context.errors);\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitKeyframes = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ ast = { type: 5 /* Keyframes */, styles: [], options: null };\n        if (!context.currentAnimateTimings) {\n            context.errors.push(\"keyframes() must be placed inside of a call to animate()\");\n            return ast;\n        }\n        var /** @type {?} */ MAX_KEYFRAME_OFFSET = 1;\n        var /** @type {?} */ totalKeyframesWithOffsets = 0;\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offsetsOutOfOrder = false;\n        var /** @type {?} */ keyframesOutOfRange = false;\n        var /** @type {?} */ previousOffset = 0;\n        var /** @type {?} */ keyframes = metadata.steps.map(function (styles) {\n            var /** @type {?} */ style$$1 = _this._makeStyleAst(styles, context);\n            var /** @type {?} */ offsetVal = style$$1.offset != null ? style$$1.offset : consumeOffset(style$$1.styles);\n            var /** @type {?} */ offset = 0;\n            if (offsetVal != null) {\n                totalKeyframesWithOffsets++;\n                offset = style$$1.offset = offsetVal;\n            }\n            keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n            offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n            previousOffset = offset;\n            offsets.push(offset);\n            return style$$1;\n        });\n        if (keyframesOutOfRange) {\n            context.errors.push(\"Please ensure that all keyframe offsets are between 0 and 1\");\n        }\n        if (offsetsOutOfOrder) {\n            context.errors.push(\"Please ensure that all keyframe offsets are in order\");\n        }\n        var /** @type {?} */ length = metadata.steps.length;\n        var /** @type {?} */ generatedOffset = 0;\n        if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n            context.errors.push(\"Not all style() steps within the declared keyframes() contain offsets\");\n        }\n        else if (totalKeyframesWithOffsets == 0) {\n            generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n        }\n        var /** @type {?} */ limit = length - 1;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ currentAnimateTimings = /** @type {?} */ ((context.currentAnimateTimings));\n        var /** @type {?} */ animateDuration = currentAnimateTimings.duration;\n        keyframes.forEach(function (kf, i) {\n            var /** @type {?} */ offset = generatedOffset > 0 ? (i == limit ? 1 : (generatedOffset * i)) : offsets[i];\n            var /** @type {?} */ durationUpToThisFrame = offset * animateDuration;\n            context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n            currentAnimateTimings.duration = durationUpToThisFrame;\n            _this._validateStyleAst(kf, context);\n            kf.offset = offset;\n            ast.styles.push(kf);\n        });\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitReference = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        return {\n            type: 8 /* Reference */,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateChild = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        context.depCount++;\n        return {\n            type: 9 /* AnimateChild */,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateRef = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        return {\n            type: 10 /* AnimateRef */,\n            animation: this.visitReference(metadata.animation, context),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitQuery = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ parentSelector = /** @type {?} */ ((context.currentQuerySelector));\n        var /** @type {?} */ options = /** @type {?} */ ((metadata.options || {}));\n        context.queryCount++;\n        context.currentQuery = metadata;\n        var _a = normalizeSelector(metadata.selector), selector = _a[0], includeSelf = _a[1];\n        context.currentQuerySelector =\n            parentSelector.length ? (parentSelector + ' ' + selector) : selector;\n        getOrSetAsInMap(context.collectedStyles, context.currentQuerySelector, {});\n        var /** @type {?} */ animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        context.currentQuery = null;\n        context.currentQuerySelector = parentSelector;\n        return {\n            type: 11 /* Query */,\n            selector: selector,\n            limit: options.limit || 0,\n            optional: !!options.optional, includeSelf: includeSelf, animation: animation,\n            originalSelector: metadata.selector,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStagger = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        if (!context.currentQuery) {\n            context.errors.push(\"stagger() can only be used inside of query()\");\n        }\n        var /** @type {?} */ timings = metadata.timings === 'full' ?\n            { duration: 0, delay: 0, easing: 'full' } :\n            resolveTiming(metadata.timings, context.errors, true);\n        return {\n            type: 12 /* Stagger */,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context), timings: timings,\n            options: null\n        };\n    };\n    return AnimationAstBuilderVisitor;\n}());\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction normalizeSelector(selector) {\n    var /** @type {?} */ hasAmpersand = selector.split(/\\s*,\\s*/).find(function (token) { return token == SELF_TOKEN; }) ? true : false;\n    if (hasAmpersand) {\n        selector = selector.replace(SELF_TOKEN_REGEX, '');\n    }\n    // the :enter and :leave selectors are filled in at runtime during timeline building\n    selector = selector.replace(/@\\*/g, NG_TRIGGER_SELECTOR)\n        .replace(/@\\w+/g, function (match) { return NG_TRIGGER_SELECTOR + '-' + match.substr(1); })\n        .replace(/:animating/g, NG_ANIMATING_SELECTOR);\n    return [selector, hasAmpersand];\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction normalizeParams(obj) {\n    return obj ? copyObj(obj) : null;\n}\nvar AnimationAstBuilderContext = /** @class */ (function () {\n    function AnimationAstBuilderContext(errors) {\n        this.errors = errors;\n        this.queryCount = 0;\n        this.depCount = 0;\n        this.currentTransition = null;\n        this.currentQuery = null;\n        this.currentQuerySelector = null;\n        this.currentAnimateTimings = null;\n        this.currentTime = 0;\n        this.collectedStyles = {};\n        this.options = null;\n    }\n    return AnimationAstBuilderContext;\n}());\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction consumeOffset(styles) {\n    if (typeof styles == 'string')\n        return null;\n    var /** @type {?} */ offset = null;\n    if (Array.isArray(styles)) {\n        styles.forEach(function (styleTuple) {\n            if (isObject(styleTuple) && styleTuple.hasOwnProperty('offset')) {\n                var /** @type {?} */ obj = /** @type {?} */ (styleTuple);\n                offset = parseFloat(/** @type {?} */ (obj['offset']));\n                delete obj['offset'];\n            }\n        });\n    }\n    else if (isObject(styles) && styles.hasOwnProperty('offset')) {\n        var /** @type {?} */ obj = /** @type {?} */ (styles);\n        offset = parseFloat(/** @type {?} */ (obj['offset']));\n        delete obj['offset'];\n    }\n    return offset;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isObject(value) {\n    return !Array.isArray(value) && typeof value == 'object';\n}\n/**\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nfunction constructTimingAst(value, errors) {\n    var /** @type {?} */ timings = null;\n    if (value.hasOwnProperty('duration')) {\n        timings = /** @type {?} */ (value);\n    }\n    else if (typeof value == 'number') {\n        var /** @type {?} */ duration = resolveTiming(/** @type {?} */ (value), errors).duration;\n        return makeTimingAst(/** @type {?} */ (duration), 0, '');\n    }\n    var /** @type {?} */ strValue = /** @type {?} */ (value);\n    var /** @type {?} */ isDynamic = strValue.split(/\\s+/).some(function (v) { return v.charAt(0) == '{' && v.charAt(1) == '{'; });\n    if (isDynamic) {\n        var /** @type {?} */ ast = /** @type {?} */ (makeTimingAst(0, 0, ''));\n        ast.dynamic = true;\n        ast.strValue = strValue;\n        return /** @type {?} */ (ast);\n    }\n    timings = timings || resolveTiming(strValue, errors);\n    return makeTimingAst(timings.duration, timings.delay, timings.easing);\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction normalizeAnimationOptions(options) {\n    if (options) {\n        options = copyObj(options);\n        if (options['params']) {\n            options['params'] = /** @type {?} */ ((normalizeParams(options['params'])));\n        }\n    }\n    else {\n        options = {};\n    }\n    return options;\n}\n/**\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @return {?}\n */\nfunction makeTimingAst(duration, delay, easing) {\n    return { duration: duration, delay: delay, easing: easing };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?} duration\n * @param {?} delay\n * @param {?=} easing\n * @param {?=} subTimeline\n * @return {?}\n */\nfunction createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay, easing, subTimeline) {\n    if (easing === void 0) { easing = null; }\n    if (subTimeline === void 0) { subTimeline = false; }\n    return {\n        type: 1 /* TimelineAnimation */,\n        element: element,\n        keyframes: keyframes,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps,\n        duration: duration,\n        delay: delay,\n        totalTime: duration + delay, easing: easing, subTimeline: subTimeline\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ElementInstructionMap = /** @class */ (function () {\n    function ElementInstructionMap() {\n        this._map = new Map();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.consume = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ instructions = this._map.get(element);\n        if (instructions) {\n            this._map.delete(element);\n        }\n        else {\n            instructions = [];\n        }\n        return instructions;\n    };\n    /**\n     * @param {?} element\n     * @param {?} instructions\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.append = /**\n     * @param {?} element\n     * @param {?} instructions\n     * @return {?}\n     */\n    function (element, instructions) {\n        var /** @type {?} */ existingInstructions = this._map.get(element);\n        if (!existingInstructions) {\n            this._map.set(element, existingInstructions = []);\n        }\n        existingInstructions.push.apply(existingInstructions, instructions);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.has = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { return this._map.has(element); };\n    /**\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this._map.clear(); };\n    return ElementInstructionMap;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ONE_FRAME_IN_MILLISECONDS = 1;\nvar ENTER_TOKEN = ':enter';\nvar ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nvar LEAVE_TOKEN = ':leave';\nvar LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\n/**\n * @param {?} driver\n * @param {?} rootElement\n * @param {?} ast\n * @param {?} enterClassName\n * @param {?} leaveClassName\n * @param {?=} startingStyles\n * @param {?=} finalStyles\n * @param {?=} options\n * @param {?=} subInstructions\n * @param {?=} errors\n * @return {?}\n */\nfunction buildAnimationTimelines(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors) {\n    if (startingStyles === void 0) { startingStyles = {}; }\n    if (finalStyles === void 0) { finalStyles = {}; }\n    if (errors === void 0) { errors = []; }\n    return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors);\n}\nvar AnimationTimelineBuilderVisitor = /** @class */ (function () {\n    function AnimationTimelineBuilderVisitor() {\n    }\n    /**\n     * @param {?} driver\n     * @param {?} rootElement\n     * @param {?} ast\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?} startingStyles\n     * @param {?} finalStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @param {?=} errors\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.buildKeyframes = /**\n     * @param {?} driver\n     * @param {?} rootElement\n     * @param {?} ast\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?} startingStyles\n     * @param {?} finalStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @param {?=} errors\n     * @return {?}\n     */\n    function (driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors) {\n        if (errors === void 0) { errors = []; }\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ context = new AnimationTimelineContext(driver, rootElement, subInstructions, enterClassName, leaveClassName, errors, []);\n        context.options = options;\n        context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n        visitDslNode(this, ast, context);\n        // this checks to see if an actual animation happened\n        var /** @type {?} */ timelines = context.timelines.filter(function (timeline) { return timeline.containsAnimation(); });\n        if (timelines.length && Object.keys(finalStyles).length) {\n            var /** @type {?} */ tl = timelines[timelines.length - 1];\n            if (!tl.allowOnlyTimelineStyles()) {\n                tl.setStyles([finalStyles], null, context.errors, options);\n            }\n        }\n        return timelines.length ? timelines.map(function (timeline) { return timeline.buildKeyframes(); }) :\n            [createTimelineInstruction(rootElement, [], [], [], 0, 0, '', false)];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTrigger = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitState = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTransition = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateChild = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ elementInstructions = context.subInstructions.consume(context.element);\n        if (elementInstructions) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n            var /** @type {?} */ endTime = this._visitSubInstructions(elementInstructions, innerContext, /** @type {?} */ (innerContext.options));\n            if (startTime != endTime) {\n                // we do this on the upper context because we created a sub context for\n                // the sub child animations\n                context.transformIntoNewTimeline(endTime);\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateRef = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n        innerContext.transformIntoNewTimeline();\n        this.visitReference(ast.animation, innerContext);\n        context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} instructions\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype._visitSubInstructions = /**\n     * @param {?} instructions\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    function (instructions, context, options) {\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ furthestTime = startTime;\n        // this is a special-case for when a user wants to skip a sub\n        // animation from being fired entirely.\n        var /** @type {?} */ duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n        var /** @type {?} */ delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n        if (duration !== 0) {\n            instructions.forEach(function (instruction) {\n                var /** @type {?} */ instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay);\n                furthestTime =\n                    Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n            });\n        }\n        return furthestTime;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        context.updateOptions(ast.options, true);\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitSequence = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ subContextCount = context.subContextCount;\n        var /** @type {?} */ ctx = context;\n        var /** @type {?} */ options = ast.options;\n        if (options && (options.params || options.delay)) {\n            ctx = context.createSubContext(options);\n            ctx.transformIntoNewTimeline();\n            if (options.delay != null) {\n                if (ctx.previousNode.type == 6 /* Style */) {\n                    ctx.currentTimeline.snapshotCurrentStyles();\n                    ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n                }\n                var /** @type {?} */ delay = resolveTimingValue(options.delay);\n                ctx.delayNextStep(delay);\n            }\n        }\n        if (ast.steps.length) {\n            ast.steps.forEach(function (s) { return visitDslNode(_this, s, ctx); });\n            // this is here just incase the inner steps only contain or end with a style() call\n            ctx.currentTimeline.applyStylesToKeyframe();\n            // this means that some animation function within the sequence\n            // ended up creating a sub timeline (which means the current\n            // timeline cannot overlap with the contents of the sequence)\n            if (ctx.subContextCount > subContextCount) {\n                ctx.transformIntoNewTimeline();\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitGroup = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ innerTimelines = [];\n        var /** @type {?} */ furthestTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n        ast.steps.forEach(function (s) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            visitDslNode(_this, s, innerContext);\n            furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n            innerTimelines.push(innerContext.currentTimeline);\n        });\n        // this operation is run after the AST loop because otherwise\n        // if the parent timeline's collected styles were updated then\n        // it would pass in invalid data into the new-to-be forked items\n        innerTimelines.forEach(function (timeline) { return context.currentTimeline.mergeTimelineCollectedStyles(timeline); });\n        context.transformIntoNewTimeline(furthestTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype._visitTiming = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if ((/** @type {?} */ (ast)).dynamic) {\n            var /** @type {?} */ strValue = (/** @type {?} */ (ast)).strValue;\n            var /** @type {?} */ timingValue = context.params ? interpolateParams(strValue, context.params, context.errors) : strValue;\n            return resolveTiming(timingValue, context.errors);\n        }\n        else {\n            return { duration: ast.duration, delay: ast.delay, easing: ast.easing };\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ timings = context.currentAnimateTimings = this._visitTiming(ast.timings, context);\n        var /** @type {?} */ timeline = context.currentTimeline;\n        if (timings.delay) {\n            context.incrementTime(timings.delay);\n            timeline.snapshotCurrentStyles();\n        }\n        var /** @type {?} */ style$$1 = ast.style;\n        if (style$$1.type == 5 /* Keyframes */) {\n            this.visitKeyframes(style$$1, context);\n        }\n        else {\n            context.incrementTime(timings.duration);\n            this.visitStyle(/** @type {?} */ (style$$1), context);\n            timeline.applyStylesToKeyframe();\n        }\n        context.currentAnimateTimings = null;\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStyle = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ timeline = context.currentTimeline;\n        var /** @type {?} */ timings = /** @type {?} */ ((context.currentAnimateTimings));\n        // this is a special case for when a style() call\n        // directly follows  an animate() call (but not inside of an animate() call)\n        if (!timings && timeline.getCurrentStyleProperties().length) {\n            timeline.forwardFrame();\n        }\n        var /** @type {?} */ easing = (timings && timings.easing) || ast.easing;\n        if (ast.isEmptyStep) {\n            timeline.applyEmptyStep(easing);\n        }\n        else {\n            timeline.setStyles(ast.styles, easing, context.errors, context.options);\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitKeyframes = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ currentAnimateTimings = /** @type {?} */ ((context.currentAnimateTimings));\n        var /** @type {?} */ startTime = (/** @type {?} */ ((context.currentTimeline))).duration;\n        var /** @type {?} */ duration = currentAnimateTimings.duration;\n        var /** @type {?} */ innerContext = context.createSubContext();\n        var /** @type {?} */ innerTimeline = innerContext.currentTimeline;\n        innerTimeline.easing = currentAnimateTimings.easing;\n        ast.styles.forEach(function (step) {\n            var /** @type {?} */ offset = step.offset || 0;\n            innerTimeline.forwardTime(offset * duration);\n            innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n            innerTimeline.applyStylesToKeyframe();\n        });\n        // this will ensure that the parent timeline gets all the styles from\n        // the child even if the new timeline below is not used\n        context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n        // we do this because the window between this timeline and the sub timeline\n        // should ensure that the styles within are exactly the same as they were before\n        context.transformIntoNewTimeline(startTime + duration);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitQuery = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        // in the event that the first step before this is a style step we need\n        // to ensure the styles are applied before the children are animated\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ options = /** @type {?} */ ((ast.options || {}));\n        var /** @type {?} */ delay = options.delay ? resolveTimingValue(options.delay) : 0;\n        if (delay && (context.previousNode.type === 6 /* Style */ ||\n            (startTime == 0 && context.currentTimeline.getCurrentStyleProperties().length))) {\n            context.currentTimeline.snapshotCurrentStyles();\n            context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        }\n        var /** @type {?} */ furthestTime = startTime;\n        var /** @type {?} */ elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);\n        context.currentQueryTotal = elms.length;\n        var /** @type {?} */ sameElementTimeline = null;\n        elms.forEach(function (element, i) {\n            context.currentQueryIndex = i;\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options, element);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            if (element === context.element) {\n                sameElementTimeline = innerContext.currentTimeline;\n            }\n            visitDslNode(_this, ast.animation, innerContext);\n            // this is here just incase the inner steps only contain or end\n            // with a style() call (which is here to signal that this is a preparatory\n            // call to style an element before it is animated again)\n            innerContext.currentTimeline.applyStylesToKeyframe();\n            var /** @type {?} */ endTime = innerContext.currentTimeline.currentTime;\n            furthestTime = Math.max(furthestTime, endTime);\n        });\n        context.currentQueryIndex = 0;\n        context.currentQueryTotal = 0;\n        context.transformIntoNewTimeline(furthestTime);\n        if (sameElementTimeline) {\n            context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n            context.currentTimeline.snapshotCurrentStyles();\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStagger = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ parentContext = /** @type {?} */ ((context.parentContext));\n        var /** @type {?} */ tl = context.currentTimeline;\n        var /** @type {?} */ timings = ast.timings;\n        var /** @type {?} */ duration = Math.abs(timings.duration);\n        var /** @type {?} */ maxTime = duration * (context.currentQueryTotal - 1);\n        var /** @type {?} */ delay = duration * context.currentQueryIndex;\n        var /** @type {?} */ staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n        switch (staggerTransformer) {\n            case 'reverse':\n                delay = maxTime - delay;\n                break;\n            case 'full':\n                delay = parentContext.currentStaggerTime;\n                break;\n        }\n        var /** @type {?} */ timeline = context.currentTimeline;\n        if (delay) {\n            timeline.delayNextStep(delay);\n        }\n        var /** @type {?} */ startingTime = timeline.currentTime;\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n        // time = duration + delay\n        // the reason why this computation is so complex is because\n        // the inner timeline may either have a delay value or a stretched\n        // keyframe depending on if a subtimeline is not used or is used.\n        parentContext.currentStaggerTime =\n            (tl.currentTime - startingTime) + (tl.startTime - parentContext.currentTimeline.startTime);\n    };\n    return AnimationTimelineBuilderVisitor;\n}());\nvar DEFAULT_NOOP_PREVIOUS_NODE = /** @type {?} */ ({});\nvar AnimationTimelineContext = /** @class */ (function () {\n    function AnimationTimelineContext(_driver, element, subInstructions, _enterClassName, _leaveClassName, errors, timelines, initialTimeline) {\n        this._driver = _driver;\n        this.element = element;\n        this.subInstructions = subInstructions;\n        this._enterClassName = _enterClassName;\n        this._leaveClassName = _leaveClassName;\n        this.errors = errors;\n        this.timelines = timelines;\n        this.parentContext = null;\n        this.currentAnimateTimings = null;\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.subContextCount = 0;\n        this.options = {};\n        this.currentQueryIndex = 0;\n        this.currentQueryTotal = 0;\n        this.currentStaggerTime = 0;\n        this.currentTimeline = initialTimeline || new TimelineBuilder(this._driver, element, 0);\n        timelines.push(this.currentTimeline);\n    }\n    Object.defineProperty(AnimationTimelineContext.prototype, \"params\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.options.params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @param {?=} skipIfExists\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.updateOptions = /**\n     * @param {?} options\n     * @param {?=} skipIfExists\n     * @return {?}\n     */\n    function (options, skipIfExists) {\n        var _this = this;\n        if (!options)\n            return;\n        var /** @type {?} */ newOptions = /** @type {?} */ (options);\n        var /** @type {?} */ optionsToUpdate = this.options;\n        // NOTE: this will get patched up when other animation methods support duration overrides\n        if (newOptions.duration != null) {\n            (/** @type {?} */ (optionsToUpdate)).duration = resolveTimingValue(newOptions.duration);\n        }\n        if (newOptions.delay != null) {\n            optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n        }\n        var /** @type {?} */ newParams = newOptions.params;\n        if (newParams) {\n            var /** @type {?} */ paramsToUpdate_1 = /** @type {?} */ ((optionsToUpdate.params));\n            if (!paramsToUpdate_1) {\n                paramsToUpdate_1 = this.options.params = {};\n            }\n            Object.keys(newParams).forEach(function (name) {\n                if (!skipIfExists || !paramsToUpdate_1.hasOwnProperty(name)) {\n                    paramsToUpdate_1[name] = interpolateParams(newParams[name], paramsToUpdate_1, _this.errors);\n                }\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype._copyOptions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ options = {};\n        if (this.options) {\n            var /** @type {?} */ oldParams_1 = this.options.params;\n            if (oldParams_1) {\n                var /** @type {?} */ params_1 = options['params'] = {};\n                Object.keys(oldParams_1).forEach(function (name) { params_1[name] = oldParams_1[name]; });\n            }\n        }\n        return options;\n    };\n    /**\n     * @param {?=} options\n     * @param {?=} element\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.createSubContext = /**\n     * @param {?=} options\n     * @param {?=} element\n     * @param {?=} newTime\n     * @return {?}\n     */\n    function (options, element, newTime) {\n        if (options === void 0) { options = null; }\n        var /** @type {?} */ target = element || this.element;\n        var /** @type {?} */ context = new AnimationTimelineContext(this._driver, target, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n        context.previousNode = this.previousNode;\n        context.currentAnimateTimings = this.currentAnimateTimings;\n        context.options = this._copyOptions();\n        context.updateOptions(options);\n        context.currentQueryIndex = this.currentQueryIndex;\n        context.currentQueryTotal = this.currentQueryTotal;\n        context.parentContext = this;\n        this.subContextCount++;\n        return context;\n    };\n    /**\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.transformIntoNewTimeline = /**\n     * @param {?=} newTime\n     * @return {?}\n     */\n    function (newTime) {\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n        this.timelines.push(this.currentTimeline);\n        return this.currentTimeline;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} duration\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.appendInstructionToTimeline = /**\n     * @param {?} instruction\n     * @param {?} duration\n     * @param {?} delay\n     * @return {?}\n     */\n    function (instruction, duration, delay) {\n        var /** @type {?} */ updatedTimings = {\n            duration: duration != null ? duration : instruction.duration,\n            delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n            easing: ''\n        };\n        var /** @type {?} */ builder = new SubTimelineBuilder(this._driver, instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n        this.timelines.push(builder);\n        return updatedTimings;\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.incrementTime = /**\n     * @param {?} time\n     * @return {?}\n     */\n    function (time) {\n        this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n    };\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.delayNextStep = /**\n     * @param {?} delay\n     * @return {?}\n     */\n    function (delay) {\n        // negative delays are not yet supported\n        if (delay > 0) {\n            this.currentTimeline.delayNextStep(delay);\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} originalSelector\n     * @param {?} limit\n     * @param {?} includeSelf\n     * @param {?} optional\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.invokeQuery = /**\n     * @param {?} selector\n     * @param {?} originalSelector\n     * @param {?} limit\n     * @param {?} includeSelf\n     * @param {?} optional\n     * @param {?} errors\n     * @return {?}\n     */\n    function (selector, originalSelector, limit, includeSelf, optional, errors) {\n        var /** @type {?} */ results = [];\n        if (includeSelf) {\n            results.push(this.element);\n        }\n        if (selector.length > 0) {\n            // if :self is only used then the selector is empty\n            selector = selector.replace(ENTER_TOKEN_REGEX, '.' + this._enterClassName);\n            selector = selector.replace(LEAVE_TOKEN_REGEX, '.' + this._leaveClassName);\n            var /** @type {?} */ multi = limit != 1;\n            var /** @type {?} */ elements = this._driver.query(this.element, selector, multi);\n            if (limit !== 0) {\n                elements = limit < 0 ? elements.slice(elements.length + limit, elements.length) :\n                    elements.slice(0, limit);\n            }\n            results.push.apply(results, elements);\n        }\n        if (!optional && results.length == 0) {\n            errors.push(\"`query(\\\"\" + originalSelector + \"\\\")` returned zero elements. (Use `query(\\\"\" + originalSelector + \"\\\", { optional: true })` if you wish to allow this.)\");\n        }\n        return results;\n    };\n    return AnimationTimelineContext;\n}());\nvar TimelineBuilder = /** @class */ (function () {\n    function TimelineBuilder(_driver, element, startTime, _elementTimelineStylesLookup) {\n        this._driver = _driver;\n        this.element = element;\n        this.startTime = startTime;\n        this._elementTimelineStylesLookup = _elementTimelineStylesLookup;\n        this.duration = 0;\n        this._previousKeyframe = {};\n        this._currentKeyframe = {};\n        this._keyframes = new Map();\n        this._styleSummary = {};\n        this._pendingStyles = {};\n        this._backFill = {};\n        this._currentEmptyStepKeyframe = null;\n        if (!this._elementTimelineStylesLookup) {\n            this._elementTimelineStylesLookup = new Map();\n        }\n        this._localTimelineStyles = Object.create(this._backFill, {});\n        this._globalTimelineStyles = /** @type {?} */ ((this._elementTimelineStylesLookup.get(element)));\n        if (!this._globalTimelineStyles) {\n            this._globalTimelineStyles = this._localTimelineStyles;\n            this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n        }\n        this._loadKeyframe();\n    }\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.containsAnimation = /**\n     * @return {?}\n     */\n    function () {\n        switch (this._keyframes.size) {\n            case 0:\n                return false;\n            case 1:\n                return this.getCurrentStyleProperties().length > 0;\n            default:\n                return true;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getCurrentStyleProperties = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._currentKeyframe); };\n    Object.defineProperty(TimelineBuilder.prototype, \"currentTime\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.startTime + this.duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    TimelineBuilder.prototype.delayNextStep = /**\n     * @param {?} delay\n     * @return {?}\n     */\n    function (delay) {\n        // in the event that a style() step is placed right before a stagger()\n        // and that style() step is the very first style() value in the animation\n        // then we need to make a copy of the keyframe [0, copy, 1] so that the delay\n        // properly applies the style() values to work with the stagger...\n        var /** @type {?} */ hasPreStyleStep = this._keyframes.size == 1 && Object.keys(this._pendingStyles).length;\n        if (this.duration || hasPreStyleStep) {\n            this.forwardTime(this.currentTime + delay);\n            if (hasPreStyleStep) {\n                this.snapshotCurrentStyles();\n            }\n        }\n        else {\n            this.startTime += delay;\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?=} currentTime\n     * @return {?}\n     */\n    TimelineBuilder.prototype.fork = /**\n     * @param {?} element\n     * @param {?=} currentTime\n     * @return {?}\n     */\n    function (element, currentTime) {\n        this.applyStylesToKeyframe();\n        return new TimelineBuilder(this._driver, element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype._loadKeyframe = /**\n     * @return {?}\n     */\n    function () {\n        if (this._currentKeyframe) {\n            this._previousKeyframe = this._currentKeyframe;\n        }\n        this._currentKeyframe = /** @type {?} */ ((this._keyframes.get(this.duration)));\n        if (!this._currentKeyframe) {\n            this._currentKeyframe = Object.create(this._backFill, {});\n            this._keyframes.set(this.duration, this._currentKeyframe);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardFrame = /**\n     * @return {?}\n     */\n    function () {\n        this.duration += ONE_FRAME_IN_MILLISECONDS;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardTime = /**\n     * @param {?} time\n     * @return {?}\n     */\n    function (time) {\n        this.applyStylesToKeyframe();\n        this.duration = time;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    TimelineBuilder.prototype._updateStyle = /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    function (prop, value) {\n        this._localTimelineStyles[prop] = value;\n        this._globalTimelineStyles[prop] = value;\n        this._styleSummary[prop] = { time: this.currentTime, value: value };\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.allowOnlyTimelineStyles = /**\n     * @return {?}\n     */\n    function () { return this._currentEmptyStepKeyframe !== this._currentKeyframe; };\n    /**\n     * @param {?} easing\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyEmptyStep = /**\n     * @param {?} easing\n     * @return {?}\n     */\n    function (easing) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        // special case for animate(duration):\n        // all missing styles are filled with a `*` value then\n        // if any destination styles are filled in later on the same\n        // keyframe then they will override the overridden styles\n        // We use `_globalTimelineStyles` here because there may be\n        // styles in previous keyframes that are not present in this timeline\n        Object.keys(this._globalTimelineStyles).forEach(function (prop) {\n            _this._backFill[prop] = _this._globalTimelineStyles[prop] || __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"a\" /* AUTO_STYLE */];\n            _this._currentKeyframe[prop] = __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"a\" /* AUTO_STYLE */];\n        });\n        this._currentEmptyStepKeyframe = this._currentKeyframe;\n    };\n    /**\n     * @param {?} input\n     * @param {?} easing\n     * @param {?} errors\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineBuilder.prototype.setStyles = /**\n     * @param {?} input\n     * @param {?} easing\n     * @param {?} errors\n     * @param {?=} options\n     * @return {?}\n     */\n    function (input, easing, errors, options) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        var /** @type {?} */ params = (options && options.params) || {};\n        var /** @type {?} */ styles = flattenStyles(input, this._globalTimelineStyles);\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ val = interpolateParams(styles[prop], params, errors);\n            _this._pendingStyles[prop] = val;\n            if (!_this._localTimelineStyles.hasOwnProperty(prop)) {\n                _this._backFill[prop] = _this._globalTimelineStyles.hasOwnProperty(prop) ?\n                    _this._globalTimelineStyles[prop] :\n                    __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"a\" /* AUTO_STYLE */];\n            }\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyStylesToKeyframe = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ styles = this._pendingStyles;\n        var /** @type {?} */ props = Object.keys(styles);\n        if (props.length == 0)\n            return;\n        this._pendingStyles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ val = styles[prop];\n            _this._currentKeyframe[prop] = val;\n        });\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            if (!_this._currentKeyframe.hasOwnProperty(prop)) {\n                _this._currentKeyframe[prop] = _this._localTimelineStyles[prop];\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.snapshotCurrentStyles = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            var /** @type {?} */ val = _this._localTimelineStyles[prop];\n            _this._pendingStyles[prop] = val;\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getFinalKeyframe = /**\n     * @return {?}\n     */\n    function () { return this._keyframes.get(this.duration); };\n    Object.defineProperty(TimelineBuilder.prototype, \"properties\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ properties = [];\n            for (var /** @type {?} */ prop in this._currentKeyframe) {\n                properties.push(prop);\n            }\n            return properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} timeline\n     * @return {?}\n     */\n    TimelineBuilder.prototype.mergeTimelineCollectedStyles = /**\n     * @param {?} timeline\n     * @return {?}\n     */\n    function (timeline) {\n        var _this = this;\n        Object.keys(timeline._styleSummary).forEach(function (prop) {\n            var /** @type {?} */ details0 = _this._styleSummary[prop];\n            var /** @type {?} */ details1 = timeline._styleSummary[prop];\n            if (!details0 || details1.time > details0.time) {\n                _this._updateStyle(prop, details1.value);\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.buildKeyframes = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.applyStylesToKeyframe();\n        var /** @type {?} */ preStyleProps = new Set();\n        var /** @type {?} */ postStyleProps = new Set();\n        var /** @type {?} */ isEmpty = this._keyframes.size === 1 && this.duration === 0;\n        var /** @type {?} */ finalKeyframes = [];\n        this._keyframes.forEach(function (keyframe, time) {\n            var /** @type {?} */ finalKeyframe = copyStyles(keyframe, true);\n            Object.keys(finalKeyframe).forEach(function (prop) {\n                var /** @type {?} */ value = finalKeyframe[prop];\n                if (value == __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"h\" /* ɵPRE_STYLE */]) {\n                    preStyleProps.add(prop);\n                }\n                else if (value == __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"a\" /* AUTO_STYLE */]) {\n                    postStyleProps.add(prop);\n                }\n            });\n            if (!isEmpty) {\n                finalKeyframe['offset'] = time / _this.duration;\n            }\n            finalKeyframes.push(finalKeyframe);\n        });\n        var /** @type {?} */ preProps = preStyleProps.size ? iteratorToArray(preStyleProps.values()) : [];\n        var /** @type {?} */ postProps = postStyleProps.size ? iteratorToArray(postStyleProps.values()) : [];\n        // special case for a 0-second animation (which is designed just to place styles onscreen)\n        if (isEmpty) {\n            var /** @type {?} */ kf0 = finalKeyframes[0];\n            var /** @type {?} */ kf1 = copyObj(kf0);\n            kf0['offset'] = 0;\n            kf1['offset'] = 1;\n            finalKeyframes = [kf0, kf1];\n        }\n        return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);\n    };\n    return TimelineBuilder;\n}());\nvar SubTimelineBuilder = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SubTimelineBuilder, _super);\n    function SubTimelineBuilder(driver, element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe) {\n        if (_stretchStartingKeyframe === void 0) { _stretchStartingKeyframe = false; }\n        var _this = _super.call(this, driver, element, timings.delay) || this;\n        _this.element = element;\n        _this.keyframes = keyframes;\n        _this.preStyleProps = preStyleProps;\n        _this.postStyleProps = postStyleProps;\n        _this._stretchStartingKeyframe = _stretchStartingKeyframe;\n        _this.timings = { duration: timings.duration, delay: timings.delay, easing: timings.easing };\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.containsAnimation = /**\n     * @return {?}\n     */\n    function () { return this.keyframes.length > 1; };\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.buildKeyframes = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keyframes = this.keyframes;\n        var _a = this.timings, delay = _a.delay, duration = _a.duration, easing = _a.easing;\n        if (this._stretchStartingKeyframe && delay) {\n            var /** @type {?} */ newKeyframes = [];\n            var /** @type {?} */ totalTime = duration + delay;\n            var /** @type {?} */ startingGap = delay / totalTime;\n            // the original starting keyframe now starts once the delay is done\n            var /** @type {?} */ newFirstKeyframe = copyStyles(keyframes[0], false);\n            newFirstKeyframe['offset'] = 0;\n            newKeyframes.push(newFirstKeyframe);\n            var /** @type {?} */ oldFirstKeyframe = copyStyles(keyframes[0], false);\n            oldFirstKeyframe['offset'] = roundOffset(startingGap);\n            newKeyframes.push(oldFirstKeyframe);\n            /*\n                    When the keyframe is stretched then it means that the delay before the animation\n                    starts is gone. Instead the first keyframe is placed at the start of the animation\n                    and it is then copied to where it starts when the original delay is over. This basically\n                    means nothing animates during that delay, but the styles are still renderered. For this\n                    to work the original offset values that exist in the original keyframes must be \"warped\"\n                    so that they can take the new keyframe + delay into account.\n            \n                    delay=1000, duration=1000, keyframes = 0 .5 1\n            \n                    turns into\n            \n                    delay=0, duration=2000, keyframes = 0 .33 .66 1\n                   */\n            // offsets between 1 ... n -1 are all warped by the keyframe stretch\n            var /** @type {?} */ limit = keyframes.length - 1;\n            for (var /** @type {?} */ i = 1; i <= limit; i++) {\n                var /** @type {?} */ kf = copyStyles(keyframes[i], false);\n                var /** @type {?} */ oldOffset = /** @type {?} */ (kf['offset']);\n                var /** @type {?} */ timeAtKeyframe = delay + oldOffset * duration;\n                kf['offset'] = roundOffset(timeAtKeyframe / totalTime);\n                newKeyframes.push(kf);\n            }\n            // the new starting keyframe should be added at the start\n            duration = totalTime;\n            delay = 0;\n            easing = '';\n            keyframes = newKeyframes;\n        }\n        return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing, true);\n    };\n    return SubTimelineBuilder;\n}(TimelineBuilder));\n/**\n * @param {?} offset\n * @param {?=} decimalPoints\n * @return {?}\n */\nfunction roundOffset(offset, decimalPoints) {\n    if (decimalPoints === void 0) { decimalPoints = 3; }\n    var /** @type {?} */ mult = Math.pow(10, decimalPoints - 1);\n    return Math.round(offset * mult) / mult;\n}\n/**\n * @param {?} input\n * @param {?} allStyles\n * @return {?}\n */\nfunction flattenStyles(input, allStyles) {\n    var /** @type {?} */ styles = {};\n    var /** @type {?} */ allProperties;\n    input.forEach(function (token) {\n        if (token === '*') {\n            allProperties = allProperties || Object.keys(allStyles);\n            allProperties.forEach(function (prop) { styles[prop] = __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"a\" /* AUTO_STYLE */]; });\n        }\n        else {\n            copyStyles(/** @type {?} */ (token), false, styles);\n        }\n    });\n    return styles;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Animation = /** @class */ (function () {\n    function Animation(_driver, input) {\n        this._driver = _driver;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = buildAnimationAst(_driver, input, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation validation failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        this._animationAst = ast;\n    }\n    /**\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} destinationStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    Animation.prototype.buildTimelines = /**\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} destinationStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    function (element, startingStyles, destinationStyles, options, subInstructions) {\n        var /** @type {?} */ start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) : /** @type {?} */ (startingStyles);\n        var /** @type {?} */ dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) : /** @type {?} */ (destinationStyles);\n        var /** @type {?} */ errors = [];\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ result = buildAnimationTimelines(this._driver, element, this._animationAst, ENTER_CLASSNAME, LEAVE_CLASSNAME, start, dest, options, subInstructions, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation building failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        return result;\n    };\n    return Animation;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationStyleNormalizer = /** @class */ (function () {\n    function AnimationStyleNormalizer() {\n    }\n    return AnimationStyleNormalizer;\n}());\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationStyleNormalizer = /** @class */ (function () {\n    function NoopAnimationStyleNormalizer() {\n    }\n    /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    NoopAnimationStyleNormalizer.prototype.normalizePropertyName = /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    function (propertyName, errors) { return propertyName; };\n    /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    NoopAnimationStyleNormalizer.prototype.normalizeStyleValue = /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    function (userProvidedProperty, normalizedProperty, value, errors) {\n        return /** @type {?} */ (value);\n    };\n    return NoopAnimationStyleNormalizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar WebAnimationsStyleNormalizer = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebAnimationsStyleNormalizer, _super);\n    function WebAnimationsStyleNormalizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizePropertyName = /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    function (propertyName, errors) {\n        return dashCaseToCamelCase(propertyName);\n    };\n    /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizeStyleValue = /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    function (userProvidedProperty, normalizedProperty, value, errors) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = value.toString().trim();\n        if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n            if (typeof value === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errors.push(\"Please provide a CSS unit value for \" + userProvidedProperty + \":\" + value);\n                }\n            }\n        }\n        return strVal + unit;\n    };\n    return WebAnimationsStyleNormalizer;\n}(AnimationStyleNormalizer));\nvar DIMENSIONAL_PROP_MAP = makeBooleanMap('width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'\n    .split(','));\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction makeBooleanMap(keys) {\n    var /** @type {?} */ map = {};\n    keys.forEach(function (key) { return map[key] = true; });\n    return map;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?} isRemovalTransition\n * @param {?} fromStyles\n * @param {?} toStyles\n * @param {?} timelines\n * @param {?} queriedElements\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?=} errors\n * @return {?}\n */\nfunction createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps, errors) {\n    return {\n        type: 0 /* TransitionAnimation */,\n        element: element,\n        triggerName: triggerName,\n        isRemovalTransition: isRemovalTransition,\n        fromState: fromState,\n        fromStyles: fromStyles,\n        toState: toState,\n        toStyles: toStyles,\n        timelines: timelines,\n        queriedElements: queriedElements,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps,\n        errors: errors\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_OBJECT = {};\nvar AnimationTransitionFactory = /** @class */ (function () {\n    function AnimationTransitionFactory(_triggerName, ast, _stateStyles) {\n        this._triggerName = _triggerName;\n        this.ast = ast;\n        this._stateStyles = _stateStyles;\n    }\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.match = /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    function (currentState, nextState) {\n        return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState);\n    };\n    /**\n     * @param {?} stateName\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.buildStyles = /**\n     * @param {?} stateName\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    function (stateName, params, errors) {\n        var /** @type {?} */ backupStateStyler = this._stateStyles['*'];\n        var /** @type {?} */ stateStyler = this._stateStyles[stateName];\n        var /** @type {?} */ backupStyles = backupStateStyler ? backupStateStyler.buildStyles(params, errors) : {};\n        return stateStyler ? stateStyler.buildStyles(params, errors) : backupStyles;\n    };\n    /**\n     * @param {?} driver\n     * @param {?} element\n     * @param {?} currentState\n     * @param {?} nextState\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?=} currentOptions\n     * @param {?=} nextOptions\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.build = /**\n     * @param {?} driver\n     * @param {?} element\n     * @param {?} currentState\n     * @param {?} nextState\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?=} currentOptions\n     * @param {?=} nextOptions\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    function (driver, element, currentState, nextState, enterClassName, leaveClassName, currentOptions, nextOptions, subInstructions) {\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ transitionAnimationParams = this.ast.options && this.ast.options.params || EMPTY_OBJECT;\n        var /** @type {?} */ currentAnimationParams = currentOptions && currentOptions.params || EMPTY_OBJECT;\n        var /** @type {?} */ currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);\n        var /** @type {?} */ nextAnimationParams = nextOptions && nextOptions.params || EMPTY_OBJECT;\n        var /** @type {?} */ nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);\n        var /** @type {?} */ queriedElements = new Set();\n        var /** @type {?} */ preStyleMap = new Map();\n        var /** @type {?} */ postStyleMap = new Map();\n        var /** @type {?} */ isRemoval = nextState === 'void';\n        var /** @type {?} */ animationOptions = { params: Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __assign */])({}, transitionAnimationParams, nextAnimationParams) };\n        var /** @type {?} */ timelines = buildAnimationTimelines(driver, element, this.ast.animation, enterClassName, leaveClassName, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);\n        if (errors.length) {\n            return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, [], [], preStyleMap, postStyleMap, errors);\n        }\n        timelines.forEach(function (tl) {\n            var /** @type {?} */ elm = tl.element;\n            var /** @type {?} */ preProps = getOrSetAsInMap(preStyleMap, elm, {});\n            tl.preStyleProps.forEach(function (prop) { return preProps[prop] = true; });\n            var /** @type {?} */ postProps = getOrSetAsInMap(postStyleMap, elm, {});\n            tl.postStyleProps.forEach(function (prop) { return postProps[prop] = true; });\n            if (elm !== element) {\n                queriedElements.add(elm);\n            }\n        });\n        var /** @type {?} */ queriedElementsList = iteratorToArray(queriedElements.values());\n        return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, timelines, queriedElementsList, preStyleMap, postStyleMap);\n    };\n    return AnimationTransitionFactory;\n}());\n/**\n * @param {?} matchFns\n * @param {?} currentState\n * @param {?} nextState\n * @return {?}\n */\nfunction oneOrMoreTransitionsMatch(matchFns, currentState, nextState) {\n    return matchFns.some(function (fn) { return fn(currentState, nextState); });\n}\nvar AnimationStateStyles = /** @class */ (function () {\n    function AnimationStateStyles(styles, defaultParams) {\n        this.styles = styles;\n        this.defaultParams = defaultParams;\n    }\n    /**\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationStateStyles.prototype.buildStyles = /**\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    function (params, errors) {\n        var /** @type {?} */ finalStyles = {};\n        var /** @type {?} */ combinedParams = copyObj(this.defaultParams);\n        Object.keys(params).forEach(function (key) {\n            var /** @type {?} */ value = params[key];\n            if (value != null) {\n                combinedParams[key] = value;\n            }\n        });\n        this.styles.styles.forEach(function (value) {\n            if (typeof value !== 'string') {\n                var /** @type {?} */ styleObj_1 = /** @type {?} */ (value);\n                Object.keys(styleObj_1).forEach(function (prop) {\n                    var /** @type {?} */ val = styleObj_1[prop];\n                    if (val.length > 1) {\n                        val = interpolateParams(val, combinedParams, errors);\n                    }\n                    finalStyles[prop] = val;\n                });\n            }\n        });\n        return finalStyles;\n    };\n    return AnimationStateStyles;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} ast\n * @return {?}\n */\nfunction buildTrigger(name, ast) {\n    return new AnimationTrigger(name, ast);\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AnimationTrigger = /** @class */ (function () {\n    function AnimationTrigger(name, ast) {\n        var _this = this;\n        this.name = name;\n        this.ast = ast;\n        this.transitionFactories = [];\n        this.states = {};\n        ast.states.forEach(function (ast) {\n            var /** @type {?} */ defaultParams = (ast.options && ast.options.params) || {};\n            _this.states[ast.name] = new AnimationStateStyles(ast.style, defaultParams);\n        });\n        balanceProperties(this.states, 'true', '1');\n        balanceProperties(this.states, 'false', '0');\n        ast.transitions.forEach(function (ast) {\n            _this.transitionFactories.push(new AnimationTransitionFactory(name, ast, _this.states));\n        });\n        this.fallbackTransition = createFallbackTransition(name, this.states);\n    }\n    Object.defineProperty(AnimationTrigger.prototype, \"containsQueries\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.ast.queryCount > 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTrigger.prototype.matchTransition = /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    function (currentState, nextState) {\n        var /** @type {?} */ entry = this.transitionFactories.find(function (f) { return f.match(currentState, nextState); });\n        return entry || null;\n    };\n    /**\n     * @param {?} currentState\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTrigger.prototype.matchStyles = /**\n     * @param {?} currentState\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    function (currentState, params, errors) {\n        return this.fallbackTransition.buildStyles(currentState, params, errors);\n    };\n    return AnimationTrigger;\n}());\n/**\n * @param {?} triggerName\n * @param {?} states\n * @return {?}\n */\nfunction createFallbackTransition(triggerName, states) {\n    var /** @type {?} */ matchers = [function (fromState, toState) { return true; }];\n    var /** @type {?} */ animation = { type: 2 /* Sequence */, steps: [], options: null };\n    var /** @type {?} */ transition = {\n        type: 1 /* Transition */,\n        animation: animation,\n        matchers: matchers,\n        options: null,\n        queryCount: 0,\n        depCount: 0\n    };\n    return new AnimationTransitionFactory(triggerName, transition, states);\n}\n/**\n * @param {?} obj\n * @param {?} key1\n * @param {?} key2\n * @return {?}\n */\nfunction balanceProperties(obj, key1, key2) {\n    if (obj.hasOwnProperty(key1)) {\n        if (!obj.hasOwnProperty(key2)) {\n            obj[key2] = obj[key1];\n        }\n    }\n    else if (obj.hasOwnProperty(key2)) {\n        obj[key1] = obj[key2];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\nvar TimelineAnimationEngine = /** @class */ (function () {\n    function TimelineAnimationEngine(_driver, _normalizer) {\n        this._driver = _driver;\n        this._normalizer = _normalizer;\n        this._animations = {};\n        this._playersById = {};\n        this.players = [];\n    }\n    /**\n     * @param {?} id\n     * @param {?} metadata\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.register = /**\n     * @param {?} id\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (id, metadata) {\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = buildAnimationAst(this._driver, metadata, errors);\n        if (errors.length) {\n            throw new Error(\"Unable to build the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        else {\n            this._animations[id] = ast;\n        }\n    };\n    /**\n     * @param {?} i\n     * @param {?} preStyles\n     * @param {?=} postStyles\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._buildPlayer = /**\n     * @param {?} i\n     * @param {?} preStyles\n     * @param {?=} postStyles\n     * @return {?}\n     */\n    function (i, preStyles, postStyles) {\n        var /** @type {?} */ element = i.element;\n        var /** @type {?} */ keyframes = normalizeKeyframes(this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n        return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, []);\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.create = /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    function (id, element, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = this._animations[id];\n        var /** @type {?} */ instructions;\n        var /** @type {?} */ autoStylesMap = new Map();\n        if (ast) {\n            instructions = buildAnimationTimelines(this._driver, element, ast, ENTER_CLASSNAME, LEAVE_CLASSNAME, {}, {}, options, EMPTY_INSTRUCTION_MAP, errors);\n            instructions.forEach(function (inst) {\n                var /** @type {?} */ styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n                inst.postStyleProps.forEach(function (prop) { return styles[prop] = null; });\n            });\n        }\n        else {\n            errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n            instructions = [];\n        }\n        if (errors.length) {\n            throw new Error(\"Unable to create the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        autoStylesMap.forEach(function (styles, element) {\n            Object.keys(styles).forEach(function (prop) { styles[prop] = _this._driver.computeStyle(element, prop, __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"a\" /* AUTO_STYLE */]); });\n        });\n        var /** @type {?} */ players = instructions.map(function (i) {\n            var /** @type {?} */ styles = autoStylesMap.get(i.element);\n            return _this._buildPlayer(i, {}, styles);\n        });\n        var /** @type {?} */ player = optimizeGroupPlayer(players);\n        this._playersById[id] = player;\n        player.onDestroy(function () { return _this.destroy(id); });\n        this.players.push(player);\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.destroy = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        var /** @type {?} */ player = this._getPlayer(id);\n        player.destroy();\n        delete this._playersById[id];\n        var /** @type {?} */ index = this.players.indexOf(player);\n        if (index >= 0) {\n            this.players.splice(index, 1);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._getPlayer = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        var /** @type {?} */ player = this._playersById[id];\n        if (!player) {\n            throw new Error(\"Unable to find the timeline player referenced by \" + id);\n        }\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.listen = /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (id, element, eventName, callback) {\n        // triggerName, fromState, toState are all ignored for timeline animations\n        var /** @type {?} */ baseEvent = makeAnimationEvent(element, '', '', '');\n        listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n        return function () { };\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} command\n     * @param {?} args\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.command = /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} command\n     * @param {?} args\n     * @return {?}\n     */\n    function (id, element, command, args) {\n        if (command == 'register') {\n            this.register(id, /** @type {?} */ (args[0]));\n            return;\n        }\n        if (command == 'create') {\n            var /** @type {?} */ options = /** @type {?} */ ((args[0] || {}));\n            this.create(id, element, options);\n            return;\n        }\n        var /** @type {?} */ player = this._getPlayer(id);\n        switch (command) {\n            case 'play':\n                player.play();\n                break;\n            case 'pause':\n                player.pause();\n                break;\n            case 'reset':\n                player.reset();\n                break;\n            case 'restart':\n                player.restart();\n                break;\n            case 'finish':\n                player.finish();\n                break;\n            case 'init':\n                player.init();\n                break;\n            case 'setPosition':\n                player.setPosition(parseFloat(/** @type {?} */ (args[0])));\n                break;\n            case 'destroy':\n                this.destroy(id);\n                break;\n        }\n    };\n    return TimelineAnimationEngine;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUEUED_CLASSNAME = 'ng-animate-queued';\nvar QUEUED_SELECTOR = '.ng-animate-queued';\nvar DISABLED_CLASSNAME = 'ng-animate-disabled';\nvar DISABLED_SELECTOR = '.ng-animate-disabled';\nvar STAR_CLASSNAME = 'ng-star-inserted';\nvar STAR_SELECTOR = '.ng-star-inserted';\nvar EMPTY_PLAYER_ARRAY = [];\nvar NULL_REMOVAL_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: false\n};\nvar NULL_REMOVED_QUERIED_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: true\n};\n/**\n * @record\n */\n\nvar REMOVAL_FLAG = '__ng_removed';\n/**\n * @record\n */\n\nvar StateValue = /** @class */ (function () {\n    function StateValue(input, namespaceId) {\n        if (namespaceId === void 0) { namespaceId = ''; }\n        this.namespaceId = namespaceId;\n        var /** @type {?} */ isObj = input && input.hasOwnProperty('value');\n        var /** @type {?} */ value = isObj ? input['value'] : input;\n        this.value = normalizeTriggerValue(value);\n        if (isObj) {\n            var /** @type {?} */ options = copyObj(/** @type {?} */ (input));\n            delete options['value'];\n            this.options = /** @type {?} */ (options);\n        }\n        else {\n            this.options = {};\n        }\n        if (!this.options.params) {\n            this.options.params = {};\n        }\n    }\n    Object.defineProperty(StateValue.prototype, \"params\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this.options.params); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    StateValue.prototype.absorbOptions = /**\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        var /** @type {?} */ newParams = options.params;\n        if (newParams) {\n            var /** @type {?} */ oldParams_1 = /** @type {?} */ ((this.options.params));\n            Object.keys(newParams).forEach(function (prop) {\n                if (oldParams_1[prop] == null) {\n                    oldParams_1[prop] = newParams[prop];\n                }\n            });\n        }\n    };\n    return StateValue;\n}());\nvar VOID_VALUE = 'void';\nvar DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\nvar DELETED_STATE_VALUE = new StateValue('DELETED');\nvar AnimationTransitionNamespace = /** @class */ (function () {\n    function AnimationTransitionNamespace(id, hostElement, _engine) {\n        this.id = id;\n        this.hostElement = hostElement;\n        this._engine = _engine;\n        this.players = [];\n        this._triggers = {};\n        this._queue = [];\n        this._elementListeners = new Map();\n        this._hostClassName = 'ng-tns-' + id;\n        addClass(hostElement, this._hostClassName);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.listen = /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    function (element, name, phase, callback) {\n        var _this = this;\n        if (!this._triggers.hasOwnProperty(name)) {\n            throw new Error(\"Unable to listen on the animation trigger event \\\"\" + phase + \"\\\" because the animation trigger \\\"\" + name + \"\\\" doesn't exist!\");\n        }\n        if (phase == null || phase.length == 0) {\n            throw new Error(\"Unable to listen on the animation trigger \\\"\" + name + \"\\\" because the provided event is undefined!\");\n        }\n        if (!isTriggerEventValid(phase)) {\n            throw new Error(\"The provided animation trigger event \\\"\" + phase + \"\\\" for the animation trigger \\\"\" + name + \"\\\" is not supported!\");\n        }\n        var /** @type {?} */ listeners = getOrSetAsInMap(this._elementListeners, element, []);\n        var /** @type {?} */ data = { name: name, phase: phase, callback: callback };\n        listeners.push(data);\n        var /** @type {?} */ triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n        if (!triggersWithStates.hasOwnProperty(name)) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n            triggersWithStates[name] = DEFAULT_STATE_VALUE;\n        }\n        return function () {\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            _this._engine.afterFlush(function () {\n                var /** @type {?} */ index = listeners.indexOf(data);\n                if (index >= 0) {\n                    listeners.splice(index, 1);\n                }\n                if (!_this._triggers[name]) {\n                    delete triggersWithStates[name];\n                }\n            });\n        };\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.register = /**\n     * @param {?} name\n     * @param {?} ast\n     * @return {?}\n     */\n    function (name, ast) {\n        if (this._triggers[name]) {\n            // throw\n            return false;\n        }\n        else {\n            this._triggers[name] = ast;\n            return true;\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._getTrigger = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ trigger = this._triggers[name];\n        if (!trigger) {\n            throw new Error(\"The provided animation trigger \\\"\" + name + \"\\\" has not been registered!\");\n        }\n        return trigger;\n    };\n    /**\n     * @param {?} element\n     * @param {?} triggerName\n     * @param {?} value\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.trigger = /**\n     * @param {?} element\n     * @param {?} triggerName\n     * @param {?} value\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    function (element, triggerName, value, defaultToFallback) {\n        var _this = this;\n        if (defaultToFallback === void 0) { defaultToFallback = true; }\n        var /** @type {?} */ trigger = this._getTrigger(triggerName);\n        var /** @type {?} */ player = new TransitionAnimationPlayer(this.id, triggerName, element);\n        var /** @type {?} */ triggersWithStates = this._engine.statesByElement.get(element);\n        if (!triggersWithStates) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n            this._engine.statesByElement.set(element, triggersWithStates = {});\n        }\n        var /** @type {?} */ fromState = triggersWithStates[triggerName];\n        var /** @type {?} */ toState = new StateValue(value, this.id);\n        var /** @type {?} */ isObj = value && value.hasOwnProperty('value');\n        if (!isObj && fromState) {\n            toState.absorbOptions(fromState.options);\n        }\n        triggersWithStates[triggerName] = toState;\n        if (!fromState) {\n            fromState = DEFAULT_STATE_VALUE;\n        }\n        else if (fromState === DELETED_STATE_VALUE) {\n            return player;\n        }\n        var /** @type {?} */ isRemoval = toState.value === VOID_VALUE;\n        // normally this isn't reached by here, however, if an object expression\n        // is passed in then it may be a new object each time. Comparing the value\n        // is important since that will stay the same despite there being a new object.\n        // The removal arc here is special cased because the same element is triggered\n        // twice in the event that it contains animations on the outer/inner portions\n        // of the host container\n        if (!isRemoval && fromState.value === toState.value) {\n            // this means that despite the value not changing, some inner params\n            // have changed which means that the animation final styles need to be applied\n            if (!objEquals(fromState.params, toState.params)) {\n                var /** @type {?} */ errors = [];\n                var /** @type {?} */ fromStyles_1 = trigger.matchStyles(fromState.value, fromState.params, errors);\n                var /** @type {?} */ toStyles_1 = trigger.matchStyles(toState.value, toState.params, errors);\n                if (errors.length) {\n                    this._engine.reportError(errors);\n                }\n                else {\n                    this._engine.afterFlush(function () {\n                        eraseStyles(element, fromStyles_1);\n                        setStyles(element, toStyles_1);\n                    });\n                }\n            }\n            return;\n        }\n        var /** @type {?} */ playersOnElement = getOrSetAsInMap(this._engine.playersByElement, element, []);\n        playersOnElement.forEach(function (player) {\n            // only remove the player if it is queued on the EXACT same trigger/namespace\n            // we only also deal with queued players here because if the animation has\n            // started then we want to keep the player alive until the flush happens\n            // (which is where the previousPlayers are passed into the new palyer)\n            if (player.namespaceId == _this.id && player.triggerName == triggerName && player.queued) {\n                player.destroy();\n            }\n        });\n        var /** @type {?} */ transition = trigger.matchTransition(fromState.value, toState.value);\n        var /** @type {?} */ isFallbackTransition = false;\n        if (!transition) {\n            if (!defaultToFallback)\n                return;\n            transition = trigger.fallbackTransition;\n            isFallbackTransition = true;\n        }\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({ element: element, triggerName: triggerName, transition: transition, fromState: fromState, toState: toState, player: player, isFallbackTransition: isFallbackTransition });\n        if (!isFallbackTransition) {\n            addClass(element, QUEUED_CLASSNAME);\n            player.onStart(function () { removeClass(element, QUEUED_CLASSNAME); });\n        }\n        player.onDone(function () {\n            var /** @type {?} */ index = _this.players.indexOf(player);\n            if (index >= 0) {\n                _this.players.splice(index, 1);\n            }\n            var /** @type {?} */ players = _this._engine.playersByElement.get(element);\n            if (players) {\n                var /** @type {?} */ index_1 = players.indexOf(player);\n                if (index_1 >= 0) {\n                    players.splice(index_1, 1);\n                }\n            }\n        });\n        this.players.push(player);\n        playersOnElement.push(player);\n        return player;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.deregister = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var _this = this;\n        delete this._triggers[name];\n        this._engine.statesByElement.forEach(function (stateMap, element) { delete stateMap[name]; });\n        this._elementListeners.forEach(function (listeners, element) {\n            _this._elementListeners.set(element, listeners.filter(function (entry) { return entry.name != name; }));\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.clearElementCache = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        this._engine.statesByElement.delete(element);\n        this._elementListeners.delete(element);\n        var /** @type {?} */ elementPlayers = this._engine.playersByElement.get(element);\n        if (elementPlayers) {\n            elementPlayers.forEach(function (player) { return player.destroy(); });\n            this._engine.playersByElement.delete(element);\n        }\n    };\n    /**\n     * @param {?} rootElement\n     * @param {?} context\n     * @param {?=} animate\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._signalRemovalForInnerTriggers = /**\n     * @param {?} rootElement\n     * @param {?} context\n     * @param {?=} animate\n     * @return {?}\n     */\n    function (rootElement, context, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = false; }\n        // emulate a leave animation for all inner nodes within this node.\n        // If there are no animations found for any of the nodes then clear the cache\n        // for the element.\n        this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true).forEach(function (elm) {\n            // this means that an inner remove() operation has already kicked off\n            // the animation on this element...\n            if (elm[REMOVAL_FLAG])\n                return;\n            var /** @type {?} */ namespaces = _this._engine.fetchNamespacesByElement(elm);\n            if (namespaces.size) {\n                namespaces.forEach(function (ns) { return ns.triggerLeaveAnimation(elm, context, false, true); });\n            }\n            else {\n                _this.clearElementCache(elm);\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} destroyAfterComplete\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.triggerLeaveAnimation = /**\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} destroyAfterComplete\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    function (element, context, destroyAfterComplete, defaultToFallback) {\n        var _this = this;\n        var /** @type {?} */ triggerStates = this._engine.statesByElement.get(element);\n        if (triggerStates) {\n            var /** @type {?} */ players_1 = [];\n            Object.keys(triggerStates).forEach(function (triggerName) {\n                // this check is here in the event that an element is removed\n                // twice (both on the host level and the component level)\n                if (_this._triggers[triggerName]) {\n                    var /** @type {?} */ player = _this.trigger(element, triggerName, VOID_VALUE, defaultToFallback);\n                    if (player) {\n                        players_1.push(player);\n                    }\n                }\n            });\n            if (players_1.length) {\n                this._engine.markElementAsRemoved(this.id, element, true, context);\n                if (destroyAfterComplete) {\n                    optimizeGroupPlayer(players_1).onDone(function () { return _this._engine.processLeaveNode(element); });\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.prepareLeaveAnimationListeners = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        var /** @type {?} */ listeners = this._elementListeners.get(element);\n        if (listeners) {\n            var /** @type {?} */ visitedTriggers_1 = new Set();\n            listeners.forEach(function (listener) {\n                var /** @type {?} */ triggerName = listener.name;\n                if (visitedTriggers_1.has(triggerName))\n                    return;\n                visitedTriggers_1.add(triggerName);\n                var /** @type {?} */ trigger = _this._triggers[triggerName];\n                var /** @type {?} */ transition = trigger.fallbackTransition;\n                var /** @type {?} */ elementStates = /** @type {?} */ ((_this._engine.statesByElement.get(element)));\n                var /** @type {?} */ fromState = elementStates[triggerName] || DEFAULT_STATE_VALUE;\n                var /** @type {?} */ toState = new StateValue(VOID_VALUE);\n                var /** @type {?} */ player = new TransitionAnimationPlayer(_this.id, triggerName, element);\n                _this._engine.totalQueuedPlayers++;\n                _this._queue.push({\n                    element: element,\n                    triggerName: triggerName,\n                    transition: transition,\n                    fromState: fromState,\n                    toState: toState,\n                    player: player,\n                    isFallbackTransition: true\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.removeNode = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        var _this = this;\n        var /** @type {?} */ engine = this._engine;\n        if (element.childElementCount) {\n            this._signalRemovalForInnerTriggers(element, context, true);\n        }\n        // this means that a * => VOID animation was detected and kicked off\n        if (this.triggerLeaveAnimation(element, context, true))\n            return;\n        // find the player that is animating and make sure that the\n        // removal is delayed until that player has completed\n        var /** @type {?} */ containsPotentialParentTransition = false;\n        if (engine.totalAnimations) {\n            var /** @type {?} */ currentPlayers = engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n            // when this `if statement` does not continue forward it means that\n            // a previous animation query has selected the current element and\n            // is animating it. In this situation want to continue fowards and\n            // allow the element to be queued up for animation later.\n            if (currentPlayers && currentPlayers.length) {\n                containsPotentialParentTransition = true;\n            }\n            else {\n                var /** @type {?} */ parent_1 = element;\n                while (parent_1 = parent_1.parentNode) {\n                    var /** @type {?} */ triggers = engine.statesByElement.get(parent_1);\n                    if (triggers) {\n                        containsPotentialParentTransition = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // at this stage we know that the element will either get removed\n        // during flush or will be picked up by a parent query. Either way\n        // we need to fire the listeners for this element when it DOES get\n        // removed (once the query parent animation is done or after flush)\n        this.prepareLeaveAnimationListeners(element);\n        // whether or not a parent has an animation we need to delay the deferral of the leave\n        // operation until we have more information (which we do after flush() has been called)\n        if (containsPotentialParentTransition) {\n            engine.markElementAsRemoved(this.id, element, false, context);\n        }\n        else {\n            // we do this after the flush has occurred such\n            // that the callbacks can be fired\n            engine.afterFlush(function () { return _this.clearElementCache(element); });\n            engine.destroyInnerAnimations(element);\n            engine._onRemovalComplete(element, context);\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.insertNode = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) { addClass(element, this._hostClassName); };\n    /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.drainQueuedTransitions = /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    function (microtaskId) {\n        var _this = this;\n        var /** @type {?} */ instructions = [];\n        this._queue.forEach(function (entry) {\n            var /** @type {?} */ player = entry.player;\n            if (player.destroyed)\n                return;\n            var /** @type {?} */ element = entry.element;\n            var /** @type {?} */ listeners = _this._elementListeners.get(element);\n            if (listeners) {\n                listeners.forEach(function (listener) {\n                    if (listener.name == entry.triggerName) {\n                        var /** @type {?} */ baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);\n                        (/** @type {?} */ (baseEvent))['_data'] = microtaskId;\n                        listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n                    }\n                });\n            }\n            if (player.markedForDestroy) {\n                _this._engine.afterFlush(function () {\n                    // now we can destroy the element properly since the event listeners have\n                    // been bound to the player\n                    player.destroy();\n                });\n            }\n            else {\n                instructions.push(entry);\n            }\n        });\n        this._queue = [];\n        return instructions.sort(function (a, b) {\n            // if depCount == 0 them move to front\n            // otherwise if a contains b then move back\n            var /** @type {?} */ d0 = a.transition.ast.depCount;\n            var /** @type {?} */ d1 = b.transition.ast.depCount;\n            if (d0 == 0 || d1 == 0) {\n                return d0 - d1;\n            }\n            return _this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n        });\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.destroy = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        this.players.forEach(function (p) { return p.destroy(); });\n        this._signalRemovalForInnerTriggers(this.hostElement, context);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.elementContainsData = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ containsData = false;\n        if (this._elementListeners.has(element))\n            containsData = true;\n        containsData =\n            (this._queue.find(function (entry) { return entry.element === element; }) ? true : false) || containsData;\n        return containsData;\n    };\n    return AnimationTransitionNamespace;\n}());\n/**\n * @record\n */\n\nvar TransitionAnimationEngine = /** @class */ (function () {\n    function TransitionAnimationEngine(driver, _normalizer) {\n        this.driver = driver;\n        this._normalizer = _normalizer;\n        this.players = [];\n        this.newHostElements = new Map();\n        this.playersByElement = new Map();\n        this.playersByQueriedElement = new Map();\n        this.statesByElement = new Map();\n        this.disabledNodes = new Set();\n        this.totalAnimations = 0;\n        this.totalQueuedPlayers = 0;\n        this._namespaceLookup = {};\n        this._namespaceList = [];\n        this._flushFns = [];\n        this._whenQuietFns = [];\n        this.namespacesByHostElement = new Map();\n        this.collectedEnterElements = [];\n        this.collectedLeaveElements = [];\n        this.onRemovalComplete = function (element, context) { };\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._onRemovalComplete = /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) { this.onRemovalComplete(element, context); };\n    Object.defineProperty(TransitionAnimationEngine.prototype, \"queuedPlayers\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ players = [];\n            this._namespaceList.forEach(function (ns) {\n                ns.players.forEach(function (player) {\n                    if (player.queued) {\n                        players.push(player);\n                    }\n                });\n            });\n            return players;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.createNamespace = /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n        if (hostElement.parentNode) {\n            this._balanceNamespaceList(ns, hostElement);\n        }\n        else {\n            // defer this later until flush during when the host element has\n            // been inserted so that we know exactly where to place it in\n            // the namespace list\n            this.newHostElements.set(hostElement, ns);\n            // given that this host element is apart of the animation code, it\n            // may or may not be inserted by a parent node that is an of an\n            // animation renderer type. If this happens then we can still have\n            // access to this item when we query for :enter nodes. If the parent\n            // is a renderer then the set data-structure will normalize the entry\n            this.collectEnterElement(hostElement);\n        }\n        return this._namespaceLookup[namespaceId] = ns;\n    };\n    /**\n     * @param {?} ns\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._balanceNamespaceList = /**\n     * @param {?} ns\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (ns, hostElement) {\n        var /** @type {?} */ limit = this._namespaceList.length - 1;\n        if (limit >= 0) {\n            var /** @type {?} */ found = false;\n            for (var /** @type {?} */ i = limit; i >= 0; i--) {\n                var /** @type {?} */ nextNamespace = this._namespaceList[i];\n                if (this.driver.containsElement(nextNamespace.hostElement, hostElement)) {\n                    this._namespaceList.splice(i + 1, 0, ns);\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                this._namespaceList.splice(0, 0, ns);\n            }\n        }\n        else {\n            this._namespaceList.push(ns);\n        }\n        this.namespacesByHostElement.set(hostElement, ns);\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.register = /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (!ns) {\n            ns = this.createNamespace(namespaceId, hostElement);\n        }\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} name\n     * @param {?} trigger\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.registerTrigger = /**\n     * @param {?} namespaceId\n     * @param {?} name\n     * @param {?} trigger\n     * @return {?}\n     */\n    function (namespaceId, name, trigger) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (ns && ns.register(name, trigger)) {\n            this.totalAnimations++;\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroy = /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, context) {\n        var _this = this;\n        if (!namespaceId)\n            return;\n        var /** @type {?} */ ns = this._fetchNamespace(namespaceId);\n        this.afterFlush(function () {\n            _this.namespacesByHostElement.delete(ns.hostElement);\n            delete _this._namespaceLookup[namespaceId];\n            var /** @type {?} */ index = _this._namespaceList.indexOf(ns);\n            if (index >= 0) {\n                _this._namespaceList.splice(index, 1);\n            }\n        });\n        this.afterFlushAnimationsDone(function () { return ns.destroy(context); });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._fetchNamespace = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) { return this._namespaceLookup[id]; };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.fetchNamespacesByElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        // normally there should only be one namespace per element, however\n        // if @triggers are placed on both the component element and then\n        // its host element (within the component code) then there will be\n        // two namespaces returned. We use a set here to simply the dedupe\n        // of namespaces incase there are multiple triggers both the elm and host\n        var /** @type {?} */ namespaces = new Set();\n        var /** @type {?} */ elementStates = this.statesByElement.get(element);\n        if (elementStates) {\n            var /** @type {?} */ keys = Object.keys(elementStates);\n            for (var /** @type {?} */ i = 0; i < keys.length; i++) {\n                var /** @type {?} */ nsId = elementStates[keys[i]].namespaceId;\n                if (nsId) {\n                    var /** @type {?} */ ns = this._fetchNamespace(nsId);\n                    if (ns) {\n                        namespaces.add(ns);\n                    }\n                }\n            }\n        }\n        return namespaces;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.trigger = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (namespaceId, element, name, value) {\n        if (isElementNode(element)) {\n            this._fetchNamespace(namespaceId).trigger(element, name, value);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.insertNode = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    function (namespaceId, element, parent, insertBefore) {\n        if (!isElementNode(element))\n            return;\n        // special case for when an element is removed and reinserted (move operation)\n        // when this occurs we do not want to use the element for deletion later\n        var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            details.setForRemoval = false;\n        }\n        // in the event that the namespaceId is blank then the caller\n        // code does not contain any animation code in it, but it is\n        // just being called so that the node is marked as being inserted\n        if (namespaceId) {\n            var /** @type {?} */ ns = this._fetchNamespace(namespaceId);\n            // This if-statement is a workaround for router issue #21947.\n            // The router sometimes hits a race condition where while a route\n            // is being instantiated a new navigation arrives, triggering leave\n            // animation of DOM that has not been fully initialized, until this\n            // is resolved, we need to handle the scenario when DOM is not in a\n            // consistent state during the animation.\n            if (ns) {\n                ns.insertNode(element, parent);\n            }\n        }\n        // only *directives and host elements are inserted before\n        if (insertBefore) {\n            this.collectEnterElement(element);\n        }\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.collectEnterElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { this.collectedEnterElements.push(element); };\n    /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.markElementAsDisabled = /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    function (element, value) {\n        if (value) {\n            if (!this.disabledNodes.has(element)) {\n                this.disabledNodes.add(element);\n                addClass(element, DISABLED_CLASSNAME);\n            }\n        }\n        else if (this.disabledNodes.has(element)) {\n            this.disabledNodes.delete(element);\n            removeClass(element, DISABLED_CLASSNAME);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.removeNode = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, element, context) {\n        if (!isElementNode(element)) {\n            this._onRemovalComplete(element, context);\n            return;\n        }\n        var /** @type {?} */ ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n        if (ns) {\n            ns.removeNode(element, context);\n        }\n        else {\n            this.markElementAsRemoved(namespaceId, element, false, context);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?=} hasAnimation\n     * @param {?=} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.markElementAsRemoved = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?=} hasAnimation\n     * @param {?=} context\n     * @return {?}\n     */\n    function (namespaceId, element, hasAnimation, context) {\n        this.collectedLeaveElements.push(element);\n        element[REMOVAL_FLAG] = {\n            namespaceId: namespaceId,\n            setForRemoval: context, hasAnimation: hasAnimation,\n            removedBeforeQueried: false\n        };\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.listen = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    function (namespaceId, element, name, phase, callback) {\n        if (isElementNode(element)) {\n            return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n        }\n        return function () { };\n    };\n    /**\n     * @param {?} entry\n     * @param {?} subTimelines\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildInstruction = /**\n     * @param {?} entry\n     * @param {?} subTimelines\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @return {?}\n     */\n    function (entry, subTimelines, enterClassName, leaveClassName) {\n        return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, enterClassName, leaveClassName, entry.fromState.options, entry.toState.options, subTimelines);\n    };\n    /**\n     * @param {?} containerElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroyInnerAnimations = /**\n     * @param {?} containerElement\n     * @return {?}\n     */\n    function (containerElement) {\n        var _this = this;\n        var /** @type {?} */ elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);\n        elements.forEach(function (element) { return _this.destroyActiveAnimationsForElement(element); });\n        if (this.playersByQueriedElement.size == 0)\n            return;\n        elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);\n        elements.forEach(function (element) { return _this.finishActiveQueriedAnimationOnElement(element); });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroyActiveAnimationsForElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ players = this.playersByElement.get(element);\n        if (players) {\n            players.forEach(function (player) {\n                // special case for when an element is set for destruction, but hasn't started.\n                // in this situation we want to delay the destruction until the flush occurs\n                // so that any event listeners attached to the player are triggered.\n                if (player.queued) {\n                    player.markedForDestroy = true;\n                }\n                else {\n                    player.destroy();\n                }\n            });\n        }\n        var /** @type {?} */ stateMap = this.statesByElement.get(element);\n        if (stateMap) {\n            Object.keys(stateMap).forEach(function (triggerName) { return stateMap[triggerName] = DELETED_STATE_VALUE; });\n        }\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.finishActiveQueriedAnimationOnElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ players = this.playersByQueriedElement.get(element);\n        if (players) {\n            players.forEach(function (player) { return player.finish(); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (_this.players.length) {\n                return optimizeGroupPlayer(_this.players).onDone(function () { return resolve(); });\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.processLeaveNode = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            // this will prevent it from removing it twice\n            element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n            if (details.namespaceId) {\n                this.destroyInnerAnimations(element);\n                var /** @type {?} */ ns = this._fetchNamespace(details.namespaceId);\n                if (ns) {\n                    ns.clearElementCache(element);\n                }\n            }\n            this._onRemovalComplete(element, details.setForRemoval);\n        }\n        if (this.driver.matchesElement(element, DISABLED_SELECTOR)) {\n            this.markElementAsDisabled(element, false);\n        }\n        this.driver.query(element, DISABLED_SELECTOR, true).forEach(function (node) {\n            _this.markElementAsDisabled(element, false);\n        });\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.flush = /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    function (microtaskId) {\n        var _this = this;\n        if (microtaskId === void 0) { microtaskId = -1; }\n        var /** @type {?} */ players = [];\n        if (this.newHostElements.size) {\n            this.newHostElements.forEach(function (ns, element) { return _this._balanceNamespaceList(ns, element); });\n            this.newHostElements.clear();\n        }\n        if (this.totalAnimations && this.collectedEnterElements.length) {\n            for (var /** @type {?} */ i = 0; i < this.collectedEnterElements.length; i++) {\n                var /** @type {?} */ elm = this.collectedEnterElements[i];\n                addClass(elm, STAR_CLASSNAME);\n            }\n        }\n        if (this._namespaceList.length &&\n            (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n            var /** @type {?} */ cleanupFns = [];\n            try {\n                players = this._flushAnimations(cleanupFns, microtaskId);\n            }\n            finally {\n                for (var /** @type {?} */ i = 0; i < cleanupFns.length; i++) {\n                    cleanupFns[i]();\n                }\n            }\n        }\n        else {\n            for (var /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n                var /** @type {?} */ element = this.collectedLeaveElements[i];\n                this.processLeaveNode(element);\n            }\n        }\n        this.totalQueuedPlayers = 0;\n        this.collectedEnterElements.length = 0;\n        this.collectedLeaveElements.length = 0;\n        this._flushFns.forEach(function (fn) { return fn(); });\n        this._flushFns = [];\n        if (this._whenQuietFns.length) {\n            // we move these over to a variable so that\n            // if any new callbacks are registered in another\n            // flush they do not populate the existing set\n            var /** @type {?} */ quietFns_1 = this._whenQuietFns;\n            this._whenQuietFns = [];\n            if (players.length) {\n                optimizeGroupPlayer(players).onDone(function () { quietFns_1.forEach(function (fn) { return fn(); }); });\n            }\n            else {\n                quietFns_1.forEach(function (fn) { return fn(); });\n            }\n        }\n    };\n    /**\n     * @param {?} errors\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.reportError = /**\n     * @param {?} errors\n     * @return {?}\n     */\n    function (errors) {\n        throw new Error(\"Unable to process animations due to the following failed trigger transitions\\n \" + errors.join('\\n'));\n    };\n    /**\n     * @param {?} cleanupFns\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._flushAnimations = /**\n     * @param {?} cleanupFns\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    function (cleanupFns, microtaskId) {\n        var _this = this;\n        var /** @type {?} */ subTimelines = new ElementInstructionMap();\n        var /** @type {?} */ skippedPlayers = [];\n        var /** @type {?} */ skippedPlayersMap = new Map();\n        var /** @type {?} */ queuedInstructions = [];\n        var /** @type {?} */ queriedElements = new Map();\n        var /** @type {?} */ allPreStyleElements = new Map();\n        var /** @type {?} */ allPostStyleElements = new Map();\n        var /** @type {?} */ disabledElementsSet = new Set();\n        this.disabledNodes.forEach(function (node) {\n            disabledElementsSet.add(node);\n            var /** @type {?} */ nodesThatAreDisabled = _this.driver.query(node, QUEUED_SELECTOR, true);\n            for (var /** @type {?} */ i_1 = 0; i_1 < nodesThatAreDisabled.length; i_1++) {\n                disabledElementsSet.add(nodesThatAreDisabled[i_1]);\n            }\n        });\n        var /** @type {?} */ bodyNode = getBodyNode();\n        var /** @type {?} */ allTriggerElements = Array.from(this.statesByElement.keys());\n        var /** @type {?} */ enterNodeMap = buildRootMap(allTriggerElements, this.collectedEnterElements);\n        // this must occur before the instructions are built below such that\n        // the :enter queries match the elements (since the timeline queries\n        // are fired during instruction building).\n        var /** @type {?} */ enterNodeMapIds = new Map();\n        var /** @type {?} */ i = 0;\n        enterNodeMap.forEach(function (nodes, root) {\n            var /** @type {?} */ className = ENTER_CLASSNAME + i++;\n            enterNodeMapIds.set(root, className);\n            nodes.forEach(function (node) { return addClass(node, className); });\n        });\n        var /** @type {?} */ allLeaveNodes = [];\n        var /** @type {?} */ mergedLeaveNodes = new Set();\n        var /** @type {?} */ leaveNodesWithoutAnimations = new Set();\n        for (var /** @type {?} */ i_2 = 0; i_2 < this.collectedLeaveElements.length; i_2++) {\n            var /** @type {?} */ element = this.collectedLeaveElements[i_2];\n            var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n            if (details && details.setForRemoval) {\n                allLeaveNodes.push(element);\n                mergedLeaveNodes.add(element);\n                if (details.hasAnimation) {\n                    this.driver.query(element, STAR_SELECTOR, true).forEach(function (elm) { return mergedLeaveNodes.add(elm); });\n                }\n                else {\n                    leaveNodesWithoutAnimations.add(element);\n                }\n            }\n        }\n        var /** @type {?} */ leaveNodeMapIds = new Map();\n        var /** @type {?} */ leaveNodeMap = buildRootMap(allTriggerElements, Array.from(mergedLeaveNodes));\n        leaveNodeMap.forEach(function (nodes, root) {\n            var /** @type {?} */ className = LEAVE_CLASSNAME + i++;\n            leaveNodeMapIds.set(root, className);\n            nodes.forEach(function (node) { return addClass(node, className); });\n        });\n        cleanupFns.push(function () {\n            enterNodeMap.forEach(function (nodes, root) {\n                var /** @type {?} */ className = /** @type {?} */ ((enterNodeMapIds.get(root)));\n                nodes.forEach(function (node) { return removeClass(node, className); });\n            });\n            leaveNodeMap.forEach(function (nodes, root) {\n                var /** @type {?} */ className = /** @type {?} */ ((leaveNodeMapIds.get(root)));\n                nodes.forEach(function (node) { return removeClass(node, className); });\n            });\n            allLeaveNodes.forEach(function (element) { _this.processLeaveNode(element); });\n        });\n        var /** @type {?} */ allPlayers = [];\n        var /** @type {?} */ erroneousTransitions = [];\n        for (var /** @type {?} */ i_3 = this._namespaceList.length - 1; i_3 >= 0; i_3--) {\n            var /** @type {?} */ ns = this._namespaceList[i_3];\n            ns.drainQueuedTransitions(microtaskId).forEach(function (entry) {\n                var /** @type {?} */ player = entry.player;\n                allPlayers.push(player);\n                var /** @type {?} */ element = entry.element;\n                if (!bodyNode || !_this.driver.containsElement(bodyNode, element)) {\n                    player.destroy();\n                    return;\n                }\n                var /** @type {?} */ leaveClassName = /** @type {?} */ ((leaveNodeMapIds.get(element)));\n                var /** @type {?} */ enterClassName = /** @type {?} */ ((enterNodeMapIds.get(element)));\n                var /** @type {?} */ instruction = /** @type {?} */ ((_this._buildInstruction(entry, subTimelines, enterClassName, leaveClassName)));\n                if (instruction.errors && instruction.errors.length) {\n                    erroneousTransitions.push(instruction);\n                    return;\n                }\n                // if a unmatched transition is queued to go then it SHOULD NOT render\n                // an animation and cancel the previously running animations.\n                if (entry.isFallbackTransition) {\n                    player.onStart(function () { return eraseStyles(element, instruction.fromStyles); });\n                    player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this means that if a parent animation uses this animation as a sub trigger\n                // then it will instruct the timeline builder to not add a player delay, but\n                // instead stretch the first keyframe gap up until the animation starts. The\n                // reason this is important is to prevent extra initialization styles from being\n                // required by the user in the animation.\n                instruction.timelines.forEach(function (tl) { return tl.stretchStartingKeyframe = true; });\n                subTimelines.append(element, instruction.timelines);\n                var /** @type {?} */ tuple = { instruction: instruction, player: player, element: element };\n                queuedInstructions.push(tuple);\n                instruction.queriedElements.forEach(function (element) { return getOrSetAsInMap(queriedElements, element, []).push(player); });\n                instruction.preStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    if (props.length) {\n                        var /** @type {?} */ setVal_1 = /** @type {?} */ ((allPreStyleElements.get(element)));\n                        if (!setVal_1) {\n                            allPreStyleElements.set(element, setVal_1 = new Set());\n                        }\n                        props.forEach(function (prop) { return setVal_1.add(prop); });\n                    }\n                });\n                instruction.postStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    var /** @type {?} */ setVal = /** @type {?} */ ((allPostStyleElements.get(element)));\n                    if (!setVal) {\n                        allPostStyleElements.set(element, setVal = new Set());\n                    }\n                    props.forEach(function (prop) { return setVal.add(prop); });\n                });\n            });\n        }\n        if (erroneousTransitions.length) {\n            var /** @type {?} */ errors_1 = [];\n            erroneousTransitions.forEach(function (instruction) {\n                errors_1.push(\"@\" + instruction.triggerName + \" has failed due to:\\n\"); /** @type {?} */\n                ((instruction.errors)).forEach(function (error) { return errors_1.push(\"- \" + error + \"\\n\"); });\n            });\n            allPlayers.forEach(function (player) { return player.destroy(); });\n            this.reportError(errors_1);\n        }\n        var /** @type {?} */ allPreviousPlayersMap = new Map();\n        // this map works to tell which element in the DOM tree is contained by\n        // which animation. Further down below this map will get populated once\n        // the players are built and in doing so it can efficiently figure out\n        // if a sub player is skipped due to a parent player having priority.\n        var /** @type {?} */ animationElementMap = new Map();\n        queuedInstructions.forEach(function (entry) {\n            var /** @type {?} */ element = entry.element;\n            if (subTimelines.has(element)) {\n                animationElementMap.set(element, element);\n                _this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n            }\n        });\n        skippedPlayers.forEach(function (player) {\n            var /** @type {?} */ element = player.element;\n            var /** @type {?} */ previousPlayers = _this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n            previousPlayers.forEach(function (prevPlayer) {\n                getOrSetAsInMap(allPreviousPlayersMap, element, []).push(prevPlayer);\n                prevPlayer.destroy();\n            });\n        });\n        // this is a special case for nodes that will be removed (either by)\n        // having their own leave animations or by being queried in a container\n        // that will be removed once a parent animation is complete. The idea\n        // here is that * styles must be identical to ! styles because of\n        // backwards compatibility (* is also filled in by default in many places).\n        // Otherwise * styles will return an empty value or auto since the element\n        // that is being getComputedStyle'd will not be visible (since * = destination)\n        var /** @type {?} */ replaceNodes = allLeaveNodes.filter(function (node) {\n            return replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements);\n        });\n        // POST STAGE: fill the * styles\n        var /** @type {?} */ postStylesMap = new Map();\n        var /** @type {?} */ allLeaveQueriedNodes = cloakAndComputeStyles(postStylesMap, this.driver, leaveNodesWithoutAnimations, allPostStyleElements, __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"a\" /* AUTO_STYLE */]);\n        allLeaveQueriedNodes.forEach(function (node) {\n            if (replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements)) {\n                replaceNodes.push(node);\n            }\n        });\n        // PRE STAGE: fill the ! styles\n        var /** @type {?} */ preStylesMap = new Map();\n        enterNodeMap.forEach(function (nodes, root) {\n            cloakAndComputeStyles(preStylesMap, _this.driver, new Set(nodes), allPreStyleElements, __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"h\" /* ɵPRE_STYLE */]);\n        });\n        replaceNodes.forEach(function (node) {\n            var /** @type {?} */ post = postStylesMap.get(node);\n            var /** @type {?} */ pre = preStylesMap.get(node);\n            postStylesMap.set(node, /** @type {?} */ (Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __assign */])({}, post, pre)));\n        });\n        var /** @type {?} */ rootPlayers = [];\n        var /** @type {?} */ subPlayers = [];\n        var /** @type {?} */ NO_PARENT_ANIMATION_ELEMENT_DETECTED = {};\n        queuedInstructions.forEach(function (entry) {\n            var element = entry.element, player = entry.player, instruction = entry.instruction;\n            // this means that it was never consumed by a parent animation which\n            // means that it is independent and therefore should be set for animation\n            if (subTimelines.has(element)) {\n                if (disabledElementsSet.has(element)) {\n                    player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this will flow up the DOM and query the map to figure out\n                // if a parent animation has priority over it. In the situation\n                // that a parent is detected then it will cancel the loop. If\n                // nothing is detected, or it takes a few hops to find a parent,\n                // then it will fill in the missing nodes and signal them as having\n                // a detected parent (or a NO_PARENT value via a special constant).\n                var /** @type {?} */ parentWithAnimation_1 = NO_PARENT_ANIMATION_ELEMENT_DETECTED;\n                if (animationElementMap.size > 1) {\n                    var /** @type {?} */ elm = element;\n                    var /** @type {?} */ parentsToAdd = [];\n                    while (elm = elm.parentNode) {\n                        var /** @type {?} */ detectedParent = animationElementMap.get(elm);\n                        if (detectedParent) {\n                            parentWithAnimation_1 = detectedParent;\n                            break;\n                        }\n                        parentsToAdd.push(elm);\n                    }\n                    parentsToAdd.forEach(function (parent) { return animationElementMap.set(parent, parentWithAnimation_1); });\n                }\n                var /** @type {?} */ innerPlayer = _this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);\n                player.setRealPlayer(innerPlayer);\n                if (parentWithAnimation_1 === NO_PARENT_ANIMATION_ELEMENT_DETECTED) {\n                    rootPlayers.push(player);\n                }\n                else {\n                    var /** @type {?} */ parentPlayers = _this.playersByElement.get(parentWithAnimation_1);\n                    if (parentPlayers && parentPlayers.length) {\n                        player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n                    }\n                    skippedPlayers.push(player);\n                }\n            }\n            else {\n                eraseStyles(element, instruction.fromStyles);\n                player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                // there still might be a ancestor player animating this\n                // element therefore we will still add it as a sub player\n                // even if its animation may be disabled\n                subPlayers.push(player);\n                if (disabledElementsSet.has(element)) {\n                    skippedPlayers.push(player);\n                }\n            }\n        });\n        // find all of the sub players' corresponding inner animation player\n        subPlayers.forEach(function (player) {\n            // even if any players are not found for a sub animation then it\n            // will still complete itself after the next tick since it's Noop\n            var /** @type {?} */ playersForElement = skippedPlayersMap.get(player.element);\n            if (playersForElement && playersForElement.length) {\n                var /** @type {?} */ innerPlayer = optimizeGroupPlayer(playersForElement);\n                player.setRealPlayer(innerPlayer);\n            }\n        });\n        // the reason why we don't actually play the animation is\n        // because all that a skipped player is designed to do is to\n        // fire the start/done transition callback events\n        skippedPlayers.forEach(function (player) {\n            if (player.parentPlayer) {\n                player.syncPlayerEvents(player.parentPlayer);\n            }\n            else {\n                player.destroy();\n            }\n        });\n        // run through all of the queued removals and see if they\n        // were picked up by a query. If not then perform the removal\n        // operation right away unless a parent animation is ongoing.\n        for (var /** @type {?} */ i_4 = 0; i_4 < allLeaveNodes.length; i_4++) {\n            var /** @type {?} */ element = allLeaveNodes[i_4];\n            var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n            removeClass(element, LEAVE_CLASSNAME);\n            // this means the element has a removal animation that is being\n            // taken care of and therefore the inner elements will hang around\n            // until that animation is over (or the parent queried animation)\n            if (details && details.hasAnimation)\n                continue;\n            var /** @type {?} */ players = [];\n            // if this element is queried or if it contains queried children\n            // then we want for the element not to be removed from the page\n            // until the queried animations have finished\n            if (queriedElements.size) {\n                var /** @type {?} */ queriedPlayerResults = queriedElements.get(element);\n                if (queriedPlayerResults && queriedPlayerResults.length) {\n                    players.push.apply(players, queriedPlayerResults);\n                }\n                var /** @type {?} */ queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);\n                for (var /** @type {?} */ j = 0; j < queriedInnerElements.length; j++) {\n                    var /** @type {?} */ queriedPlayers = queriedElements.get(queriedInnerElements[j]);\n                    if (queriedPlayers && queriedPlayers.length) {\n                        players.push.apply(players, queriedPlayers);\n                    }\n                }\n            }\n            var /** @type {?} */ activePlayers = players.filter(function (p) { return !p.destroyed; });\n            if (activePlayers.length) {\n                removeNodesAfterAnimationDone(this, element, activePlayers);\n            }\n            else {\n                this.processLeaveNode(element);\n            }\n        }\n        // this is required so the cleanup method doesn't remove them\n        allLeaveNodes.length = 0;\n        rootPlayers.forEach(function (player) {\n            _this.players.push(player);\n            player.onDone(function () {\n                player.destroy();\n                var /** @type {?} */ index = _this.players.indexOf(player);\n                _this.players.splice(index, 1);\n            });\n            player.play();\n        });\n        return rootPlayers;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.elementContainsData = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @return {?}\n     */\n    function (namespaceId, element) {\n        var /** @type {?} */ containsData = false;\n        var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval)\n            containsData = true;\n        if (this.playersByElement.has(element))\n            containsData = true;\n        if (this.playersByQueriedElement.has(element))\n            containsData = true;\n        if (this.statesByElement.has(element))\n            containsData = true;\n        return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlush = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._flushFns.push(callback); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlushAnimationsDone = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._whenQuietFns.push(callback); };\n    /**\n     * @param {?} element\n     * @param {?} isQueriedElement\n     * @param {?=} namespaceId\n     * @param {?=} triggerName\n     * @param {?=} toStateValue\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._getPreviousPlayers = /**\n     * @param {?} element\n     * @param {?} isQueriedElement\n     * @param {?=} namespaceId\n     * @param {?=} triggerName\n     * @param {?=} toStateValue\n     * @return {?}\n     */\n    function (element, isQueriedElement, namespaceId, triggerName, toStateValue) {\n        var /** @type {?} */ players = [];\n        if (isQueriedElement) {\n            var /** @type {?} */ queriedElementPlayers = this.playersByQueriedElement.get(element);\n            if (queriedElementPlayers) {\n                players = queriedElementPlayers;\n            }\n        }\n        else {\n            var /** @type {?} */ elementPlayers = this.playersByElement.get(element);\n            if (elementPlayers) {\n                var /** @type {?} */ isRemovalAnimation_1 = !toStateValue || toStateValue == VOID_VALUE;\n                elementPlayers.forEach(function (player) {\n                    if (player.queued)\n                        return;\n                    if (!isRemovalAnimation_1 && player.triggerName != triggerName)\n                        return;\n                    players.push(player);\n                });\n            }\n        }\n        if (namespaceId || triggerName) {\n            players = players.filter(function (player) {\n                if (namespaceId && namespaceId != player.namespaceId)\n                    return false;\n                if (triggerName && triggerName != player.triggerName)\n                    return false;\n                return true;\n            });\n        }\n        return players;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._beforeAnimationBuild = /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @return {?}\n     */\n    function (namespaceId, instruction, allPreviousPlayersMap) {\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // when a removal animation occurs, ALL previous players are collected\n        // and destroyed (even if they are outside of the current namespace)\n        var /** @type {?} */ targetNameSpaceId = instruction.isRemovalTransition ? undefined : namespaceId;\n        var /** @type {?} */ targetTriggerName = instruction.isRemovalTransition ? undefined : triggerName;\n        var _loop_1 = function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n            var /** @type {?} */ previousPlayers = this_1._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n            previousPlayers.forEach(function (player) {\n                var /** @type {?} */ realPlayer = /** @type {?} */ (player.getRealPlayer());\n                if (realPlayer.beforeDestroy) {\n                    realPlayer.beforeDestroy();\n                }\n                player.destroy();\n                players.push(player);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = instruction.timelines; _i < _a.length; _i++) {\n            var timelineInstruction = _a[_i];\n            _loop_1(timelineInstruction);\n        }\n        // this needs to be done so that the PRE/POST styles can be\n        // computed properly without interfering with the previous animation\n        eraseStyles(rootElement, instruction.fromStyles);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @param {?} skippedPlayersMap\n     * @param {?} preStylesMap\n     * @param {?} postStylesMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildAnimation = /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @param {?} skippedPlayersMap\n     * @param {?} preStylesMap\n     * @param {?} postStylesMap\n     * @return {?}\n     */\n    function (namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {\n        var _this = this;\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // we first run this so that the previous animation player\n        // data can be passed into the successive animation players\n        var /** @type {?} */ allQueriedPlayers = [];\n        var /** @type {?} */ allConsumedElements = new Set();\n        var /** @type {?} */ allSubElements = new Set();\n        var /** @type {?} */ allNewPlayers = instruction.timelines.map(function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            allConsumedElements.add(element);\n            // FIXME (matsko): make sure to-be-removed animations are removed properly\n            var /** @type {?} */ details = element[REMOVAL_FLAG];\n            if (details && details.removedBeforeQueried)\n                return new __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"d\" /* NoopAnimationPlayer */]();\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ previousPlayers = flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY)\n                .map(function (p) { return p.getRealPlayer(); }))\n                .filter(function (p) {\n                // the `element` is not apart of the AnimationPlayer definition, but\n                // Mock/WebAnimations\n                // use the element within their implementation. This will be added in Angular5 to\n                // AnimationPlayer\n                var /** @type {?} */ pp = /** @type {?} */ (p);\n                return pp.element ? pp.element === element : false;\n            });\n            var /** @type {?} */ preStyles = preStylesMap.get(element);\n            var /** @type {?} */ postStyles = postStylesMap.get(element);\n            var /** @type {?} */ keyframes = normalizeKeyframes(_this.driver, _this._normalizer, element, timelineInstruction.keyframes, preStyles, postStyles);\n            var /** @type {?} */ player = _this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n            // this means that this particular player belongs to a sub trigger. It is\n            // important that we match this player up with the corresponding (@trigger.listener)\n            if (timelineInstruction.subTimeline && skippedPlayersMap) {\n                allSubElements.add(element);\n            }\n            if (isQueriedElement) {\n                var /** @type {?} */ wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n                wrappedPlayer.setRealPlayer(player);\n                allQueriedPlayers.push(wrappedPlayer);\n            }\n            return player;\n        });\n        allQueriedPlayers.forEach(function (player) {\n            getOrSetAsInMap(_this.playersByQueriedElement, player.element, []).push(player);\n            player.onDone(function () { return deleteOrUnsetInMap(_this.playersByQueriedElement, player.element, player); });\n        });\n        allConsumedElements.forEach(function (element) { return addClass(element, NG_ANIMATING_CLASSNAME); });\n        var /** @type {?} */ player = optimizeGroupPlayer(allNewPlayers);\n        player.onDestroy(function () {\n            allConsumedElements.forEach(function (element) { return removeClass(element, NG_ANIMATING_CLASSNAME); });\n            setStyles(rootElement, instruction.toStyles);\n        });\n        // this basically makes all of the callbacks for sub element animations\n        // be dependent on the upper players for when they finish\n        allSubElements.forEach(function (element) { getOrSetAsInMap(skippedPlayersMap, element, []).push(player); });\n        return player;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} keyframes\n     * @param {?} previousPlayers\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildPlayer = /**\n     * @param {?} instruction\n     * @param {?} keyframes\n     * @param {?} previousPlayers\n     * @return {?}\n     */\n    function (instruction, keyframes, previousPlayers) {\n        if (keyframes.length > 0) {\n            return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);\n        }\n        // special case for when an empty transition|definition is provided\n        // ... there is no point in rendering an empty animation\n        return new __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"d\" /* NoopAnimationPlayer */]();\n    };\n    return TransitionAnimationEngine;\n}());\nvar TransitionAnimationPlayer = /** @class */ (function () {\n    function TransitionAnimationPlayer(namespaceId, triggerName, element) {\n        this.namespaceId = namespaceId;\n        this.triggerName = triggerName;\n        this.element = element;\n        this._player = new __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"d\" /* NoopAnimationPlayer */]();\n        this._containsRealPlayer = false;\n        this._queuedCallbacks = {};\n        this.destroyed = false;\n        this.markedForDestroy = false;\n        this.queued = true;\n    }\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setRealPlayer = /**\n     * @param {?} player\n     * @return {?}\n     */\n    function (player) {\n        var _this = this;\n        if (this._containsRealPlayer)\n            return;\n        this._player = player;\n        Object.keys(this._queuedCallbacks).forEach(function (phase) {\n            _this._queuedCallbacks[phase].forEach(function (callback) { return listenOnPlayer(player, phase, undefined, callback); });\n        });\n        this._queuedCallbacks = {};\n        this._containsRealPlayer = true;\n        (/** @type {?} */ (this)).queued = false;\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getRealPlayer = /**\n     * @return {?}\n     */\n    function () { return this._player; };\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.syncPlayerEvents = /**\n     * @param {?} player\n     * @return {?}\n     */\n    function (player) {\n        var _this = this;\n        var /** @type {?} */ p = /** @type {?} */ (this._player);\n        if (p.triggerCallback) {\n            player.onStart(function () { return p.triggerCallback('start'); });\n        }\n        player.onDone(function () { return _this.finish(); });\n        player.onDestroy(function () { return _this.destroy(); });\n    };\n    /**\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype._queueEvent = /**\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (name, callback) {\n        getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this.queued) {\n            this._queueEvent('done', fn);\n        }\n        this._player.onDone(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this.queued) {\n            this._queueEvent('start', fn);\n        }\n        this._player.onStart(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this.queued) {\n            this._queueEvent('destroy', fn);\n        }\n        this._player.onDestroy(fn);\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () { this._player.init(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this.queued ? false : this._player.hasStarted(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.play(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.pause(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.restart(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () { this._player.finish(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this)).destroyed = true;\n        this._player.destroy();\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.reset(); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) {\n        if (!this.queued) {\n            this._player.setPosition(p);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return this.queued ? 0 : this._player.getPosition(); };\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"totalTime\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._player.totalTime; },\n        enumerable: true,\n        configurable: true\n    });\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ p = /** @type {?} */ (this._player);\n        if (p.triggerCallback) {\n            p.triggerCallback(phaseName);\n        }\n    };\n    return TransitionAnimationPlayer;\n}());\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction deleteOrUnsetInMap(map, key, value) {\n    var /** @type {?} */ currentValues;\n    if (map instanceof Map) {\n        currentValues = map.get(key);\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                map.delete(key);\n            }\n        }\n    }\n    else {\n        currentValues = map[key];\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                delete map[key];\n            }\n        }\n    }\n    return currentValues;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeTriggerValue(value) {\n    // we use `!= null` here because it's the most simple\n    // way to test against a \"falsy\" value without mixing\n    // in empty strings or a zero value. DO NOT OPTIMIZE.\n    return value != null ? value : null;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isElementNode(node) {\n    return node && node['nodeType'] === 1;\n}\n/**\n * @param {?} eventName\n * @return {?}\n */\nfunction isTriggerEventValid(eventName) {\n    return eventName == 'start' || eventName == 'done';\n}\n/**\n * @param {?} element\n * @param {?=} value\n * @return {?}\n */\nfunction cloakElement(element, value) {\n    var /** @type {?} */ oldValue = element.style.display;\n    element.style.display = value != null ? value : 'none';\n    return oldValue;\n}\n/**\n * @param {?} valuesMap\n * @param {?} driver\n * @param {?} elements\n * @param {?} elementPropsMap\n * @param {?} defaultStyle\n * @return {?}\n */\nfunction cloakAndComputeStyles(valuesMap, driver, elements, elementPropsMap, defaultStyle) {\n    var /** @type {?} */ cloakVals = [];\n    elements.forEach(function (element) { return cloakVals.push(cloakElement(element)); });\n    var /** @type {?} */ failedElements = [];\n    elementPropsMap.forEach(function (props, element) {\n        var /** @type {?} */ styles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ value = styles[prop] = driver.computeStyle(element, prop, defaultStyle);\n            // there is no easy way to detect this because a sub element could be removed\n            // by a parent animation element being detached.\n            if (!value || value.length == 0) {\n                element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n                failedElements.push(element);\n            }\n        });\n        valuesMap.set(element, styles);\n    });\n    // we use a index variable here since Set.forEach(a, i) does not return\n    // an index value for the closure (but instead just the value)\n    var /** @type {?} */ i = 0;\n    elements.forEach(function (element) { return cloakElement(element, cloakVals[i++]); });\n    return failedElements;\n}\n/**\n * @param {?} roots\n * @param {?} nodes\n * @return {?}\n */\nfunction buildRootMap(roots, nodes) {\n    var /** @type {?} */ rootMap = new Map();\n    roots.forEach(function (root) { return rootMap.set(root, []); });\n    if (nodes.length == 0)\n        return rootMap;\n    var /** @type {?} */ NULL_NODE = 1;\n    var /** @type {?} */ nodeSet = new Set(nodes);\n    var /** @type {?} */ localRootMap = new Map();\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    function getRoot(node) {\n        if (!node)\n            return NULL_NODE;\n        var /** @type {?} */ root = localRootMap.get(node);\n        if (root)\n            return root;\n        var /** @type {?} */ parent = node.parentNode;\n        if (rootMap.has(parent)) {\n            // ngIf inside @trigger\n            root = parent;\n        }\n        else if (nodeSet.has(parent)) {\n            // ngIf inside ngIf\n            root = NULL_NODE;\n        }\n        else {\n            // recurse upwards\n            root = getRoot(parent);\n        }\n        localRootMap.set(node, root);\n        return root;\n    }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ root = getRoot(node);\n        if (root !== NULL_NODE) {\n            /** @type {?} */ ((rootMap.get(root))).push(node);\n        }\n    });\n    return rootMap;\n}\nvar CLASSES_CACHE_KEY = '$$classes';\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction addClass(element, className) {\n    if (element.classList) {\n        element.classList.add(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (!classes) {\n            classes = element[CLASSES_CACHE_KEY] = {};\n        }\n        classes[className] = true;\n    }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction removeClass(element, className) {\n    if (element.classList) {\n        element.classList.remove(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (classes) {\n            delete classes[className];\n        }\n    }\n}\n/**\n * @param {?} engine\n * @param {?} element\n * @param {?} players\n * @return {?}\n */\nfunction removeNodesAfterAnimationDone(engine, element, players) {\n    optimizeGroupPlayer(players).onDone(function () { return engine.processLeaveNode(element); });\n}\n/**\n * @param {?} players\n * @return {?}\n */\nfunction flattenGroupPlayers(players) {\n    var /** @type {?} */ finalPlayers = [];\n    _flattenGroupPlayersRecur(players, finalPlayers);\n    return finalPlayers;\n}\n/**\n * @param {?} players\n * @param {?} finalPlayers\n * @return {?}\n */\nfunction _flattenGroupPlayersRecur(players, finalPlayers) {\n    for (var /** @type {?} */ i = 0; i < players.length; i++) {\n        var /** @type {?} */ player = players[i];\n        if (player instanceof __WEBPACK_IMPORTED_MODULE_0__angular_animations__[\"g\" /* ɵAnimationGroupPlayer */]) {\n            _flattenGroupPlayersRecur(player.players, finalPlayers);\n        }\n        else {\n            finalPlayers.push(/** @type {?} */ (player));\n        }\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction objEquals(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        var /** @type {?} */ prop = k1[i];\n        if (!b.hasOwnProperty(prop) || a[prop] !== b[prop])\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} element\n * @param {?} allPreStyleElements\n * @param {?} allPostStyleElements\n * @return {?}\n */\nfunction replacePostStylesAsPre(element, allPreStyleElements, allPostStyleElements) {\n    var /** @type {?} */ postEntry = allPostStyleElements.get(element);\n    if (!postEntry)\n        return false;\n    var /** @type {?} */ preEntry = allPreStyleElements.get(element);\n    if (preEntry) {\n        postEntry.forEach(function (data) { return ((preEntry)).add(data); });\n    }\n    else {\n        allPreStyleElements.set(element, postEntry);\n    }\n    allPostStyleElements.delete(element);\n    return true;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar AnimationEngine = /** @class */ (function () {\n    function AnimationEngine(_driver, normalizer) {\n        var _this = this;\n        this._driver = _driver;\n        this._triggerCache = {};\n        this.onRemovalComplete = function (element, context) { };\n        this._transitionEngine = new TransitionAnimationEngine(_driver, normalizer);\n        this._timelineEngine = new TimelineAnimationEngine(_driver, normalizer);\n        this._transitionEngine.onRemovalComplete = function (element, context) {\n            return _this.onRemovalComplete(element, context);\n        };\n    }\n    /**\n     * @param {?} componentId\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @param {?} name\n     * @param {?} metadata\n     * @return {?}\n     */\n    AnimationEngine.prototype.registerTrigger = /**\n     * @param {?} componentId\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @param {?} name\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (componentId, namespaceId, hostElement, name, metadata) {\n        var /** @type {?} */ cacheKey = componentId + '-' + name;\n        var /** @type {?} */ trigger = this._triggerCache[cacheKey];\n        if (!trigger) {\n            var /** @type {?} */ errors = [];\n            var /** @type {?} */ ast = /** @type {?} */ (buildAnimationAst(this._driver, /** @type {?} */ (metadata), errors));\n            if (errors.length) {\n                throw new Error(\"The animation trigger \\\"\" + name + \"\\\" has failed to build due to the following errors:\\n - \" + errors.join(\"\\n - \"));\n            }\n            trigger = buildTrigger(name, ast);\n            this._triggerCache[cacheKey] = trigger;\n        }\n        this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    AnimationEngine.prototype.register = /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (namespaceId, hostElement) {\n        this._transitionEngine.register(namespaceId, hostElement);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.destroy = /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, context) {\n        this._transitionEngine.destroy(namespaceId, context);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    AnimationEngine.prototype.onInsert = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    function (namespaceId, element, parent, insertBefore) {\n        this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.onRemove = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, element, context) {\n        this._transitionEngine.removeNode(namespaceId, element, context);\n    };\n    /**\n     * @param {?} element\n     * @param {?} disable\n     * @return {?}\n     */\n    AnimationEngine.prototype.disableAnimations = /**\n     * @param {?} element\n     * @param {?} disable\n     * @return {?}\n     */\n    function (element, disable) {\n        this._transitionEngine.markElementAsDisabled(element, disable);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationEngine.prototype.process = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    function (namespaceId, element, property, value) {\n        if (property.charAt(0) == '@') {\n            var _a = parseTimelineCommand(property), id = _a[0], action = _a[1];\n            var /** @type {?} */ args = /** @type {?} */ (value);\n            this._timelineEngine.command(id, element, action, args);\n        }\n        else {\n            this._transitionEngine.trigger(namespaceId, element, property, value);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} eventPhase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationEngine.prototype.listen = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} eventPhase\n     * @param {?} callback\n     * @return {?}\n     */\n    function (namespaceId, element, eventName, eventPhase, callback) {\n        // @@listen\n        if (eventName.charAt(0) == '@') {\n            var _a = parseTimelineCommand(eventName), id = _a[0], action = _a[1];\n            return this._timelineEngine.listen(id, element, action, callback);\n        }\n        return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    AnimationEngine.prototype.flush = /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    function (microtaskId) {\n        if (microtaskId === void 0) { microtaskId = -1; }\n        this._transitionEngine.flush(microtaskId);\n    };\n    Object.defineProperty(AnimationEngine.prototype, \"players\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (/** @type {?} */ (this._transitionEngine.players))\n                .concat(/** @type {?} */ (this._timelineEngine.players));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AnimationEngine.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () { return this._transitionEngine.whenRenderingDone(); };\n    return AnimationEngine;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar WebAnimationsPlayer = /** @class */ (function () {\n    function WebAnimationsPlayer(element, keyframes, options, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var _this = this;\n        this.element = element;\n        this.keyframes = keyframes;\n        this.options = options;\n        this.previousPlayers = previousPlayers;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._initialized = false;\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this.time = 0;\n        this.parentPlayer = null;\n        this.previousStyles = {};\n        this.currentSnapshot = {};\n        this._duration = /** @type {?} */ (options['duration']);\n        this._delay = /** @type {?} */ (options['delay']) || 0;\n        this.time = this._duration + this._delay;\n        if (allowPreviousPlayerStylesMerge(this._duration, this._delay)) {\n            previousPlayers.forEach(function (player) {\n                var /** @type {?} */ styles = player.currentSnapshot;\n                Object.keys(styles).forEach(function (prop) { return _this.previousStyles[prop] = styles[prop]; });\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._onFinish = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        this._buildPlayer();\n        this._preparePlayerBeforeStart();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._buildPlayer = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._initialized)\n            return;\n        this._initialized = true;\n        var /** @type {?} */ keyframes = this.keyframes.map(function (styles) { return copyStyles(styles, false); });\n        var /** @type {?} */ previousStyleProps = Object.keys(this.previousStyles);\n        if (previousStyleProps.length && keyframes.length) {\n            var /** @type {?} */ startingKeyframe_1 = keyframes[0];\n            var /** @type {?} */ missingStyleProps_1 = [];\n            previousStyleProps.forEach(function (prop) {\n                if (!startingKeyframe_1.hasOwnProperty(prop)) {\n                    missingStyleProps_1.push(prop);\n                }\n                startingKeyframe_1[prop] = _this.previousStyles[prop];\n            });\n            if (missingStyleProps_1.length) {\n                var /** @type {?} */ self_1 = this;\n                var _loop_1 = function () {\n                    var /** @type {?} */ kf = keyframes[i];\n                    missingStyleProps_1.forEach(function (prop) {\n                        kf[prop] = _computeStyle(self_1.element, prop);\n                    });\n                };\n                // tslint:disable-next-line\n                for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n                    _loop_1();\n                }\n            }\n        }\n        (/** @type {?} */ (this)).domPlayer =\n            this._triggerWebAnimation(this.element, keyframes, this.options);\n        this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n        this.domPlayer.addEventListener('finish', function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._preparePlayerBeforeStart = /**\n     * @return {?}\n     */\n    function () {\n        // this is required so that the player doesn't start to animate right away\n        if (this._delay) {\n            this._resetDomPlayerState();\n        }\n        else {\n            this.domPlayer.pause();\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._triggerWebAnimation = /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @return {?}\n     */\n    function (element, keyframes, options) {\n        // jscompiler doesn't seem to know animate is a native property because it's not fully\n        // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n        return /** @type {?} */ (element['animate'](keyframes, options));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        this._buildPlayer();\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n            this._started = true;\n        }\n        this.domPlayer.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n        this.domPlayer.pause();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n        this._onFinish();\n        this.domPlayer.finish();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () {\n        this._resetDomPlayerState();\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._resetDomPlayerState = /**\n     * @return {?}\n     */\n    function () {\n        if (this.domPlayer) {\n            this.domPlayer.cancel();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () {\n        this.reset();\n        this.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._resetDomPlayerState();\n            this._onFinish();\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) { this.domPlayer.currentTime = p * this.time; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return this.domPlayer.currentTime / this.time; };\n    Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._delay + this._duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.beforeDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ styles = {};\n        if (this.hasStarted()) {\n            Object.keys(this._finalKeyframe).forEach(function (prop) {\n                if (prop != 'offset') {\n                    styles[prop] =\n                        _this._finished ? _this._finalKeyframe[prop] : _computeStyle(_this.element, prop);\n                }\n            });\n        }\n        this.currentSnapshot = styles;\n    };\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(function (fn) { return fn(); });\n        methods.length = 0;\n    };\n    return WebAnimationsPlayer;\n}());\n/**\n * @param {?} element\n * @param {?} prop\n * @return {?}\n */\nfunction _computeStyle(element, prop) {\n    return (/** @type {?} */ (window.getComputedStyle(element)))[prop];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar WebAnimationsDriver = /** @class */ (function () {\n    function WebAnimationsDriver() {\n    }\n    /**\n     * @param {?} prop\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.validateStyleProperty = /**\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) { return validateStyleProperty(prop); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.matchesElement = /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.containsElement = /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    function (elm1, elm2) { return containsElement(elm1, elm2); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.query = /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.computeStyle = /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    function (element, prop, defaultValue) {\n        return /** @type {?} */ ((/** @type {?} */ (window.getComputedStyle(element)))[prop]);\n    };\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.animate = /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var /** @type {?} */ fill = delay == 0 ? 'both' : 'forwards';\n        var /** @type {?} */ playerOptions = { duration: duration, delay: delay, fill: fill };\n        // we check for this to avoid having a null|undefined value be present\n        // for the easing (which results in an error for certain browsers #9752)\n        if (easing) {\n            playerOptions['easing'] = easing;\n        }\n        var /** @type {?} */ previousWebAnimationPlayers = /** @type {?} */ (previousPlayers.filter(function (player) { return player instanceof WebAnimationsPlayer; }));\n        return new WebAnimationsPlayer(element, keyframes, playerOptions, previousWebAnimationPlayers);\n    };\n    return WebAnimationsDriver;\n}());\n/**\n * @return {?}\n */\nfunction supportsWebAnimations() {\n    return typeof Element !== 'undefined' && typeof (/** @type {?} */ (Element)).prototype['animate'] === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n\n//# sourceMappingURL=browser.js.map\n\n\n/***/ }),\n\n/***/ 648:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar password_service_1 = __webpack_require__(260);\r\nvar AppComponent = /** @class */ (function () {\r\n    function AppComponent(passwordService) {\r\n        this.passwordService = passwordService;\r\n        this.textContent = {\r\n            headerText: \"Password Strength Indicator/ Checker Tool\",\r\n            characterInfoText: \"Characters Entered : \",\r\n            conditionText1: \"Upper Case \",\r\n            conditionText2: \"Lower Case \",\r\n            conditionText3: \"Numbers \",\r\n            conditionText4: \"Symbols \",\r\n            statusText1: \"Weak\",\r\n            statusText2: \"Medium\",\r\n            statusText3: \"Strong\",\r\n            footerLeftBoxHeaderText: \"Review\",\r\n            footerRightBoxHeaderText: \"Requirements :\",\r\n            footerRightBoxInfoText1: \"Should contain at least 6 characters and maximum 24 characters is allowed.\",\r\n            footerRightBoxInfoText2: \"Should contain at least 3 features from the below points :\",\r\n            footerRightBoxInfoText3: \"Tips for a Strong Password for example: H3lloW0#ld\",\r\n            footerRightBoxConditionText1: \"1 Lowercase Character\",\r\n            footerRightBoxConditionText2: \"1 Uppercase Character\",\r\n            footerRightBoxConditionText3: \"1 Number\",\r\n            footerRightBoxConditionText4: \"1 Special Character like @#!\"\r\n        };\r\n        this.progress = [];\r\n        this.count = 0;\r\n        this.lowerCase = false;\r\n        this.upperCase = false;\r\n        this.numeric = false;\r\n        this.symbols = false;\r\n        this.length = false;\r\n        this.passwordLength = 0;\r\n        this.watchPassword = false;\r\n        this.reviews = [\r\n            \"\",\r\n            \"Oh dear, using that password is like leaving your front door wide open. Your password is very weak because it contains a dictionary word.\",\r\n            \"Oh dear, using that password is like leaving your front door wide open. Your password is very weak because it contains a dictionary word.\",\r\n            \"Oh dear, using that password is like leaving your front door wide open. Your password is very weak because it contains a dictionary word.\",\r\n            \"Oops, using that password is like leaving your key in the lock. Your password is weak because it contains 2 dictionary words.\",\r\n            \"Oops, using that password is like leaving your key in the lock. Your password is weak because it contains 2 dictionary words.\",\r\n            \"Hmm, using that password is like locking your front door, but leaving the key under the mat. Your password is of medium strength because it contains 2 dictionary words and a combination of characters that are close together on the keyboard.\",\r\n            \"Hmm, using that password is like locking your front door, but leaving the key under the mat. Your password is of medium strength because it contains 2 dictionary words and a combination of characters that are close together on the keyboard.\",\r\n            \"Hmm, using that password is like locking your front door, but leaving the key under the mat. Your password is of medium strength because it contains 2 dictionary words and a combination of characters that are close together on the keyboard.\",\r\n            \"Good, using that password is like locking your front door and keeping the key in a safety deposit box.\",\r\n            \"Good, using that password is like locking your front door and keeping the key in a safety deposit box.\",\r\n            \"Fantastic, using that password makes you as secure as Fort Knox.\",\r\n            \"Fantastic, using that password makes you as secure as Fort Knox.\",\r\n        ];\r\n        this.review = this.reviews[this.count];\r\n    }\r\n    AppComponent.prototype.ngOnInit = function () {\r\n        for (var i = 0; i < 12; i++) {\r\n            this.progress.push(false);\r\n        }\r\n    };\r\n    AppComponent.prototype.passwordType = function () {\r\n        this.watchPassword = !this.watchPassword;\r\n        var x = document.getElementById(\"password\");\r\n        if (x.type === \"password\") {\r\n            x.type = \"text\";\r\n        }\r\n        else {\r\n            x.type = \"password\";\r\n        }\r\n    };\r\n    // REST API Call to get response back from backend\r\n    AppComponent.prototype.makeAPICall = function () {\r\n        var _this = this;\r\n        this.passwordService.makeAPICall(this.password).subscribe(function (response) {\r\n            _this.upperCase = response.upperCase;\r\n            _this.lowerCase = response.lowerCase;\r\n            _this.numeric = response.numeric;\r\n            _this.symbols = response.symbols;\r\n            _this.length = response.length;\r\n            _this.progress = response.progress;\r\n            _this.count = response.count;\r\n            _this.passwordLength = response.passLength;\r\n            _this.review = _this.reviews[_this.count];\r\n        });\r\n    };\r\n    AppComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'app-root',\r\n            template: __webpack_require__(649),\r\n            styles: [\r\n                __webpack_require__(650)\r\n            ]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [password_service_1.PasswordService])\r\n    ], AppComponent);\r\n    return AppComponent;\r\n}());\r\nexports.AppComponent = AppComponent;\r\n\n\n/***/ }),\n\n/***/ 649:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <h2>\\r\\n                {{ textContent.headerText }}\\r\\n            </h2> \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"input-group mb-3 password-text\\\">\\r\\n                <input [(ngModel)]=\\\"password\\\" maxlength=\\\"24\\\" id=\\\"password\\\" type=\\\"password\\\" (keyup)=\\\"makeAPICall()\\\" class=\\\"form-control\\\" aria-label=\\\"Password\\\" aria-describedby=\\\"basic-addon1\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" (click)=\\\"passwordType()\\\">\\r\\n                    <span *ngIf=\\\"!watchPassword\\\" class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\"><i class=\\\"fas fa-eye-slash\\\"></i></span>\\r\\n                    <span *ngIf=\\\"watchPassword\\\" class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\"><i class=\\\"fas fa-eye\\\"></i></span>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\r\\n                    <p *ngIf=\\\"!length\\\">\\r\\n                        {{ textContent.characterInfoText }}\\r\\n                        {{ passwordLength }}\\r\\n                    </p>\\r\\n                    <p class=\\\"checkers\\\" *ngIf=\\\"length\\\">\\r\\n                        {{ textContent.characterInfoText }}\\r\\n                        {{ passwordLength }}\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-2 col-sm-2 col-xs-2\\\">\\r\\n                    <p *ngIf=\\\"!upperCase\\\">\\r\\n                        {{ textContent.conditionText1 }}\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </p>\\r\\n                    <p class=\\\"checkers\\\" *ngIf=\\\"upperCase\\\">\\r\\n                        {{ textContent.conditionText1 }}\\r\\n                        <i class=\\\"fas fa-check\\\"></i>\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-2 col-sm-2 col-xs-2\\\">\\r\\n                    <p *ngIf=\\\"!lowerCase\\\">\\r\\n                        {{ textContent.conditionText2 }}\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </p>\\r\\n                    <p class=\\\"checkers\\\" *ngIf=\\\"lowerCase\\\">\\r\\n                        {{ textContent.conditionText2 }}\\r\\n                        <i class=\\\"fas fa-check\\\"></i>\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-2 col-sm-2 col-xs-2\\\">\\r\\n                    <p *ngIf=\\\"!numeric\\\">\\r\\n                        {{ textContent.conditionText3 }}\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </p>\\r\\n                    <p class=\\\"checkers\\\" *ngIf=\\\"numeric\\\">\\r\\n                        {{ textContent.conditionText3 }}\\r\\n                        <i class=\\\"fas fa-check\\\"></i>\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-2 col-sm-2 col-xs-2\\\">\\r\\n                    <p *ngIf=\\\"!symbols\\\">\\r\\n                        {{ textContent.conditionText4 }}\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </p>\\r\\n                    <p class=\\\"checkers\\\" *ngIf=\\\"symbols\\\">\\r\\n                        {{ textContent.conditionText4 }}\\r\\n                        <i class=\\\"fas fa-check\\\"></i>\\r\\n                    </p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row progress\\\">\\r\\n                <div *ngIf=\\\"progress[0]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 red\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[0]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[1]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 red\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[1]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[2]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 red\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[2]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[3]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 red\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[3]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[4]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 yellow\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[4]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[5]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 yellow\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[5]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[6]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 yellow\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[6]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[7]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 yellow\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[7]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[8]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 green\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[8]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[9]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 green\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[9]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[10]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 green\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[10]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[11]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 green\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[11]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row passStatus\\\">\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\r\\n                    <h4 id=\\\"red\\\" *ngIf=\\\"count>0 && count<=4\\\">\\r\\n                        {{ textContent.statusText1 }}\\r\\n                    </h4>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\r\\n                    <h4 id=\\\"yellow\\\" *ngIf=\\\"count>=5 && count<=8\\\">\\r\\n                        {{ textContent.statusText2 }}\\r\\n                    </h4>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\r\\n                    <h4 id=\\\"green\\\" *ngIf=\\\"count>=9 && count<=12\\\">\\r\\n                        {{ textContent.statusText3 }}\\r\\n                    </h4>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"card-footer\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 review-left\\\">\\r\\n                    <h4>{{ textContent.footerLeftBoxHeaderText }}</h4>\\r\\n                    <p>{{ review }}</p>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 review-right\\\">\\r\\n                    <h4>\\r\\n                        {{ textContent.footerRightBoxHeaderText }}\\r\\n                    </h4>\\r\\n\\r\\n                    <ol>\\r\\n                        <li>\\r\\n                            {{ textContent.footerRightBoxInfoText1 }}\\r\\n                        </li>\\r\\n\\r\\n                        <li>\\r\\n                            {{ textContent.footerRightBoxInfoText2 }}\\r\\n                            <ul>\\r\\n                                <li>\\r\\n                                    {{ textContent.footerRightBoxConditionText1 }}\\r\\n                                </li>\\r\\n                                <li>\\r\\n                                    {{ textContent.footerRightBoxConditionText2 }}\\r\\n                                </li>\\r\\n                                <li>\\r\\n                                    {{ textContent.footerRightBoxConditionText3 }}\\r\\n                                </li>\\r\\n                                <li>\\r\\n                                    {{ textContent.footerRightBoxConditionText4 }}\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </li>\\r\\n                    </ol>\\r\\n\\r\\n                    <p id=\\\"example\\\">\\r\\n                        {{ textContent.footerRightBoxInfoText3 }}\\r\\n                    </p>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n/***/ }),\n\n/***/ 650:\n/***/ (function(module, exports) {\n\nmodule.exports = \".container {\\r\\n    margin-top: 1em;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n    text-align: center;\\r\\n    padding-top: 1em;\\r\\n    padding: 2em;\\r\\n}\\r\\n\\r\\n.heading {\\r\\n    text-align: center;\\r\\n    font-size: 6vh;\\r\\n}\\r\\n\\r\\n.page-content {\\r\\n    margin-top: 8vh;\\r\\n    font-size: 2vh;\\r\\n}\\r\\n\\r\\n.password-content-side {}\\r\\n\\r\\n.password-text {\\r\\n    height: 5vh;\\r\\n}\\r\\n\\r\\n.password-text input {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#example {\\r\\n    text-align: left;\\r\\n    margin-top: 3vh;\\r\\n    color: #6884b0;\\r\\n}\\r\\n\\r\\n.progress {\\r\\n    margin-top: 2em;\\r\\n    border-radius: 0px;\\r\\n    background: white;\\r\\n}\\r\\n\\r\\n.review {\\r\\n    width: 100%;\\r\\n    border: solid;\\r\\n    border-width: 0.5px;\\r\\n    margin-top: 4em;\\r\\n    height: 22vh;\\r\\n}\\r\\n\\r\\n.review-left {\\r\\n    border-right: solid 0.5px;\\r\\n    text-align: center;\\r\\n    padding-top: 1em;\\r\\n    padding: 2em;\\r\\n}\\r\\n\\r\\n.review-right {\\r\\n    text-align: center;\\r\\n    padding-top: 1em;\\r\\n    padding: 2em;\\r\\n}\\r\\n\\r\\n.review-right ol {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.red {\\r\\n    height: 2em;\\r\\n    background: red;\\r\\n    border: solid;\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.yellow {\\r\\n    height: 2em;\\r\\n    background: yellow;\\r\\n    border: solid;\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.green {\\r\\n    height: 2em;\\r\\n    background: green;\\r\\n    border: solid;\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.default {\\r\\n    height: 2em;\\r\\n    background: whitesmoke;\\r\\n    border: solid;\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.passStatus {\\r\\n    text-align: center;\\r\\n    margin-top: 1em;\\r\\n}\\r\\n\\r\\n.checkers {\\r\\n    color: green;\\r\\n}\\r\\n\\r\\n.passStatus #red {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.passStatus #yellow {\\r\\n    color: yellow;\\r\\n}\\r\\n\\r\\n.passStatus #green {\\r\\n    color: green;\\r\\n}\"\n\n/***/ }),\n\n/***/ 651:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbRootModule\", function() { return NgbRootModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbModule\", function() { return NgbModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__accordion_accordion_module__ = __webpack_require__(261);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__alert_alert_module__ = __webpack_require__(263);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__buttons_buttons_module__ = __webpack_require__(265);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__carousel_carousel_module__ = __webpack_require__(268);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__collapse_collapse_module__ = __webpack_require__(270);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__ = __webpack_require__(272);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__dropdown_dropdown_module__ = __webpack_require__(282);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__modal_modal_module__ = __webpack_require__(284);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__pagination_pagination_module__ = __webpack_require__(291);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__popover_popover_module__ = __webpack_require__(293);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__progressbar_progressbar_module__ = __webpack_require__(296);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__rating_rating_module__ = __webpack_require__(298);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__tabset_tabset_module__ = __webpack_require__(300);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__timepicker_timepicker_module__ = __webpack_require__(302);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__tooltip_tooltip_module__ = __webpack_require__(304);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__typeahead_typeahead_module__ = __webpack_require__(306);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbAccordionModule\", function() { return __WEBPACK_IMPORTED_MODULE_1__accordion_accordion_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbAccordionConfig\", function() { return __WEBPACK_IMPORTED_MODULE_1__accordion_accordion_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbAccordion\", function() { return __WEBPACK_IMPORTED_MODULE_1__accordion_accordion_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbPanel\", function() { return __WEBPACK_IMPORTED_MODULE_1__accordion_accordion_module__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbPanelTitle\", function() { return __WEBPACK_IMPORTED_MODULE_1__accordion_accordion_module__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbPanelContent\", function() { return __WEBPACK_IMPORTED_MODULE_1__accordion_accordion_module__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbAlertModule\", function() { return __WEBPACK_IMPORTED_MODULE_2__alert_alert_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbAlertConfig\", function() { return __WEBPACK_IMPORTED_MODULE_2__alert_alert_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbAlert\", function() { return __WEBPACK_IMPORTED_MODULE_2__alert_alert_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbButtonsModule\", function() { return __WEBPACK_IMPORTED_MODULE_3__buttons_buttons_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbCheckBox\", function() { return __WEBPACK_IMPORTED_MODULE_3__buttons_buttons_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbRadioGroup\", function() { return __WEBPACK_IMPORTED_MODULE_3__buttons_buttons_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbCarouselModule\", function() { return __WEBPACK_IMPORTED_MODULE_4__carousel_carousel_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbCarouselConfig\", function() { return __WEBPACK_IMPORTED_MODULE_4__carousel_carousel_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbCarousel\", function() { return __WEBPACK_IMPORTED_MODULE_4__carousel_carousel_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbSlide\", function() { return __WEBPACK_IMPORTED_MODULE_4__carousel_carousel_module__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbCollapseModule\", function() { return __WEBPACK_IMPORTED_MODULE_5__collapse_collapse_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbCollapse\", function() { return __WEBPACK_IMPORTED_MODULE_5__collapse_collapse_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbCalendar\", function() { return __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbCalendarIslamicCivil\", function() { return __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbCalendarIslamicUmalqura\", function() { return __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbDatepickerModule\", function() { return __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"i\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbDatepickerI18n\", function() { return __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"h\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbDatepickerConfig\", function() { return __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbDateParserFormatter\", function() { return __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbDateAdapter\", function() { return __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbDatepicker\", function() { return __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbInputDatepicker\", function() { return __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"j\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbDropdownModule\", function() { return __WEBPACK_IMPORTED_MODULE_7__dropdown_dropdown_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbDropdownConfig\", function() { return __WEBPACK_IMPORTED_MODULE_7__dropdown_dropdown_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbDropdown\", function() { return __WEBPACK_IMPORTED_MODULE_7__dropdown_dropdown_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbModalModule\", function() { return __WEBPACK_IMPORTED_MODULE_8__modal_modal_module__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbModal\", function() { return __WEBPACK_IMPORTED_MODULE_8__modal_modal_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbActiveModal\", function() { return __WEBPACK_IMPORTED_MODULE_8__modal_modal_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbModalRef\", function() { return __WEBPACK_IMPORTED_MODULE_8__modal_modal_module__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ModalDismissReasons\", function() { return __WEBPACK_IMPORTED_MODULE_8__modal_modal_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbPaginationModule\", function() { return __WEBPACK_IMPORTED_MODULE_9__pagination_pagination_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbPaginationConfig\", function() { return __WEBPACK_IMPORTED_MODULE_9__pagination_pagination_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbPagination\", function() { return __WEBPACK_IMPORTED_MODULE_9__pagination_pagination_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbPopoverModule\", function() { return __WEBPACK_IMPORTED_MODULE_10__popover_popover_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbPopoverConfig\", function() { return __WEBPACK_IMPORTED_MODULE_10__popover_popover_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbPopover\", function() { return __WEBPACK_IMPORTED_MODULE_10__popover_popover_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbProgressbarModule\", function() { return __WEBPACK_IMPORTED_MODULE_11__progressbar_progressbar_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbProgressbarConfig\", function() { return __WEBPACK_IMPORTED_MODULE_11__progressbar_progressbar_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbProgressbar\", function() { return __WEBPACK_IMPORTED_MODULE_11__progressbar_progressbar_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbRatingModule\", function() { return __WEBPACK_IMPORTED_MODULE_12__rating_rating_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbRatingConfig\", function() { return __WEBPACK_IMPORTED_MODULE_12__rating_rating_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbRating\", function() { return __WEBPACK_IMPORTED_MODULE_12__rating_rating_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTabsetModule\", function() { return __WEBPACK_IMPORTED_MODULE_13__tabset_tabset_module__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTabsetConfig\", function() { return __WEBPACK_IMPORTED_MODULE_13__tabset_tabset_module__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTabset\", function() { return __WEBPACK_IMPORTED_MODULE_13__tabset_tabset_module__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTab\", function() { return __WEBPACK_IMPORTED_MODULE_13__tabset_tabset_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTabContent\", function() { return __WEBPACK_IMPORTED_MODULE_13__tabset_tabset_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTabTitle\", function() { return __WEBPACK_IMPORTED_MODULE_13__tabset_tabset_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTimepickerModule\", function() { return __WEBPACK_IMPORTED_MODULE_14__timepicker_timepicker_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTimepickerConfig\", function() { return __WEBPACK_IMPORTED_MODULE_14__timepicker_timepicker_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTimepicker\", function() { return __WEBPACK_IMPORTED_MODULE_14__timepicker_timepicker_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTooltipModule\", function() { return __WEBPACK_IMPORTED_MODULE_15__tooltip_tooltip_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTooltipConfig\", function() { return __WEBPACK_IMPORTED_MODULE_15__tooltip_tooltip_module__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTooltip\", function() { return __WEBPACK_IMPORTED_MODULE_15__tooltip_tooltip_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbHighlight\", function() { return __WEBPACK_IMPORTED_MODULE_16__typeahead_typeahead_module__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTypeaheadModule\", function() { return __WEBPACK_IMPORTED_MODULE_16__typeahead_typeahead_module__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTypeaheadConfig\", function() { return __WEBPACK_IMPORTED_MODULE_16__typeahead_typeahead_module__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NgbTypeahead\", function() { return __WEBPACK_IMPORTED_MODULE_16__typeahead_typeahead_module__[\"b\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar NGB_MODULES = [\n    __WEBPACK_IMPORTED_MODULE_1__accordion_accordion_module__[\"c\" /* NgbAccordionModule */], __WEBPACK_IMPORTED_MODULE_2__alert_alert_module__[\"c\" /* NgbAlertModule */], __WEBPACK_IMPORTED_MODULE_3__buttons_buttons_module__[\"a\" /* NgbButtonsModule */], __WEBPACK_IMPORTED_MODULE_4__carousel_carousel_module__[\"c\" /* NgbCarouselModule */], __WEBPACK_IMPORTED_MODULE_5__collapse_collapse_module__[\"b\" /* NgbCollapseModule */], __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"i\" /* NgbDatepickerModule */],\n    __WEBPACK_IMPORTED_MODULE_7__dropdown_dropdown_module__[\"c\" /* NgbDropdownModule */], __WEBPACK_IMPORTED_MODULE_8__modal_modal_module__[\"d\" /* NgbModalModule */], __WEBPACK_IMPORTED_MODULE_9__pagination_pagination_module__[\"c\" /* NgbPaginationModule */], __WEBPACK_IMPORTED_MODULE_10__popover_popover_module__[\"c\" /* NgbPopoverModule */], __WEBPACK_IMPORTED_MODULE_11__progressbar_progressbar_module__[\"c\" /* NgbProgressbarModule */], __WEBPACK_IMPORTED_MODULE_12__rating_rating_module__[\"c\" /* NgbRatingModule */],\n    __WEBPACK_IMPORTED_MODULE_13__tabset_tabset_module__[\"f\" /* NgbTabsetModule */], __WEBPACK_IMPORTED_MODULE_14__timepicker_timepicker_module__[\"c\" /* NgbTimepickerModule */], __WEBPACK_IMPORTED_MODULE_15__tooltip_tooltip_module__[\"c\" /* NgbTooltipModule */], __WEBPACK_IMPORTED_MODULE_16__typeahead_typeahead_module__[\"d\" /* NgbTypeaheadModule */]\n];\nvar NgbRootModule = (function () {\n    function NgbRootModule() {\n    }\n    NgbRootModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                    imports: [\n                        __WEBPACK_IMPORTED_MODULE_2__alert_alert_module__[\"c\" /* NgbAlertModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_3__buttons_buttons_module__[\"a\" /* NgbButtonsModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_5__collapse_collapse_module__[\"b\" /* NgbCollapseModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_11__progressbar_progressbar_module__[\"c\" /* NgbProgressbarModule */].forRoot(),\n                        __WEBPACK_IMPORTED_MODULE_15__tooltip_tooltip_module__[\"c\" /* NgbTooltipModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_16__typeahead_typeahead_module__[\"d\" /* NgbTypeaheadModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_1__accordion_accordion_module__[\"c\" /* NgbAccordionModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_4__carousel_carousel_module__[\"c\" /* NgbCarouselModule */].forRoot(),\n                        __WEBPACK_IMPORTED_MODULE_6__datepicker_datepicker_module__[\"i\" /* NgbDatepickerModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_7__dropdown_dropdown_module__[\"c\" /* NgbDropdownModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_8__modal_modal_module__[\"d\" /* NgbModalModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_9__pagination_pagination_module__[\"c\" /* NgbPaginationModule */].forRoot(),\n                        __WEBPACK_IMPORTED_MODULE_10__popover_popover_module__[\"c\" /* NgbPopoverModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_11__progressbar_progressbar_module__[\"c\" /* NgbProgressbarModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_12__rating_rating_module__[\"c\" /* NgbRatingModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_13__tabset_tabset_module__[\"f\" /* NgbTabsetModule */].forRoot(),\n                        __WEBPACK_IMPORTED_MODULE_14__timepicker_timepicker_module__[\"c\" /* NgbTimepickerModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_15__tooltip_tooltip_module__[\"c\" /* NgbTooltipModule */].forRoot()\n                    ],\n                    exports: NGB_MODULES\n                },] },\n    ];\n    /** @nocollapse */\n    NgbRootModule.ctorParameters = function () { return []; };\n    return NgbRootModule;\n}());\n\nvar NgbModule = (function () {\n    function NgbModule() {\n    }\n    NgbModule.forRoot = function () { return { ngModule: NgbRootModule }; };\n    NgbModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ imports: NGB_MODULES, exports: NGB_MODULES },] },\n    ];\n    /** @nocollapse */\n    NgbModule.ctorParameters = function () { return []; };\n    return NgbModule;\n}());\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 652:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDatepickerKeyMapService; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__datepicker_service__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngb_calendar__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_util__ = __webpack_require__(11);\n\n\n\n\nvar Key;\n(function (Key) {\n    Key[Key[\"Enter\"] = 13] = \"Enter\";\n    Key[Key[\"Space\"] = 32] = \"Space\";\n    Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n    Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n    Key[Key[\"End\"] = 35] = \"End\";\n    Key[Key[\"Home\"] = 36] = \"Home\";\n    Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\nvar NgbDatepickerKeyMapService = (function () {\n    function NgbDatepickerKeyMapService(_service, _calendar) {\n        var _this = this;\n        this._service = _service;\n        this._calendar = _calendar;\n        _service.model$.subscribe(function (model) {\n            _this._minDate = model.minDate;\n            _this._maxDate = model.maxDate;\n            _this._firstViewDate = model.firstDate;\n            _this._lastViewDate = model.lastDate;\n        });\n    }\n    NgbDatepickerKeyMapService.prototype.processKey = function (event) {\n        if (Key[Object(__WEBPACK_IMPORTED_MODULE_3__util_util__[\"i\" /* toString */])(event.which)]) {\n            switch (event.which) {\n                case Key.PageUp:\n                    this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n                    break;\n                case Key.PageDown:\n                    this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n                    break;\n                case Key.End:\n                    this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n                    break;\n                case Key.Home:\n                    this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n                    break;\n                case Key.ArrowLeft:\n                    this._service.focusMove('d', -1);\n                    break;\n                case Key.ArrowUp:\n                    this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n                    break;\n                case Key.ArrowRight:\n                    this._service.focusMove('d', 1);\n                    break;\n                case Key.ArrowDown:\n                    this._service.focusMove('d', this._calendar.getDaysPerWeek());\n                    break;\n                case Key.Enter:\n                case Key.Space:\n                    this._service.focusSelect();\n                    break;\n                default:\n                    return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    NgbDatepickerKeyMapService.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerKeyMapService.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__datepicker_service__[\"a\" /* NgbDatepickerService */], },\n        { type: __WEBPACK_IMPORTED_MODULE_2__ngb_calendar__[\"a\" /* NgbCalendar */], },\n    ]; };\n    return NgbDatepickerKeyMapService;\n}());\n\n//# sourceMappingURL=datepicker-keymap-service.js.map\n\n/***/ }),\n\n/***/ 653:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbCalendarIslamicUmalqura; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ngb_calendar_islamic_civil__ = __webpack_require__(280);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ngb_calendar_hijri__ = __webpack_require__(281);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngb_date__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_core__ = __webpack_require__(1);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\nvar GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nvar GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nvar HIJRI_BEGIN = 1300;\nvar HIJRI_END = 1600;\nvar ONE_DAY = 1000 * 60 * 60 * 24;\nvar ISLAMIC_CIVIL = new __WEBPACK_IMPORTED_MODULE_0__ngb_calendar_islamic_civil__[\"a\" /* NgbCalendarIslamicCivil */]();\nvar MONTH_LENGTH = [\n    '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n    '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n    '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n    '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n    '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n    '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n    '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n    '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n    '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n    '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n    '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n    '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n    '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n    '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n    '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n    '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n    '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n    '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n    '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n    '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n    '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n    '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n    '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n    '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n    '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n    '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n    '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n    '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n    '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n    '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n    '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n    '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n    '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n    '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n    '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n    '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n    '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n    '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n    '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n    '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n    '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n    '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n    '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n    '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n    '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n    '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n    '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n    '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n    '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n    '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n    '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n    '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n    '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n    '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n    '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n    '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n    '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n    '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n    '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n    '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n    '001010011101'\n];\nfunction getDaysDiff(date1, date2) {\n    var diff = Math.abs(date1.getTime() - date2.getTime());\n    return Math.round(diff / ONE_DAY);\n}\nvar NgbCalendarIslamicUmalqura = (function (_super) {\n    __extends(NgbCalendarIslamicUmalqura, _super);\n    function NgbCalendarIslamicUmalqura() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n    * `gdate` is s JS Date to be converted to Hijri.\n    */\n    /**\n      * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n      * `gdate` is s JS Date to be converted to Hijri.\n      */\n    NgbCalendarIslamicUmalqura.prototype.fromGregorian = /**\n      * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n      * `gdate` is s JS Date to be converted to Hijri.\n      */\n    function (gDate) {\n        var hDay = 1, hMonth = 0, hYear = 1300;\n        var daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n        if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n            var year = 1300;\n            for (var i = 0; i < MONTH_LENGTH.length; i++, year++) {\n                for (var j = 0; j < 12; j++) {\n                    var numOfDays = +MONTH_LENGTH[i][j] + 29;\n                    if (daysDiff <= numOfDays) {\n                        hDay = daysDiff + 1;\n                        if (hDay > numOfDays) {\n                            hDay = 1;\n                            j++;\n                        }\n                        if (j > 11) {\n                            j = 0;\n                            year++;\n                        }\n                        hMonth = j;\n                        hYear = year;\n                        return new __WEBPACK_IMPORTED_MODULE_2__ngb_date__[\"a\" /* NgbDate */](hYear, hMonth + 1, hDay);\n                    }\n                    daysDiff = daysDiff - numOfDays;\n                }\n            }\n        }\n        else {\n            return ISLAMIC_CIVIL.fromGregorian(gDate);\n        }\n    };\n    /**\n    * Converts the current Hijri date to Gregorian.\n    */\n    /**\n      * Converts the current Hijri date to Gregorian.\n      */\n    NgbCalendarIslamicUmalqura.prototype.toGregorian = /**\n      * Converts the current Hijri date to Gregorian.\n      */\n    function (hijriDate) {\n        var hYear = hijriDate.year;\n        var hMonth = hijriDate.month - 1;\n        var hDay = hijriDate.day;\n        var gDate = new Date(GREGORIAN_FIRST_DATE);\n        var dayDiff = hDay - 1;\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            for (var y = 0; y < hYear - HIJRI_BEGIN; y++) {\n                for (var m = 0; m < 12; m++) {\n                    dayDiff += +MONTH_LENGTH[y][m] + 29;\n                }\n            }\n            for (var m = 0; m < hMonth; m++) {\n                dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n            }\n            gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n        }\n        else {\n            gDate = ISLAMIC_CIVIL.toGregorian(hijriDate);\n        }\n        return gDate;\n    };\n    /**\n    * Returns the number of days in a specific Hijri month.\n    * `month` is 1 for Muharram, 2 for Safar, etc.\n    * `year` is any Hijri year.\n    */\n    /**\n      * Returns the number of days in a specific Hijri month.\n      * `month` is 1 for Muharram, 2 for Safar, etc.\n      * `year` is any Hijri year.\n      */\n    NgbCalendarIslamicUmalqura.prototype.getDaysInIslamicMonth = /**\n      * Returns the number of days in a specific Hijri month.\n      * `month` is 1 for Muharram, 2 for Safar, etc.\n      * `year` is any Hijri year.\n      */\n    function (month, year) {\n        if (year >= HIJRI_BEGIN && year <= HIJRI_END) {\n            var pos = year - HIJRI_BEGIN;\n            return MONTH_LENGTH[pos].charAt(month - 1) === '1' ? 30 : 29;\n        }\n        return ISLAMIC_CIVIL.getDaysInIslamicMonth(month, year);\n    };\n    NgbCalendarIslamicUmalqura.prototype.getNext = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        date = __WEBPACK_IMPORTED_MODULE_2__ngb_date__[\"a\" /* NgbDate */].from(date);\n        switch (period) {\n            case 'y':\n                date = this.setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this.setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this.setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    };\n    NgbCalendarIslamicUmalqura.prototype.getPrev = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    NgbCalendarIslamicUmalqura.prototype.getWeekday = function (date) {\n        var day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    NgbCalendarIslamicUmalqura.prototype.getWeekNumber = function (week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        var date = week[thursdayIndex];\n        var jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        var time = jsDate.getTime();\n        var MuhDate = this.toGregorian(new __WEBPACK_IMPORTED_MODULE_2__ngb_date__[\"a\" /* NgbDate */](date.year, 1, 1)); // Compare with Muharram 1\n        return Math.floor(Math.round((time - MuhDate.getTime()) / ONE_DAY) / 7) + 1;\n    };\n    NgbCalendarIslamicUmalqura.prototype.getToday = function () { return this.fromGregorian(new Date()); };\n    NgbCalendarIslamicUmalqura.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_3__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbCalendarIslamicUmalqura.ctorParameters = function () { return []; };\n    return NgbCalendarIslamicUmalqura;\n}(__WEBPACK_IMPORTED_MODULE_1__ngb_calendar_hijri__[\"a\" /* NgbCalendarHijri */]));\n\n//# sourceMappingURL=ngb-calendar-islamic-umalqura.js.map\n\n/***/ }),\n\n/***/ 654:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbTime; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util__ = __webpack_require__(11);\n\nvar NgbTime = (function () {\n    function NgbTime(hour, minute, second) {\n        this.hour = Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"h\" /* toInteger */])(hour);\n        this.minute = Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"h\" /* toInteger */])(minute);\n        this.second = Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"h\" /* toInteger */])(second);\n    }\n    NgbTime.prototype.changeHour = function (step) {\n        if (step === void 0) { step = 1; }\n        this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n    };\n    NgbTime.prototype.updateHour = function (hour) {\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(hour)) {\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n        }\n        else {\n            this.hour = NaN;\n        }\n    };\n    NgbTime.prototype.changeMinute = function (step) {\n        if (step === void 0) { step = 1; }\n        this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n    };\n    NgbTime.prototype.updateMinute = function (minute) {\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(minute)) {\n            this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n            this.changeHour(Math.floor(minute / 60));\n        }\n        else {\n            this.minute = NaN;\n        }\n    };\n    NgbTime.prototype.changeSecond = function (step) {\n        if (step === void 0) { step = 1; }\n        this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n    };\n    NgbTime.prototype.updateSecond = function (second) {\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(second)) {\n            this.second = second < 0 ? 60 + second % 60 : second % 60;\n            this.changeMinute(Math.floor(second / 60));\n        }\n        else {\n            this.second = NaN;\n        }\n    };\n    NgbTime.prototype.isValid = function (checkSecs) {\n        if (checkSecs === void 0) { checkSecs = true; }\n        return Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(this.hour) && Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(this.minute) && (checkSecs ? Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"d\" /* isNumber */])(this.second) : true);\n    };\n    NgbTime.prototype.toString = function () { return (this.hour || 0) + \":\" + (this.minute || 0) + \":\" + (this.second || 0); };\n    return NgbTime;\n}());\n\n//# sourceMappingURL=ngb-time.js.map\n\n/***/ }),\n\n/***/ 655:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.environment = {\r\n    production: false,\r\n};\r\n\n\n/***/ }),\n\n/***/ 73:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbButtonLabel; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\nvar NgbButtonLabel = (function () {\n    function NgbButtonLabel() {\n    }\n    NgbButtonLabel.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: '[ngbButtonLabel]',\n                    host: { '[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbButtonLabel.ctorParameters = function () { return []; };\n    return NgbButtonLabel;\n}());\n\n//# sourceMappingURL=label.js.map\n\n/***/ }),\n\n/***/ 74:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgbDateAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgbDateStructAdapter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\n * NgbDateStruct model.\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n */\nvar NgbDateAdapter = (function () {\n    function NgbDateAdapter() {\n    }\n    NgbDateAdapter.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbDateAdapter.ctorParameters = function () { return []; };\n    return NgbDateAdapter;\n}());\n\nvar NgbDateStructAdapter = (function (_super) {\n    __extends(NgbDateStructAdapter, _super);\n    function NgbDateStructAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param  {NgbDateStruct} value\n     * @return {NgbDateStruct}\n     */\n    /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    NgbDateStructAdapter.prototype.fromModel = /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    function (date) {\n        return (date && date.year && date.month && date.day) ? { year: date.year, month: date.month, day: date.day } : null;\n    };\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param  {NgbDateStruct} value\n     * @return {NgbDateStruct}\n     */\n    /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    NgbDateStructAdapter.prototype.toModel = /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    function (date) {\n        return (date && date.year && date.month && date.day) ? { year: date.year, month: date.month, day: date.day } : null;\n    };\n    NgbDateStructAdapter.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NgbDateStructAdapter.ctorParameters = function () { return []; };\n    return NgbDateStructAdapter;\n}(NgbDateAdapter));\n\n//# sourceMappingURL=ngb-date-adapter.js.map\n\n/***/ }),\n\n/***/ 75:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ContentRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PopupService; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n\nvar ContentRef = (function () {\n    function ContentRef(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n    return ContentRef;\n}());\n\nvar PopupService = (function () {\n    function PopupService(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver) {\n        this._type = _type;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n    }\n    PopupService.prototype.open = function (content, context) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, context);\n            this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), 0, this._injector, this._contentRef.nodes);\n        }\n        return this._windowRef;\n    };\n    PopupService.prototype.close = function () {\n        if (this._windowRef) {\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n            this._windowRef = null;\n            if (this._contentRef.viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n                this._contentRef = null;\n            }\n        }\n    };\n    PopupService.prototype._getContentRef = function (content, context) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"]) {\n            var viewRef = this._viewContainerRef.createEmbeddedView(content, context);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._renderer.createText(\"\" + content)]]);\n        }\n    };\n    return PopupService;\n}());\n\n//# sourceMappingURL=popup.js.map\n\n/***/ })\n\n},[644]);\n\n\n// WEBPACK FOOTER //\n// app.5217ceb5f868c32b049b.js","export function toInteger(value) {\n    return parseInt(\"\" + value, 10);\n}\nexport function toString(value) {\n    return (value !== undefined && value !== null) ? \"\" + value : '';\n}\nexport function getValueInRange(value, max, min) {\n    if (min === void 0) { min = 0; }\n    return Math.max(Math.min(value, max), min);\n}\nexport function isString(value) {\n    return typeof value === 'string';\n}\nexport function isNumber(value) {\n    return !isNaN(toInteger(value));\n}\nexport function isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nexport function isDefined(value) {\n    return value !== undefined && value !== null;\n}\nexport function padNumber(value) {\n    if (isNumber(value)) {\n        return (\"0\" + value).slice(-2);\n    }\n    else {\n        return '';\n    }\n}\nexport function regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/util/util.js\n// module id = 11\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbAccordion component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the accordions used in the application.\n */\nvar NgbAccordionConfig = (function () {\n    function NgbAccordionConfig() {\n        this.closeOthers = false;\n    }\n    NgbAccordionConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbAccordionConfig.ctorParameters = function () { return []; };\n    return NgbAccordionConfig;\n}());\nexport { NgbAccordionConfig };\n//# sourceMappingURL=accordion-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/accordion/accordion-config.js\n// module id = 114\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbAlert component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the alerts used in the application.\n */\nvar NgbAlertConfig = (function () {\n    function NgbAlertConfig() {\n        this.dismissible = true;\n        this.type = 'warning';\n    }\n    NgbAlertConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbAlertConfig.ctorParameters = function () { return []; };\n    return NgbAlertConfig;\n}());\nexport { NgbAlertConfig };\n//# sourceMappingURL=alert-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/alert/alert-config.js\n// module id = 115\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbCarousel component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the carousels used in the application.\n */\nvar NgbCarouselConfig = (function () {\n    function NgbCarouselConfig() {\n        this.interval = 5000;\n        this.wrap = true;\n        this.keyboard = true;\n    }\n    NgbCarouselConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbCarouselConfig.ctorParameters = function () { return []; };\n    return NgbCarouselConfig;\n}());\nexport { NgbCarouselConfig };\n//# sourceMappingURL=carousel-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/carousel/carousel-config.js\n// module id = 116\n// module chunks = 1","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, TemplateRef, forwardRef, EventEmitter, Output, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgbCalendar } from './ngb-calendar';\nimport { NgbDate } from './ngb-date';\nimport { NgbDatepickerService } from './datepicker-service';\nimport { NgbDatepickerKeyMapService } from './datepicker-keymap-service';\nimport { NavigationEvent } from './datepicker-view-model';\nimport { NgbDatepickerConfig } from './datepicker-config';\nimport { NgbDateAdapter } from './ngb-date-adapter';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\nimport { isChangedDate } from './datepicker-tools';\nvar NGB_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NgbDatepicker; }),\n    multi: true\n};\n/**\n * A lightweight and highly configurable datepicker directive\n */\nvar NgbDatepicker = (function () {\n    function NgbDatepicker(_keyMapService, _service, _calendar, i18n, config, _cd, _elementRef, _ngbDateAdapter) {\n        var _this = this;\n        this._keyMapService = _keyMapService;\n        this._service = _service;\n        this._calendar = _calendar;\n        this.i18n = i18n;\n        this._cd = _cd;\n        this._elementRef = _elementRef;\n        this._ngbDateAdapter = _ngbDateAdapter;\n        /**\n           * An event fired when navigation happens and currently displayed month changes.\n           * See NgbDatepickerNavigateEvent for the payload info.\n           */\n        this.navigate = new EventEmitter();\n        /**\n           * An event fired when user selects a date using keyboard or mouse.\n           * The payload of the event is currently selected NgbDateStruct.\n           */\n        this.select = new EventEmitter();\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\n            'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n            .forEach(function (input) { return _this[input] = config[input]; });\n        this._selectSubscription = _service.select$.subscribe(function (date) { _this.select.emit(date.toStruct()); });\n        this._subscription = _service.model$.subscribe(function (model) {\n            var newDate = model.firstDate;\n            var oldDate = _this.model ? _this.model.firstDate : null;\n            var newSelectedDate = model.selectedDate;\n            var oldSelectedDate = _this.model ? _this.model.selectedDate : null;\n            _this.model = model;\n            // handling selection change\n            if (isChangedDate(newSelectedDate, oldSelectedDate)) {\n                _this.onTouched();\n                _this.onChange(_this._ngbDateAdapter.toModel(newSelectedDate));\n            }\n            // emitting navigation event if the first month changes\n            if (!newDate.equals(oldDate)) {\n                _this.navigate.emit({\n                    current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                    next: { year: newDate.year, month: newDate.month }\n                });\n            }\n            _cd.markForCheck();\n        });\n    }\n    /**\n     * Manually focus the datepicker\n     */\n    /**\n       * Manually focus the datepicker\n       */\n    NgbDatepicker.prototype.focus = /**\n       * Manually focus the datepicker\n       */\n    function () { this._elementRef.nativeElement.focus(); };\n    /**\n     * Navigates current view to provided date.\n     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     * Use 'startDate' input as an alternative\n     */\n    /**\n       * Navigates current view to provided date.\n       * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date provided calendar will open current month.\n       * Use 'startDate' input as an alternative\n       */\n    NgbDatepicker.prototype.navigateTo = /**\n       * Navigates current view to provided date.\n       * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date provided calendar will open current month.\n       * Use 'startDate' input as an alternative\n       */\n    function (date) { this._service.open(NgbDate.from(date)); };\n    NgbDatepicker.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n        this._selectSubscription.unsubscribe();\n    };\n    NgbDatepicker.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.model === undefined) {\n            ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate'].forEach(function (input) { return _this._service[input] = _this[input]; });\n            this.navigateTo(this.startDate);\n        }\n    };\n    NgbDatepicker.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate']\n            .filter(function (input) { return input in changes; })\n            .forEach(function (input) { return _this._service[input] = _this[input]; });\n        if ('startDate' in changes) {\n            this.navigateTo(this.startDate);\n        }\n    };\n    NgbDatepicker.prototype.onDateSelect = function (date) {\n        this._service.focus(date);\n        this._service.select(date, { emitEvent: true });\n    };\n    NgbDatepicker.prototype.onKeyDown = function (event) { this._keyMapService.processKey(event); };\n    NgbDatepicker.prototype.onNavigateDateSelect = function (date) { this._service.open(date); };\n    NgbDatepicker.prototype.onNavigateEvent = function (event) {\n        switch (event) {\n            case NavigationEvent.PREV:\n                this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                break;\n            case NavigationEvent.NEXT:\n                this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                break;\n        }\n    };\n    NgbDatepicker.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbDatepicker.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbDatepicker.prototype.setDisabledState = function (isDisabled) { this._service.disabled = isDisabled; };\n    NgbDatepicker.prototype.showFocus = function (focusVisible) { this._service.focusVisible = focusVisible; };\n    NgbDatepicker.prototype.writeValue = function (value) { this._service.select(NgbDate.from(this._ngbDateAdapter.fromModel(value))); };\n    NgbDatepicker.decorators = [\n        { type: Component, args: [{\n                    exportAs: 'ngbDatepicker',\n                    selector: 'ngb-datepicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'tabindex': '0',\n                        '[attr.tabindex]': 'model.disabled ? undefined : \"0\"',\n                        '(blur)': 'showFocus(false)',\n                        '(focus)': 'showFocus(true)',\n                        '(keydown)': 'onKeyDown($event)'\n                    },\n                    styles: [\"\\n    :host {\\n      border: 1px solid rgba(0, 0, 0, 0.125);\\n      border-radius: 0.25rem;\\n      display: inline-block;\\n    }\\n    .ngb-dp-month {\\n      pointer-events: none;\\n    }\\n    .ngb-dp-header {\\n      border-bottom: 0px;\\n      border-radius: .25rem 0.25rem 0rem 0rem;\\n      padding-top: 0.25rem;\\n    }\\n    ngb-datepicker-month-view {\\n      pointer-events: auto;\\n    }\\n    .ngb-dp-month-name {\\n      font-size: larger;\\n      height: 2rem;\\n      line-height: 2rem;\\n      text-align: center;\\n    }\\n    /deep/ .ngb-dp-month + .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week {\\n      padding-left: 1rem;\\n    }\\n    /deep/ .ngb-dp-month + .ngb-dp-month > .ngb-dp-month-name {\\n      padding-left: 1rem;\\n    }\\n    /deep/ .ngb-dp-month:last-child .ngb-dp-week {\\n      padding-right: .25rem;\\n    }\\n    /deep/ .ngb-dp-month:first-child .ngb-dp-week {\\n      padding-left: .25rem;\\n    }\\n    /deep/ .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week:last-child {\\n      padding-bottom: .25rem;\\n    }\\n    .ngb-dp-months {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n    }\\n  \"],\n                    template: \"\\n    <ng-template #dt let-date=\\\"date\\\" let-currentMonth=\\\"currentMonth\\\" let-selected=\\\"selected\\\" let-disabled=\\\"disabled\\\" let-focused=\\\"focused\\\">\\n      <div ngbDatepickerDayView\\n        [date]=\\\"date\\\"\\n        [currentMonth]=\\\"currentMonth\\\"\\n        [selected]=\\\"selected\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [focused]=\\\"focused\\\">\\n      </div>\\n    </ng-template>\\n\\n    <div class=\\\"ngb-dp-header bg-light\\\">\\n      <ngb-datepicker-navigation *ngIf=\\\"navigation !== 'none'\\\"\\n        [date]=\\\"model.firstDate\\\"\\n        [months]=\\\"model.months\\\"\\n        [disabled]=\\\"model.disabled\\\"\\n        [showSelect]=\\\"model.navigation === 'select'\\\"\\n        [prevDisabled]=\\\"model.prevDisabled\\\"\\n        [nextDisabled]=\\\"model.nextDisabled\\\"\\n        [selectBoxes]=\\\"model.selectBoxes\\\"\\n        (navigate)=\\\"onNavigateEvent($event)\\\"\\n        (select)=\\\"onNavigateDateSelect($event)\\\">\\n      </ngb-datepicker-navigation>\\n    </div>\\n\\n    <div class=\\\"ngb-dp-months\\\">\\n      <ng-template ngFor let-month [ngForOf]=\\\"model.months\\\" let-i=\\\"index\\\">\\n        <div class=\\\"ngb-dp-month d-block\\\">\\n          <div *ngIf=\\\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\\\"\\n                class=\\\"ngb-dp-month-name bg-light\\\">\\n            {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\\n          </div>\\n          <ngb-datepicker-month-view\\n            [month]=\\\"month\\\"\\n            [dayTemplate]=\\\"dayTemplate || dt\\\"\\n            [showWeekdays]=\\\"showWeekdays\\\"\\n            [showWeekNumbers]=\\\"showWeekNumbers\\\"\\n            [outsideDays]=\\\"(displayMonths === 1 ? outsideDays : 'hidden')\\\"\\n            (select)=\\\"onDateSelect($event)\\\">\\n          </ngb-datepicker-month-view>\\n        </div>\\n      </ng-template>\\n    </div>\\n  \",\n                    providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepicker.ctorParameters = function () { return [\n        { type: NgbDatepickerKeyMapService, },\n        { type: NgbDatepickerService, },\n        { type: NgbCalendar, },\n        { type: NgbDatepickerI18n, },\n        { type: NgbDatepickerConfig, },\n        { type: ChangeDetectorRef, },\n        { type: ElementRef, },\n        { type: NgbDateAdapter, },\n    ]; };\n    NgbDatepicker.propDecorators = {\n        \"dayTemplate\": [{ type: Input },],\n        \"displayMonths\": [{ type: Input },],\n        \"firstDayOfWeek\": [{ type: Input },],\n        \"markDisabled\": [{ type: Input },],\n        \"maxDate\": [{ type: Input },],\n        \"minDate\": [{ type: Input },],\n        \"navigation\": [{ type: Input },],\n        \"outsideDays\": [{ type: Input },],\n        \"showWeekdays\": [{ type: Input },],\n        \"showWeekNumbers\": [{ type: Input },],\n        \"startDate\": [{ type: Input },],\n        \"navigate\": [{ type: Output },],\n        \"select\": [{ type: Output },],\n    };\n    return NgbDatepicker;\n}());\nexport { NgbDatepicker };\n//# sourceMappingURL=datepicker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.js\n// module id = 117\n// module chunks = 1","import { NgbCalendar } from './ngb-calendar';\nimport { NgbDate } from './ngb-date';\nimport { Injectable } from '@angular/core';\nimport { isInteger, toInteger } from '../util/util';\nimport { Subject } from 'rxjs/Subject';\nimport { buildMonths, checkDateInRange, checkMinBeforeMax, isChangedDate, isDateSelectable, generateSelectBoxYears, generateSelectBoxMonths, prevMonthDisabled, nextMonthDisabled } from './datepicker-tools';\nimport { filter } from 'rxjs/operator/filter';\nvar NgbDatepickerService = (function () {\n    function NgbDatepickerService(_calendar) {\n        this._calendar = _calendar;\n        this._model$ = new Subject();\n        this._select$ = new Subject();\n        this._state = {\n            disabled: false,\n            displayMonths: 1,\n            firstDayOfWeek: 1,\n            focusVisible: false,\n            months: [],\n            navigation: 'select',\n            prevDisabled: false,\n            nextDisabled: false,\n            selectBoxes: { years: [], months: [] },\n            selectedDate: null\n        };\n    }\n    Object.defineProperty(NgbDatepickerService.prototype, \"model$\", {\n        get: function () {\n            return filter.call(this._model$.asObservable(), function (model) { return model.months.length > 0; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"select$\", {\n        get: function () { return filter.call(this._select$.asObservable(), function (date) { return date !== null; }); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"disabled\", {\n        set: function (disabled) {\n            if (this._state.disabled !== disabled) {\n                this._nextState({ disabled: disabled });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"displayMonths\", {\n        set: function (displayMonths) {\n            displayMonths = toInteger(displayMonths);\n            if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n                this._nextState({ displayMonths: displayMonths });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"firstDayOfWeek\", {\n        set: function (firstDayOfWeek) {\n            firstDayOfWeek = toInteger(firstDayOfWeek);\n            if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n                this._nextState({ firstDayOfWeek: firstDayOfWeek });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"focusVisible\", {\n        set: function (focusVisible) {\n            if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n                this._nextState({ focusVisible: focusVisible });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"maxDate\", {\n        set: function (date) {\n            var maxDate = this.toValidDate(date, null);\n            if (isChangedDate(this._state.maxDate, maxDate)) {\n                this._nextState({ maxDate: maxDate });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"markDisabled\", {\n        set: function (markDisabled) {\n            if (this._state.markDisabled !== markDisabled) {\n                this._nextState({ markDisabled: markDisabled });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"minDate\", {\n        set: function (date) {\n            var minDate = this.toValidDate(date, null);\n            if (isChangedDate(this._state.minDate, minDate)) {\n                this._nextState({ minDate: minDate });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"navigation\", {\n        set: function (navigation) {\n            if (this._state.navigation !== navigation) {\n                this._nextState({ navigation: navigation });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgbDatepickerService.prototype.focus = function (date) {\n        if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n            this._nextState({ focusDate: date });\n        }\n    };\n    NgbDatepickerService.prototype.focusMove = function (period, number) {\n        this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n    };\n    NgbDatepickerService.prototype.focusSelect = function () {\n        if (isDateSelectable(this._state.focusDate, this._state)) {\n            this.select(this._state.focusDate, { emitEvent: true });\n        }\n    };\n    NgbDatepickerService.prototype.open = function (date) {\n        var firstDate = this.toValidDate(date, this._calendar.getToday());\n        if (!this._state.disabled) {\n            this._nextState({ firstDate: firstDate });\n        }\n    };\n    NgbDatepickerService.prototype.select = function (date, options) {\n        if (options === void 0) { options = {}; }\n        var selectedDate = this.toValidDate(date, null);\n        if (!this._state.disabled) {\n            if (isChangedDate(this._state.selectedDate, selectedDate)) {\n                this._nextState({ selectedDate: selectedDate });\n            }\n            if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n                this._select$.next(selectedDate);\n            }\n        }\n    };\n    NgbDatepickerService.prototype.toValidDate = function (date, defaultValue) {\n        var ngbDate = NgbDate.from(date);\n        if (defaultValue === undefined) {\n            defaultValue = this._calendar.getToday();\n        }\n        return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    };\n    NgbDatepickerService.prototype._nextState = function (patch) {\n        var newState = this._updateState(patch);\n        this._patchContexts(newState);\n        this._state = newState;\n        this._model$.next(this._state);\n    };\n    NgbDatepickerService.prototype._patchContexts = function (state) {\n        state.months.forEach(function (month) {\n            month.weeks.forEach(function (week) {\n                week.days.forEach(function (day) {\n                    // patch focus flag\n                    if (state.focusDate) {\n                        day.context.focused = state.focusDate.equals(day.date) && state.focusVisible;\n                    }\n                    // override context disabled\n                    if (state.disabled === true) {\n                        day.context.disabled = true;\n                    }\n                    // patch selection flag\n                    if (state.selectedDate !== undefined) {\n                        day.context.selected = state.selectedDate !== null && state.selectedDate.equals(day.date);\n                    }\n                });\n            });\n        });\n    };\n    NgbDatepickerService.prototype._updateState = function (patch) {\n        // patching fields\n        var state = Object.assign({}, this._state, patch);\n        var startDate = state.firstDate;\n        // min/max dates changed\n        if ('minDate' in patch || 'maxDate' in patch) {\n            checkMinBeforeMax(state.minDate, state.maxDate);\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n        }\n        // disabled\n        if ('disabled' in patch) {\n            state.focusVisible = false;\n        }\n        // initial rebuild via 'select()'\n        if ('selectedDate' in patch && this._state.months.length === 0) {\n            startDate = state.selectedDate;\n        }\n        // focus date changed\n        if ('focusDate' in patch) {\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n            // nothing to rebuild if only focus changed and it is still visible\n            if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n                !state.focusDate.after(state.lastDate)) {\n                return state;\n            }\n        }\n        // first date changed\n        if ('firstDate' in patch) {\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.firstDate;\n        }\n        // rebuilding months\n        if (startDate) {\n            var forceRebuild = 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch ||\n                'maxDate' in patch || 'disabled' in patch;\n            var months = buildMonths(this._calendar, startDate, state, forceRebuild);\n            // updating months and boundary dates\n            state.months = months;\n            state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n            state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n            // reset selected date if 'markDisabled' returns true\n            if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n                state.selectedDate = null;\n            }\n            // adjusting focus after months were built\n            if ('firstDate' in patch) {\n                if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n                    state.focusDate.after(state.lastDate)) {\n                    state.focusDate = startDate;\n                }\n            }\n            // adjusting months/years for the select box navigation\n            var yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n            var monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n            if (state.navigation === 'select') {\n                // years ->  boundaries (min/max were changed)\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                    state.selectBoxes.years = generateSelectBoxYears(state.focusDate, state.minDate, state.maxDate);\n                }\n                // months -> when current year or boundaries change\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                    state.selectBoxes.months =\n                        generateSelectBoxMonths(this._calendar, state.focusDate, state.minDate, state.maxDate);\n                }\n            }\n            else {\n                state.selectBoxes = { years: [], months: [] };\n            }\n            // updating navigation arrows -> boundaries change (min/max) or month/year changes\n            if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n                state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n            }\n        }\n        return state;\n    };\n    NgbDatepickerService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDatepickerService.ctorParameters = function () { return [\n        { type: NgbCalendar, },\n    ]; };\n    return NgbDatepickerService;\n}());\nexport { NgbDatepickerService };\n//# sourceMappingURL=datepicker-service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.js\n// module id = 118\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbDatepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nvar NgbDatepickerConfig = (function () {\n    function NgbDatepickerConfig() {\n        this.displayMonths = 1;\n        this.firstDayOfWeek = 1;\n        this.navigation = 'select';\n        this.outsideDays = 'visible';\n        this.showWeekdays = true;\n        this.showWeekNumbers = false;\n    }\n    NgbDatepickerConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDatepickerConfig.ctorParameters = function () { return []; };\n    return NgbDatepickerConfig;\n}());\nexport { NgbDatepickerConfig };\n//# sourceMappingURL=datepicker-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.js\n// module id = 119\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { padNumber, toInteger, isNumber } from '../util/util';\n/**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\nvar /**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\nNgbDateParserFormatter = (function () {\n    function NgbDateParserFormatter() {\n    }\n    return NgbDateParserFormatter;\n}());\n/**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\nexport { NgbDateParserFormatter };\nvar NgbDateISOParserFormatter = (function (_super) {\n    __extends(NgbDateISOParserFormatter, _super);\n    function NgbDateISOParserFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NgbDateISOParserFormatter.prototype.parse = function (value) {\n        if (value) {\n            var dateParts = value.trim().split('-');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return { year: toInteger(dateParts[0]), month: null, day: null };\n            }\n            else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null };\n            }\n            else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2]) };\n            }\n        }\n        return null;\n    };\n    NgbDateISOParserFormatter.prototype.format = function (date) {\n        return date ?\n            date.year + \"-\" + (isNumber(date.month) ? padNumber(date.month) : '') + \"-\" + (isNumber(date.day) ? padNumber(date.day) : '') :\n            '';\n    };\n    return NgbDateISOParserFormatter;\n}(NgbDateParserFormatter));\nexport { NgbDateISOParserFormatter };\n//# sourceMappingURL=ngb-date-parser-formatter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.js\n// module id = 120\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbDropdown directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nvar NgbDropdownConfig = (function () {\n    function NgbDropdownConfig() {\n        this.autoClose = true;\n        this.placement = 'bottom-left';\n    }\n    NgbDropdownConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDropdownConfig.ctorParameters = function () { return []; };\n    return NgbDropdownConfig;\n}());\nexport { NgbDropdownConfig };\n//# sourceMappingURL=dropdown-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.js\n// module id = 121\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbPagination component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nvar NgbPaginationConfig = (function () {\n    function NgbPaginationConfig() {\n        this.disabled = false;\n        this.boundaryLinks = false;\n        this.directionLinks = true;\n        this.ellipses = true;\n        this.maxSize = 0;\n        this.pageSize = 10;\n        this.rotate = false;\n    }\n    NgbPaginationConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbPaginationConfig.ctorParameters = function () { return []; };\n    return NgbPaginationConfig;\n}());\nexport { NgbPaginationConfig };\n//# sourceMappingURL=pagination-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/pagination/pagination-config.js\n// module id = 122\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbPopover directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nvar NgbPopoverConfig = (function () {\n    function NgbPopoverConfig() {\n        this.placement = 'top';\n        this.triggers = 'click';\n        this.disablePopover = false;\n    }\n    NgbPopoverConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbPopoverConfig.ctorParameters = function () { return []; };\n    return NgbPopoverConfig;\n}());\nexport { NgbPopoverConfig };\n//# sourceMappingURL=popover-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/popover/popover-config.js\n// module id = 123\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbProgressbar component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nvar NgbProgressbarConfig = (function () {\n    function NgbProgressbarConfig() {\n        this.max = 100;\n        this.animated = false;\n        this.striped = false;\n        this.showValue = false;\n    }\n    NgbProgressbarConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbProgressbarConfig.ctorParameters = function () { return []; };\n    return NgbProgressbarConfig;\n}());\nexport { NgbProgressbarConfig };\n//# sourceMappingURL=progressbar-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.js\n// module id = 124\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nvar NgbRatingConfig = (function () {\n    function NgbRatingConfig() {\n        this.max = 10;\n        this.readonly = false;\n        this.resettable = false;\n    }\n    NgbRatingConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbRatingConfig.ctorParameters = function () { return []; };\n    return NgbRatingConfig;\n}());\nexport { NgbRatingConfig };\n//# sourceMappingURL=rating-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/rating/rating-config.js\n// module id = 125\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbTabset component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\nvar NgbTabsetConfig = (function () {\n    function NgbTabsetConfig() {\n        this.justify = 'start';\n        this.orientation = 'horizontal';\n        this.type = 'tabs';\n    }\n    NgbTabsetConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbTabsetConfig.ctorParameters = function () { return []; };\n    return NgbTabsetConfig;\n}());\nexport { NgbTabsetConfig };\n//# sourceMappingURL=tabset-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/tabset/tabset-config.js\n// module id = 126\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbTimepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nvar NgbTimepickerConfig = (function () {\n    function NgbTimepickerConfig() {\n        this.meridian = false;\n        this.spinners = true;\n        this.seconds = false;\n        this.hourStep = 1;\n        this.minuteStep = 1;\n        this.secondStep = 1;\n        this.disabled = false;\n        this.readonlyInputs = false;\n        this.size = 'medium';\n    }\n    NgbTimepickerConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbTimepickerConfig.ctorParameters = function () { return []; };\n    return NgbTimepickerConfig;\n}());\nexport { NgbTimepickerConfig };\n//# sourceMappingURL=timepicker-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.js\n// module id = 127\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbTooltip directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nvar NgbTooltipConfig = (function () {\n    function NgbTooltipConfig() {\n        this.placement = 'top';\n        this.triggers = 'hover';\n        this.disableTooltip = false;\n    }\n    NgbTooltipConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbTooltipConfig.ctorParameters = function () { return []; };\n    return NgbTooltipConfig;\n}());\nexport { NgbTooltipConfig };\n//# sourceMappingURL=tooltip-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.js\n// module id = 128\n// module chunks = 1","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { toString } from '../util/util';\nvar NgbTypeaheadWindow = (function () {\n    function NgbTypeaheadWindow() {\n        this.activeIdx = 0;\n        /**\n           * Flag indicating if the first row should be active initially\n           */\n        this.focusFirst = true;\n        /**\n           * A function used to format a given result before display. This function should return a formatted string without any\n           * HTML markup\n           */\n        this.formatter = toString;\n        /**\n           * Event raised when user selects a particular result row\n           */\n        this.selectEvent = new EventEmitter();\n        this.activeChangeEvent = new EventEmitter();\n    }\n    NgbTypeaheadWindow.prototype.hasActive = function () { return this.activeIdx > -1 && this.activeIdx < this.results.length; };\n    NgbTypeaheadWindow.prototype.getActive = function () { return this.results[this.activeIdx]; };\n    NgbTypeaheadWindow.prototype.markActive = function (activeIdx) {\n        this.activeIdx = activeIdx;\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.next = function () {\n        if (this.activeIdx === this.results.length - 1) {\n            this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n        }\n        else {\n            this.activeIdx++;\n        }\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.prev = function () {\n        if (this.activeIdx < 0) {\n            this.activeIdx = this.results.length - 1;\n        }\n        else if (this.activeIdx === 0) {\n            this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n        }\n        else {\n            this.activeIdx--;\n        }\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.resetActive = function () {\n        this.activeIdx = this.focusFirst ? 0 : -1;\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.select = function (item) { this.selectEvent.emit(item); };\n    NgbTypeaheadWindow.prototype.ngOnInit = function () { this.resetActive(); };\n    NgbTypeaheadWindow.prototype._activeChanged = function () {\n        this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    };\n    NgbTypeaheadWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-typeahead-window',\n                    exportAs: 'ngbTypeaheadWindow',\n                    host: { 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id' },\n                    template: \"\\n    <ng-template #rt let-result=\\\"result\\\" let-term=\\\"term\\\" let-formatter=\\\"formatter\\\">\\n      <ngb-highlight [result]=\\\"formatter(result)\\\" [term]=\\\"term\\\"></ngb-highlight>\\n    </ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"results\\\" let-result let-idx=\\\"index\\\">\\n      <button type=\\\"button\\\" class=\\\"dropdown-item\\\" role=\\\"option\\\"\\n        [id]=\\\"id + '-' + idx\\\"\\n        [class.active]=\\\"idx === activeIdx\\\"\\n        (mouseenter)=\\\"markActive(idx)\\\"\\n        (click)=\\\"select(result)\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"resultTemplate || rt\\\"\\n          [ngTemplateOutletContext]=\\\"{result: result, term: term, formatter: formatter}\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTypeaheadWindow.ctorParameters = function () { return []; };\n    NgbTypeaheadWindow.propDecorators = {\n        \"id\": [{ type: Input },],\n        \"focusFirst\": [{ type: Input },],\n        \"results\": [{ type: Input },],\n        \"term\": [{ type: Input },],\n        \"formatter\": [{ type: Input },],\n        \"resultTemplate\": [{ type: Input },],\n        \"selectEvent\": [{ type: Output, args: ['select',] },],\n        \"activeChangeEvent\": [{ type: Output, args: ['activeChange',] },],\n    };\n    return NgbTypeaheadWindow;\n}());\nexport { NgbTypeaheadWindow };\n//# sourceMappingURL=typeahead-window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.js\n// module id = 129\n// module chunks = 1","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbTypeahead component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nvar NgbTypeaheadConfig = (function () {\n    function NgbTypeaheadConfig() {\n        this.editable = true;\n        this.focusFirst = true;\n        this.showHint = false;\n        this.placement = 'bottom-left';\n    }\n    NgbTypeaheadConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbTypeaheadConfig.ctorParameters = function () { return []; };\n    return NgbTypeaheadConfig;\n}());\nexport { NgbTypeaheadConfig };\n//# sourceMappingURL=typeahead-config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.js\n// module id = 130\n// module chunks = 1","var NgbDate = (function () {\n    function NgbDate(year, month, day) {\n        this.year = year;\n        this.month = month;\n        this.day = day;\n    }\n    NgbDate.from = function (date) {\n        return date ? new NgbDate(date.year, date.month, date.day ? date.day : 1) : null;\n    };\n    NgbDate.prototype.equals = function (other) {\n        return other && this.year === other.year && this.month === other.month && this.day === other.day;\n    };\n    NgbDate.prototype.before = function (other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    };\n    NgbDate.prototype.after = function (other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    };\n    NgbDate.prototype.toStruct = function () { return { year: this.year, month: this.month, day: this.day }; };\n    NgbDate.prototype.toString = function () { return this.year + \"-\" + this.month + \"-\" + this.day; };\n    return NgbDate;\n}());\nexport { NgbDate };\n//# sourceMappingURL=ngb-date.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.js\n// module id = 20\n// module chunks = 1","/**\n * @license Angular v5.2.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { __assign, __extends } from 'tslib';\nimport { Directive, ElementRef, EventEmitter, Host, Inject, Injectable, InjectionToken, Injector, Input, NgModule, Optional, Output, Renderer2, Self, SkipSelf, Version, forwardRef, ɵisObservable, ɵisPromise, ɵlooseIdentical } from '@angular/core';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { map } from 'rxjs/operator/map';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControlDirective = /** @class */ (function () {\n    function AbstractControlDirective() {\n    }\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        /** The value of the control. */\n        get: /**\n         * The value of the control.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         */\n        get: /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         */\n        get: /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         */\n        get: /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         */\n        get: /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         */\n        get: /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         */\n        get: /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.errors : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         */\n        get: /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         */\n        get: /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        get: /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"status\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.control ? this.control.status : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         */\n        get: /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        function () { return this.control ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         */\n        get: /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        function () {\n            return this.control ? this.control.statusChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         */\n        get: /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        function () {\n            return this.control ? this.control.valueChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        /**\n         * Returns an array that represents the path from the top-level form\n         * to this control. Each index is the string name of the control on\n         * that level.\n         */\n        get: /**\n         * Returns an array that represents the path from the top-level form\n         * to this control. Each index is the string name of the control on\n         * that level.\n         * @return {?}\n         */\n        function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {@link AbstractControl}.\n     */\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {\\@link AbstractControl}.\n     * @param {?=} value\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.reset = /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {\\@link AbstractControl}.\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = undefined; }\n        if (this.control)\n            this.control.reset(value);\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     */\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.hasError = /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    function (errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     */\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.getError = /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    function (errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    };\n    return AbstractControlDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar ControlContainer = /** @class */ (function (_super) {\n    __extends(ControlContainer, _super);\n    function ControlContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         */\n        get: /**\n         * Get the form to which this container belongs.\n         * @return {?}\n         */\n        function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         */\n        get: /**\n         * Get the path to this container.\n         * @return {?}\n         */\n        function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * ### Example\n *\n * ```typescript\n * \\@Directive({\n *   selector: '[custom-validator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return {\"custom\": true};\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {\\@link NG_VALIDATORS} for more details.\n *\n * \\@stable\n */\nvar NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * \\@stable\n */\nvar Validators = /** @class */ (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a value greater than a number.\n     *`min()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.min(3));`.\n     */\n    /**\n     * Validator that requires controls to have a value greater than a number.\n     * `min()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.min(3));`.\n     * @param {?} min\n     * @return {?}\n     */\n    Validators.min = /**\n     * Validator that requires controls to have a value greater than a number.\n     * `min()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.min(3));`.\n     * @param {?} min\n     * @return {?}\n     */\n    function (min) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value less than a number.\n     * `max()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.max(15));`.\n     */\n    /**\n     * Validator that requires controls to have a value less than a number.\n     * `max()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.max(15));`.\n     * @param {?} max\n     * @return {?}\n     */\n    Validators.max = /**\n     * Validator that requires controls to have a value less than a number.\n     * `max()` exists only as a function, not as a directive. For example,\n     * `control = new FormControl('', Validators.max(15));`.\n     * @param {?} max\n     * @return {?}\n     */\n    function (max) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a non-empty value.\n     */\n    /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.required = /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    };\n    /**\n     * Validator that requires control value to be true.\n     */\n    /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.requiredTrue = /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        return control.value === true ? null : { 'required': true };\n    };\n    /**\n     * Validator that performs email validation.\n     */\n    /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.email = /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     */\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    Validators.minLength = /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    function (minLength) {\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     */\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    Validators.maxLength = /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    function (maxLength) {\n        return function (control) {\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     */\n    /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    Validators.pattern = /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    function (pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        var /** @type {?} */ regex;\n        var /** @type {?} */ regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    };\n    /**\n     * No-op validator.\n     */\n    /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    Validators.nullValidator = /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) { return null; };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.compose = /**\n     * @param {?} validators\n     * @return {?}\n     */\n    function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = /** @type {?} */ (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.composeAsync = /**\n     * @param {?} validators\n     * @return {?}\n     */\n    function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = /** @type {?} */ (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return map.call(forkJoin(observables), _mergeErrors);\n        };\n    };\n    return Validators;\n}());\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    var /** @type {?} */ obs = ɵisPromise(r) ? fromPromise(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(\"Expected validator to return Promise or Observable.\");\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n        return errors != null ? __assign({}, /** @type {?} */ ((res)), errors) : /** @type {?} */ ((res));\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `ControlValueAccessor` acts as a bridge between the Angular forms API and a\n * native element in the DOM.\n *\n * Implement this interface if you want to create a custom form control directive\n * that integrates with Angular forms.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n *\n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nvar NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return CheckboxControlValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar CheckboxControlValueAccessor = /** @class */ (function () {\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    CheckboxControlValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                    providers: [CHECKBOX_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    CheckboxControlValueAccessor.ctorParameters = function () { return [\n        { type: Renderer2, },\n        { type: ElementRef, },\n    ]; };\n    return CheckboxControlValueAccessor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    var /** @type {?} */ userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nvar COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar DefaultValueAccessor = /** @class */ (function () {\n    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        /**\n         * Whether the user is creating a composition string (IME events).\n         */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._handleInput = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionStart = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { this._composing = true; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionEnd = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    };\n    DefaultValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngModel],[formControl],[formControlName]',\n                    host: {\n                        '(input)': '$any(this)._handleInput($event.target.value)',\n                        '(blur)': 'onTouched()',\n                        '(compositionstart)': '$any(this)._compositionStart()',\n                        '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                    },\n                    providers: [DEFAULT_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    DefaultValueAccessor.ctorParameters = function () { return [\n        { type: Renderer2, },\n        { type: ElementRef, },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] },] },\n    ]; };\n    return DefaultValueAccessor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if ((/** @type {?} */ (validator)).validate) {\n        return function (c) { return (/** @type {?} */ (validator)).validate(c); };\n    }\n    else {\n        return /** @type {?} */ (validator);\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if ((/** @type {?} */ (validator)).validate) {\n        return function (c) { return (/** @type {?} */ (validator)).validate(c); };\n    }\n    else {\n        return /** @type {?} */ (validator);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nvar NumberValueAccessor = /** @class */ (function () {\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    NumberValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()'\n                    },\n                    providers: [NUMBER_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NumberValueAccessor.ctorParameters = function () { return [\n        { type: Renderer2, },\n        { type: ElementRef, },\n    ]; };\n    return NumberValueAccessor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * \\@stable\n * @abstract\n */\nvar NgControl = /** @class */ (function (_super) {\n    __extends(NgControl, _super);\n    function NgControl() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * \\@internal\n         */\n        _this._parent = null;\n        _this.name = null;\n        _this.valueAccessor = null;\n        /**\n         * \\@internal\n         */\n        _this._rawValidators = [];\n        /**\n         * \\@internal\n         */\n        _this._rawAsyncValidators = [];\n        return _this;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    return NgControl;\n}(AbstractControlDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nvar RadioControlRegistry = /** @class */ (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.add = /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.remove = /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    function (accessor) {\n        for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.select = /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype._isSameGroup = /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    RadioControlRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    RadioControlRegistry.ctorParameters = function () { return []; };\n    return RadioControlRegistry;\n}());\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use radio buttons with form directives\n *\n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n *\n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n *\n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  \\@stable\n */\nvar RadioControlValueAccessor = /** @class */ (function () {\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this._registry.remove(this); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.fireUncheck = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { this.writeValue(value); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._checkName = /**\n     * @return {?}\n     */\n    function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._throwNameError = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    RadioControlValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                    host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                    providers: [RADIO_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    RadioControlValueAccessor.ctorParameters = function () { return [\n        { type: Renderer2, },\n        { type: ElementRef, },\n        { type: RadioControlRegistry, },\n        { type: Injector, },\n    ]; };\n    RadioControlValueAccessor.propDecorators = {\n        \"name\": [{ type: Input },],\n        \"formControlName\": [{ type: Input },],\n        \"value\": [{ type: Input },],\n    };\n    return RadioControlValueAccessor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RangeValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nvar RangeValueAccessor = /** @class */ (function () {\n    function RangeValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    RangeValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()'\n                    },\n                    providers: [RANGE_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    RangeValueAccessor.ctorParameters = function () { return [\n        { type: Renderer2, },\n        { type: ElementRef, },\n    ]; };\n    return RangeValueAccessor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use select controls with form directives\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Caveat: Option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar SelectControlValueAccessor = /** @class */ (function () {\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    Object.defineProperty(SelectControlValueAccessor.prototype, \"compareWith\", {\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.value = value;\n        var /** @type {?} */ id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        var /** @type {?} */ valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = _this._getOptionValue(valueString);\n            fn(_this.value);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._registerOption = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { return (this._idCounter++).toString(); };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionId = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionValue = /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    function (valueString) {\n        var /** @type {?} */ id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    };\n    SelectControlValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                    host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    SelectControlValueAccessor.ctorParameters = function () { return [\n        { type: Renderer2, },\n        { type: ElementRef, },\n    ]; };\n    SelectControlValueAccessor.propDecorators = {\n        \"compareWith\": [{ type: Input },],\n    };\n    return SelectControlValueAccessor;\n}());\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * \\@howToUse\n *\n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n *\n * \\@stable\n */\nvar NgSelectOption = /** @class */ (function () {\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectOption.prototype._setElementValue = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectOption.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    NgSelectOption.decorators = [\n        { type: Directive, args: [{ selector: 'option' },] },\n    ];\n    /** @nocollapse */\n    NgSelectOption.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n    ]; };\n    NgSelectOption.propDecorators = {\n        \"ngValue\": [{ type: Input, args: ['ngValue',] },],\n        \"value\": [{ type: Input, args: ['value',] },],\n    };\n    return NgSelectOption;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (typeof value === 'string')\n        value = \"'\" + value + \"'\";\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n *  ### Caveat: Options selection\n *\n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * \\@stable\n */\nvar SelectMultipleControlValueAccessor = /** @class */ (function () {\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    Object.defineProperty(SelectMultipleControlValueAccessor.prototype, \"compareWith\", {\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var _this = this;\n        this.value = value;\n        var /** @type {?} */ optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var /** @type {?} */ selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var /** @type {?} */ options = _.selectedOptions;\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var /** @type {?} */ options = /** @type {?} */ (_.options);\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    if (opt.selected) {\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            _this.value = selected;\n            fn(selected);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._registerOption = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(/** @type {?} */ ((this._optionMap.get(id)))._value, value))\n                return id;\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    function (valueString) {\n        var /** @type {?} */ id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? /** @type {?} */ ((this._optionMap.get(id)))._value : valueString;\n    };\n    SelectMultipleControlValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                    host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    SelectMultipleControlValueAccessor.ctorParameters = function () { return [\n        { type: Renderer2, },\n        { type: ElementRef, },\n    ]; };\n    SelectMultipleControlValueAccessor.propDecorators = {\n        \"compareWith\": [{ type: Input },],\n    };\n    return SelectMultipleControlValueAccessor;\n}());\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nvar NgSelectMultipleOption = /** @class */ (function () {\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setElementValue = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setSelected = /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    function (selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    NgSelectMultipleOption.decorators = [\n        { type: Directive, args: [{ selector: 'option' },] },\n    ];\n    /** @nocollapse */\n    NgSelectMultipleOption.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n    ]; };\n    NgSelectMultipleOption.propDecorators = {\n        \"ngValue\": [{ type: Input, args: ['ngValue',] },],\n        \"value\": [{ type: Input, args: ['value',] },],\n    };\n    return NgSelectMultipleOption;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return /** @type {?} */ ((parent.path)).concat([name]);\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([/** @type {?} */ ((control.validator)), dir.validator]);\n    control.asyncValidator = Validators.composeAsync([/** @type {?} */ ((control.asyncValidator)), dir.asyncValidator]); /** @type {?} */\n    ((dir.valueAccessor)).writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if (/** @type {?} */ ((dir.valueAccessor)).setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { /** @type {?} */ ((/** @type {?} */ ((dir.valueAccessor)).setDisabledState))(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if ((/** @type {?} */ (validator)).registerOnValidatorChange)\n            /** @type {?} */ (((/** @type {?} */ (validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if ((/** @type {?} */ (validator)).registerOnValidatorChange)\n            /** @type {?} */ (((/** @type {?} */ (validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    /** @type {?} */ ((dir.valueAccessor)).registerOnChange(function () { return _noControlError(dir); }); /** @type {?} */\n    ((dir.valueAccessor)).registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpViewChangePipeline(control, dir) {\n    /** @type {?} */ ((dir.valueAccessor)).registerOnChange(function (newValue) {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpBlurPipeline(control, dir) {\n    /** @type {?} */ ((dir.valueAccessor)).registerOnTouched(function () {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction updateControl(control, dir) {\n    dir.viewToModelUpdate(control._pendingValue);\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    control._pendingChange = false;\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        /** @type {?} */ ((\n        // control -> view\n        dir.valueAccessor)).writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    var /** @type {?} */ messageEnd;\n    if (/** @type {?} */ ((dir.path)).length > 1) {\n        messageEnd = \"path: '\" + (/** @type {?} */ ((dir.path))).join(' -> ') + \"'\";\n    }\n    else if (/** @type {?} */ ((dir.path))[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    var /** @type {?} */ change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !ɵlooseIdentical(viewModel, change.currentValue);\n}\nvar BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n}\n/**\n * @param {?} form\n * @param {?} directives\n * @return {?}\n */\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(function (dir) {\n        var /** @type {?} */ control = /** @type {?} */ (dir.control);\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    var /** @type {?} */ defaultAccessor = undefined;\n    var /** @type {?} */ builtinAccessor = undefined;\n    var /** @type {?} */ customAccessor = undefined;\n    valueAccessors.forEach(function (v) {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction removeDir(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n *\n * \\@stable\n */\nvar AbstractFormGroupDirective = /** @class */ (function (_super) {\n    __extends(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormGroup(this);\n    };\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {@link FormGroup} backing this binding.\n         */\n        get: /**\n         * Get the {\\@link FormGroup} backing this binding.\n         * @return {?}\n         */\n        function () { return /** @type {?} */ ((this.formDirective)).getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         */\n        get: /**\n         * Get the path to this control group.\n         * @return {?}\n         */\n        function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {@link Form} to which this group belongs.\n         */\n        get: /**\n         * Get the {\\@link Form} to which this group belongs.\n         * @return {?}\n         */\n        function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype._checkParentType = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractControlStatus = /** @class */ (function () {\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.untouched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.touched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.pristine : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.dirty : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.valid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.invalid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._cd.control ? this._cd.control.pending : false; },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nvar ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * \\@stable\n */\nvar NgControlStatus = /** @class */ (function (_super) {\n    __extends(NgControlStatus, _super);\n    function NgControlStatus(cd) {\n        return _super.call(this, cd) || this;\n    }\n    NgControlStatus.decorators = [\n        { type: Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n    ];\n    /** @nocollapse */\n    NgControlStatus.ctorParameters = function () { return [\n        { type: NgControl, decorators: [{ type: Self },] },\n    ]; };\n    return NgControlStatus;\n}(AbstractControlStatus));\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatusGroup = /** @class */ (function (_super) {\n    __extends(NgControlStatusGroup, _super);\n    function NgControlStatusGroup(cd) {\n        return _super.call(this, cd) || this;\n    }\n    NgControlStatusGroup.decorators = [\n        { type: Directive, args: [{\n                    selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                    host: ngControlStatusHost\n                },] },\n    ];\n    /** @nocollapse */\n    NgControlStatusGroup.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: Self },] },\n    ]; };\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nvar VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nvar INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nvar PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nvar DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = (/** @type {?} */ (path)).split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return (/** @type {?} */ (path)).reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return v.controls[name] || null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(/** @type {?} */ (name)) || null;\n        }\n        return null;\n    }, control);\n}\n/**\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction coerceToValidator(validatorOrOpts) {\n    var /** @type {?} */ validator = /** @type {?} */ ((isOptionsObj(validatorOrOpts) ? (/** @type {?} */ (validatorOrOpts)).validators :\n        validatorOrOpts));\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator, validatorOrOpts) {\n    var /** @type {?} */ origAsyncValidator = /** @type {?} */ ((isOptionsObj(validatorOrOpts) ? (/** @type {?} */ (validatorOrOpts)).asyncValidators :\n        asyncValidator));\n    return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) :\n        origAsyncValidator || null;\n}\n/**\n * @record\n */\n\n/**\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControl = /** @class */ (function () {\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = function () { };\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    Object.defineProperty(AbstractControl.prototype, \"parent\", {\n        /**\n         * The parent control.\n         */\n        get: /**\n         * The parent control.\n         * @return {?}\n         */\n        function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         */\n        get: /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        function () { return this.status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         */\n        get: /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        function () { return this.status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         */\n        get: /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        function () { return this.status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         */\n        get: /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        function () { return this.status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         */\n        get: /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        function () { return this.status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         */\n        get: /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         */\n        get: /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        function () { return !this.touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"updateOn\", {\n        /**\n         * Returns the update strategy of the `AbstractControl` (i.e.\n         * the event on which the control will update itself).\n         * Possible values: `'change'` (default) | `'blur'` | `'submit'`\n         */\n        get: /**\n         * Returns the update strategy of the `AbstractControl` (i.e.\n         * the event on which the control will update itself).\n         * Possible values: `'change'` (default) | `'blur'` | `'submit'`\n         * @return {?}\n         */\n        function () {\n            return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     */\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setValidators = /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     */\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setAsyncValidators = /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    /**\n     * Empties out the sync validator list.\n     */\n    /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearValidators = /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    function () { this.validator = null; };\n    /**\n     * Empties out the async validator list.\n     */\n    /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearAsyncValidators = /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    function () { this.asyncValidator = null; };\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     */\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsTouched = /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     */\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsUntouched = /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).touched = false;\n        this._pendingTouched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     */\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsDirty = /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    };\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     */\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPristine = /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * Marks the control as `pending`.\n     */\n    /**\n     * Marks the control as `pending`.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPending = /**\n     * Marks the control as `pending`.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).status = PENDING;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    };\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     */\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.disable = /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).status = DISABLED;\n        (/** @type {?} */ (this)).errors = null;\n        this._forEachChild(function (control) { control.disable(__assign({}, opts, { onlySelf: true })); });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            (/** @type {?} */ (this.valueChanges)).emit(this.value);\n            (/** @type {?} */ (this.statusChanges)).emit(this.status);\n        }\n        this._updateAncestors(opts);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n    };\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     */\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.enable = /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).status = VALID;\n        this._forEachChild(function (control) { control.enable(__assign({}, opts, { onlySelf: true })); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(opts);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateAncestors = /**\n     * @param {?} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControl.prototype.setParent = /**\n     * @param {?} parent\n     * @return {?}\n     */\n    function (parent) { this._parent = parent; };\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     */\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.updateValueAndValidity = /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            (/** @type {?} */ (this)).errors = this._runValidator();\n            (/** @type {?} */ (this)).status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            (/** @type {?} */ (this.valueChanges)).emit(this.value);\n            (/** @type {?} */ (this.statusChanges)).emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTreeValidity = /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = { emitEvent: true }; }\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity(opts); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._setInitialStatus = /**\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this)).status = this._allControlsDisabled() ? DISABLED : VALID;\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._runValidator = /**\n     * @return {?}\n     */\n    function () {\n        return this.validator ? this.validator(this) : null;\n    };\n    /**\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._runAsyncValidator = /**\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    function (emitEvent) {\n        var _this = this;\n        if (this.asyncValidator) {\n            (/** @type {?} */ (this)).status = PENDING;\n            var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe(function (errors) { return _this.setErrors(errors, { emitEvent: emitEvent }); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._cancelExistingSubscription = /**\n     * @return {?}\n     */\n    function () {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.setErrors = /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (errors, opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    };\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     */\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControl.prototype.get = /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) { return _find(this, path, '.'); };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     */\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.getError = /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    function (errorCode, path) {\n        var /** @type {?} */ control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     */\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.hasError = /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    function (errorCode, path) { return !!this.getError(errorCode, path); };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        /**\n         * Retrieves the top-level ancestor of this control.\n         */\n        get: /**\n         * Retrieves the top-level ancestor of this control.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ x = this;\n            while (x._parent) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._updateControlsErrors = /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    function (emitEvent) {\n        (/** @type {?} */ (this)).status = this._calculateStatus();\n        if (emitEvent) {\n            (/** @type {?} */ (this.statusChanges)).emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._initObservables = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this)).valueChanges = new EventEmitter();\n        (/** @type {?} */ (this)).statusChanges = new EventEmitter();\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._calculateStatus = /**\n     * @return {?}\n     */\n    function () {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsHaveStatus = /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    function (status) {\n        return this._anyControls(function (control) { return control.status === status; });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsDirty = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsTouched = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updatePristine = /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTouched = /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        (/** @type {?} */ (this)).touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    AbstractControl.prototype._isBoxedValue = /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    function (formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    AbstractControl.prototype._registerOnCollectionChange = /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onCollectionChange = fn; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._setUpdateStrategy = /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (opts) {\n        if (isOptionsObj(opts) && (/** @type {?} */ (opts)).updateOn != null) {\n            this._updateOn = /** @type {?} */ (((/** @type {?} */ (opts)).updateOn));\n        }\n    };\n    return AbstractControl;\n}());\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n *\n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n *\n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n *\n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n *\n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n *\n * The second {\\@link FormControl} argument can accept one of three things:\n * * a sync validator function\n * * an array of sync validator functions\n * * an options object containing validator and/or async validator functions\n *\n * Example of a single sync validator function:\n *\n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n *\n * Example using options object:\n *\n * ```ts\n * const ctrl = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * The options object can also be used to define when the control should update.\n * By default, the value and validity of a control updates whenever the value\n * changes. You can configure it to update on the blur event instead by setting\n * the `updateOn` option to `'blur'`.\n *\n * ```ts\n * const c = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * You can also set `updateOn` to `'submit'`, which will delay value and validity\n * updates until the parent form of the control fires a submit event.\n *\n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormControl = /** @class */ (function (_super) {\n    __extends(FormControl, _super);\n    function FormControl(formState, validatorOrOpts, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;\n        /**\n         * \\@internal\n         */\n        _this._onChange = [];\n        _this._applyFormState(formState);\n        _this._setUpdateStrategy(validatorOrOpts);\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        _this._initObservables();\n        return _this;\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     */\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.setValue = /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        (/** @type {?} */ (this)).value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this.value, options.emitViewToModelChange !== false); });\n        }\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     */\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.patchValue = /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     */\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.reset = /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    function (formState, options) {\n        if (formState === void 0) { formState = null; }\n        if (options === void 0) { options = {}; }\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._updateValue = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormControl.prototype._anyControls = /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    function (condition) { return false; };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._allControlsDisabled = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     */\n    /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnChange = /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange.push(fn); };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._clearChangeFns = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = function () { };\n    };\n    /**\n     * Register a listener for disabled events.\n     */\n    /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnDisabledChange = /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._onDisabledChange.push(fn);\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormControl.prototype._forEachChild = /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) { };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._syncPendingControls = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} formState\n     * @return {?}\n     */\n    FormControl.prototype._applyFormState = /**\n     * @param {?} formState\n     * @return {?}\n     */\n    function (formState) {\n        if (this._isBoxedValue(formState)) {\n            (/** @type {?} */ (this)).value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            (/** @type {?} */ (this)).value = this._pendingValue = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n *\n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like {\\@link FormControl} instances, you can alternatively choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, {validators: passwordMatchValidator, asyncValidators: otherValidator});\n * ```\n *\n * The options object can also be used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls will default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *    one: new FormControl()\n * }, {updateOn: 'blur'});\n * ```\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormGroup = /** @class */ (function (_super) {\n    __extends(FormGroup, _super);\n    function FormGroup(controls, validatorOrOpts, asyncValidator) {\n        var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpdateStrategy(validatorOrOpts);\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control, so for most cases you'll want\n     * to use {@link FormGroup#addControl addControl} instead.\n     */\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control, so for most cases you'll want\n     * to use {\\@link FormGroup#addControl addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.registerControl = /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control, so for most cases you'll want\n     * to use {\\@link FormGroup#addControl addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     */\n    /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.addControl = /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove a control from this group.\n     */\n    /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype.removeControl = /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     */\n    /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.setControl = /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    function (name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for existence in the group\n     * only, use {@link AbstractControl#get get} instead.\n     */\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for existence in the group\n     * only, use {\\@link AbstractControl#get get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    FormGroup.prototype.contains = /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for existence in the group\n     * only, use {\\@link AbstractControl#get get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    function (controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    };\n    /**\n     *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     */\n    /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.setValue = /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(function (name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     */\n    /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.patchValue = /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        Object.keys(value).forEach(function (name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.reset = /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        if (value === void 0) { value = {}; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the {@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     */\n    /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    FormGroup.prototype.getRawValue = /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control instanceof FormControl ? control.value : (/** @type {?} */ (control)).getRawValue();\n            return acc;\n        });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._syncPendingControls = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ subtreeUpdated = this._reduceChildren(false, function (updated, child) {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype._throwIfControlMissing = /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormGroup.prototype._forEachChild = /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var _this = this;\n        Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._setUpControls = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._forEachChild(function (control) {\n            control.setParent(_this);\n            control._registerOnCollectionChange(_this._onCollectionChange);\n        });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._updateValue = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).value = this._reduceValue(); };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormGroup.prototype._anyControls = /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    function (condition) {\n        var _this = this;\n        var /** @type {?} */ res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._reduceValue = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    FormGroup.prototype._reduceChildren = /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    function (initValue, fn) {\n        var /** @type {?} */ res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._allControlsDisabled = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n            var controlName = _a[_i];\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroup.prototype._checkAllValuesPresent = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n *\n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n *\n * ### Example\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * You can also include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators can be passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * The options object can also be used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls will default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormArray = /** @class */ (function (_super) {\n    __extends(FormArray, _super);\n    function FormArray(controls, validatorOrOpts, asyncValidator) {\n        var _this = _super.call(this, coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts)) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpdateStrategy(validatorOrOpts);\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Get the {@link AbstractControl} at the given `index` in the array.\n     */\n    /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.at = /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {@link AbstractControl} at the end of the array.\n     */\n    /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.push = /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /** Insert a new {@link AbstractControl} at the given `index` in the array. */\n    /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.insert = /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    function (index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    };\n    /** Remove the control at the given `index` in the array. */\n    /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.removeAt = /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Replace an existing control.\n     */\n    /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.setControl = /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    function (index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         */\n        get: /**\n         * Length of the control array.\n         * @return {?}\n         */\n        function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Sets the value of the {@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     */\n    /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.setValue = /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     */\n    /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.patchValue = /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     */\n    /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.reset = /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    function (value, options) {\n        if (value === void 0) { value = []; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     */\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    FormArray.prototype.getRawValue = /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    function () {\n        return this.controls.map(function (control) {\n            return control instanceof FormControl ? control.value : (/** @type {?} */ (control)).getRawValue();\n        });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._syncPendingControls = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ subtreeUpdated = this.controls.reduce(function (updated, child) {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype._throwIfControlMissing = /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormArray.prototype._forEachChild = /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._updateValue = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        (/** @type {?} */ (this)).value =\n            this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormArray.prototype._anyControls = /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._setUpControls = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._forEachChild(function (control) { return _this._registerControl(control); });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormArray.prototype._checkAllValuesPresent = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._allControlsDisabled = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    };\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype._registerControl = /**\n     * @param {?} control\n     * @return {?}\n     */\n    function (control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    };\n    return FormArray;\n}(AbstractControl));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * \\@howToUse\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * If you want to import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, you can add `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgForm = /** @class */ (function (_super) {\n    __extends(NgForm, _super);\n    function NgForm(validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this.submitted = false;\n        _this._directives = [];\n        _this.ngSubmit = new EventEmitter();\n        _this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () { this._setUpdateStrategy(); };\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            (/** @type {?} */ (dir)).control = /** @type {?} */ (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            _this._directives.push(dir);\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { return /** @type {?} */ (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeDir(_this._directives, dir);\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            var /** @type {?} */ group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { return /** @type {?} */ (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.updateModel = /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ ctrl = /** @type {?} */ (_this.form.get(/** @type {?} */ ((dir.path))));\n            ctrl.setValue(value);\n        });\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.setValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { this.control.setValue(value); };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NgForm.prototype.onSubmit = /**\n     * @param {?} $event\n     * @return {?}\n     */\n    function ($event) {\n        (/** @type {?} */ (this)).submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.onReset = /**\n     * @return {?}\n     */\n    function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NgForm.prototype.resetForm = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        (/** @type {?} */ (this)).submitted = false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype._setUpdateStrategy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    NgForm.prototype._findContainer = /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        path.pop();\n        return path.length ? /** @type {?} */ (this.form.get(path)) : this.form;\n    };\n    NgForm.decorators = [\n        { type: Directive, args: [{\n                    selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                    providers: [formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    outputs: ['ngSubmit'],\n                    exportAs: 'ngForm'\n                },] },\n    ];\n    /** @nocollapse */\n    NgForm.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    ]; };\n    NgForm.propDecorators = {\n        \"options\": [{ type: Input, args: ['ngFormOptions',] },],\n    };\n    return NgForm;\n}(ControlContainer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; index as i\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TemplateDrivenErrors = /** @class */ (function () {\n    function TemplateDrivenErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelParentException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + FormErrorExamples.ngModelWithFormGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.formGroupNameException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.missingNameException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelGroupParentException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgModelGroup; })\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n * \\@stable\n */\nvar NgModelGroup = /** @class */ (function (_super) {\n    __extends(NgModelGroup, _super);\n    function NgModelGroup(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgModelGroup.prototype._checkParentType = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    NgModelGroup.decorators = [\n        { type: Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n    ];\n    /** @nocollapse */\n    NgModelGroup.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    ]; };\n    NgModelGroup.propDecorators = {\n        \"name\": [{ type: Input, args: ['ngModelGroup',] },],\n    };\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return NgModel; })\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nvar resolvedPromise$1 = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n *\n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n *\n * \\@howToUse\n *\n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional {\\@link Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n *\n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n *\n * The following is an example of a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * Take a look at an example of using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * To see `ngModel` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgModel = /** @class */ (function (_super) {\n    __extends(NgModel, _super);\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.control = new FormControl();\n        /**\n         * \\@internal\n         */\n        _this._registered = false;\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgModel.prototype.viewToModelUpdate = /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpControl = /**\n     * @return {?}\n     */\n    function () {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpdateStrategy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._isStandalone = /**\n     * @return {?}\n     */\n    function () {\n        return !this._parent || !!(this.options && this.options.standalone);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpStandalone = /**\n     * @return {?}\n     */\n    function () {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkForErrors = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkParentType = /**\n     * @return {?}\n     */\n    function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkName = /**\n     * @return {?}\n     */\n    function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgModel.prototype._updateValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var _this = this;\n        resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype._updateDisabled = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n        var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    NgModel.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngModel]:not([formControlName]):not([formControl])',\n                    providers: [formControlBinding],\n                    exportAs: 'ngModel'\n                },] },\n    ];\n    /** @nocollapse */\n    NgModel.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: Optional }, { type: Host },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n    ]; };\n    NgModel.propDecorators = {\n        \"name\": [{ type: Input },],\n        \"isDisabled\": [{ type: Input, args: ['disabled',] },],\n        \"model\": [{ type: Input, args: ['ngModel',] },],\n        \"options\": [{ type: Input, args: ['ngModelOptions',] },],\n        \"update\": [{ type: Output, args: ['ngModelChange',] },],\n    };\n    return NgModel;\n}(NgControl));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReactiveErrors = /** @class */ (function () {\n    function ReactiveErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.controlParentException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.ngModelGroupException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.missingFormException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.groupParentException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formGroupName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.arrayParentException = /**\n     * @return {?}\n     */\n    function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + FormErrorExamples.formArrayName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.disabledAttrWarning = /**\n     * @return {?}\n     */\n    function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    return ReactiveErrors;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlDirective; })\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n *\n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n *\n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl#setValue setValue} or\n * {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n *  \\@stable\n */\nvar FormControlDirective = /** @class */ (function (_super) {\n    __extends(FormControlDirective, _super);\n    function FormControlDirective(validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.update = new EventEmitter();\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        set: /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && /** @type {?} */ ((this.valueAccessor)).setDisabledState) {\n                /** @type {?} */ ((/** @type {?} */ ((this.valueAccessor)).setDisabledState))(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlDirective.prototype.viewToModelUpdate = /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype._isControlChanged = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        return changes.hasOwnProperty('form');\n    };\n    FormControlDirective.decorators = [\n        { type: Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n    ];\n    /** @nocollapse */\n    FormControlDirective.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n    ]; };\n    FormControlDirective.propDecorators = {\n        \"form\": [{ type: Input, args: ['formControl',] },],\n        \"model\": [{ type: Input, args: ['ngModel',] },],\n        \"update\": [{ type: Output, args: ['ngModelChange',] },],\n        \"isDisabled\": [{ type: Input, args: ['disabled',] },],\n    };\n    return FormControlDirective;\n}(NgControl));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupDirective; })\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n *\n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl#valueChanges valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges statusChanges} event to be notified when the\n * validation status is re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormGroupDirective = /** @class */ (function (_super) {\n    __extends(FormGroupDirective, _super);\n    function FormGroupDirective(_validators, _asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._validators = _validators;\n        _this._asyncValidators = _asyncValidators;\n        _this.submitted = false;\n        _this.directives = [];\n        _this.form = /** @type {?} */ ((null));\n        _this.ngSubmit = new EventEmitter();\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormGroupDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { return /** @type {?} */ (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeControl = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { removeDir(this.directives, dir); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormGroup = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { return /** @type {?} */ (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormArray = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormArray = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormArray = /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) { return /** @type {?} */ (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.updateModel = /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    function (dir, value) {\n        var /** @type {?} */ ctrl = /** @type {?} */ (this.form.get(dir.path));\n        ctrl.setValue(value);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onSubmit = /**\n     * @param {?} $event\n     * @return {?}\n     */\n    function ($event) {\n        (/** @type {?} */ (this)).submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onReset = /**\n     * @return {?}\n     */\n    function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.resetForm = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        (/** @type {?} */ (this)).submitted = false;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateDomValue = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n            if (dir.control !== newCtrl) {\n                cleanUpControl(dir.control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                (/** @type {?} */ (dir)).control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateRegistrations = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(function () { });\n        this._oldForm = this.form;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateValidators = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([/** @type {?} */ ((this.form.validator)), /** @type {?} */ ((sync))]);\n        var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([/** @type {?} */ ((this.form.asyncValidator)), /** @type {?} */ ((async))]);\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._checkFormPresent = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    FormGroupDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[formGroup]',\n                    providers: [formDirectiveProvider$1],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    exportAs: 'ngForm'\n                },] },\n    ];\n    /** @nocollapse */\n    FormGroupDirective.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    ]; };\n    FormGroupDirective.propDecorators = {\n        \"form\": [{ type: Input, args: ['formGroup',] },],\n        \"ngSubmit\": [{ type: Output },],\n    };\n    return FormGroupDirective;\n}(ControlContainer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n *\n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl#get get} method. Ex: `this.form.get('name')`.\n *\n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormGroupName = /** @class */ (function (_super) {\n    __extends(FormGroupName, _super);\n    function FormGroupName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupName.prototype._checkParentType = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    FormGroupName.decorators = [\n        { type: Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n    ];\n    /** @nocollapse */\n    FormGroupName.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    ]; };\n    FormGroupName.propDecorators = {\n        \"name\": [{ type: Input, args: ['formGroupName',] },],\n    };\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nvar formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormArrayName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n *\n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl#get get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl#setValue setValue} or\n * {\\@link AbstractControl#patchValue patchValue} methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl#valueChanges valueChanges} event.\n * You can also listen to its {\\@link AbstractControl#statusChanges statusChanges} event to be\n * notified when the validation status is re-calculated.\n *\n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by calling\n * its {\\@link FormArray#push push} method.\n * Ex: `this.form.get('cities').push(new FormControl());`\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormArrayName = /** @class */ (function (_super) {\n    __extends(FormArrayName, _super);\n    function FormArrayName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormArray(this);\n    };\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ ((this.formDirective)).getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._parent ? /** @type {?} */ (this._parent.formDirective) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype._checkParentType = /**\n     * @return {?}\n     */\n    function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    FormArrayName.decorators = [\n        { type: Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n    ];\n    /** @nocollapse */\n    FormArrayName.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    ]; };\n    FormArrayName.propDecorators = {\n        \"name\": [{ type: Input, args: ['formArrayName',] },],\n    };\n    return FormArrayName;\n}(ControlContainer));\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlName; })\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n *\n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl#get get} method.\n * Ex: `this.form.get('first');`\n *\n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n *\n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormControlName = /** @class */ (function (_super) {\n    __extends(FormControlName, _super);\n    function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this._added = false;\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        set: /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlName.prototype.viewToModelUpdate = /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return controlPath(this.name, /** @type {?} */ ((this._parent))); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ ((composeAsyncValidators(this._rawAsyncValidators)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._checkParentType = /**\n     * @return {?}\n     */\n    function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._setUpControl = /**\n     * @return {?}\n     */\n    function () {\n        this._checkParentType();\n        (/** @type {?} */ (this)).control = this.formDirective.addControl(this);\n        if (this.control.disabled && /** @type {?} */ ((this.valueAccessor)).setDisabledState) {\n            /** @type {?} */ ((/** @type {?} */ ((this.valueAccessor)).setDisabledState))(true);\n        }\n        this._added = true;\n    };\n    FormControlName.decorators = [\n        { type: Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n    ];\n    /** @nocollapse */\n    FormControlName.ctorParameters = function () { return [\n        { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n    ]; };\n    FormControlName.propDecorators = {\n        \"name\": [{ type: Input, args: ['formControlName',] },],\n        \"model\": [{ type: Input, args: ['ngModel',] },],\n        \"update\": [{ type: Output, args: ['ngModelChange',] },],\n        \"isDisabled\": [{ type: Input, args: ['disabled',] },],\n    };\n    return FormControlName;\n}(NgControl));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface that can be implemented by classes that can act as validators.\n *\n * ## Usage\n *\n * ```typescript\n * \\@Directive({\n *   selector: '[custom-validator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(c: Control): {[key: string]: any} {\n *     return {\"custom\": true};\n *   }\n * }\n * ```\n *\n * \\@stable\n * @record\n */\n\n/**\n * \\@experimental\n * @record\n */\n\nvar REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return RequiredValidator; }),\n    multi: true\n};\nvar CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return CheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@stable\n */\nvar RequiredValidator = /** @class */ (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = value != null && value !== false && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    RequiredValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this.required ? Validators.required(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RequiredValidator.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    RequiredValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                    providers: [REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': 'required ? \"\" : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    RequiredValidator.ctorParameters = function () { return []; };\n    RequiredValidator.propDecorators = {\n        \"required\": [{ type: Input },],\n    };\n    return RequiredValidator;\n}());\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@experimental\n */\nvar CheckboxRequiredValidator = /** @class */ (function (_super) {\n    __extends(CheckboxRequiredValidator, _super);\n    function CheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    CheckboxRequiredValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this.required ? Validators.requiredTrue(c) : null;\n    };\n    CheckboxRequiredValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                    providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': 'required ? \"\" : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    CheckboxRequiredValidator.ctorParameters = function () { return []; };\n    return CheckboxRequiredValidator;\n}(RequiredValidator));\n/**\n * Provider which adds {\\@link EmailValidator} to {\\@link NG_VALIDATORS}.\n */\nvar EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return EmailValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@experimental\n */\nvar EmailValidator = /** @class */ (function () {\n    function EmailValidator() {\n    }\n    Object.defineProperty(EmailValidator.prototype, \"email\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    EmailValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this._enabled ? Validators.email(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    EmailValidator.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    EmailValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                    providers: [EMAIL_VALIDATOR]\n                },] },\n    ];\n    /** @nocollapse */\n    EmailValidator.ctorParameters = function () { return []; };\n    EmailValidator.propDecorators = {\n        \"email\": [{ type: Input },],\n    };\n    return EmailValidator;\n}());\n/**\n * \\@stable\n * @record\n */\n\n/**\n * \\@stable\n * @record\n */\n\n/**\n * Provider which adds {\\@link MinLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='min'}\n */\nvar MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * \\@stable\n */\nvar MinLengthValidator = /** @class */ (function () {\n    function MinLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MinLengthValidator.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MinLengthValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this.minlength == null ? null : this._validator(c);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MinLengthValidator.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MinLengthValidator.prototype._createValidator = /**\n     * @return {?}\n     */\n    function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    MinLengthValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                    providers: [MIN_LENGTH_VALIDATOR],\n                    host: { '[attr.minlength]': 'minlength ? minlength : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    MinLengthValidator.ctorParameters = function () { return []; };\n    MinLengthValidator.propDecorators = {\n        \"minlength\": [{ type: Input },],\n    };\n    return MinLengthValidator;\n}());\n/**\n * Provider which adds {\\@link MaxLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='max'}\n */\nvar MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n *\n * \\@stable\n */\nvar MaxLengthValidator = /** @class */ (function () {\n    function MaxLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this.maxlength != null ? this._validator(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MaxLengthValidator.prototype._createValidator = /**\n     * @return {?}\n     */\n    function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    MaxLengthValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                    providers: [MAX_LENGTH_VALIDATOR],\n                    host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    MaxLengthValidator.ctorParameters = function () { return []; };\n    MaxLengthValidator.propDecorators = {\n        \"maxlength\": [{ type: Input },],\n    };\n    return MaxLengthValidator;\n}());\nvar PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nvar PatternValidator = /** @class */ (function () {\n    function PatternValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PatternValidator.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    PatternValidator.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) { return this._validator(c); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PatternValidator.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    PatternValidator.prototype._createValidator = /**\n     * @return {?}\n     */\n    function () { this._validator = Validators.pattern(this.pattern); };\n    PatternValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                    providers: [PATTERN_VALIDATOR],\n                    host: { '[attr.pattern]': 'pattern ? pattern : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    PatternValidator.ctorParameters = function () { return []; };\n    PatternValidator.propDecorators = {\n        \"pattern\": [{ type: Input },],\n    };\n    return PatternValidator;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n *\n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n *\n * \\@howToUse\n *\n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n *\n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  * **NgModule**: {\\@link ReactiveFormsModule}\n *\n * \\@stable\n */\nvar FormBuilder = /** @class */ (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {@link FormGroup} constructor for more details.\n     */\n    /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    FormBuilder.prototype.group = /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n        var /** @type {?} */ validator = extra != null ? extra['validator'] : null;\n        var /** @type {?} */ asyncValidator = extra != null ? extra['asyncValidator'] : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     */\n    /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.control = /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    function (formState, validator, asyncValidator) {\n        return new FormControl(formState, validator, asyncValidator);\n    };\n    /**\n     * Construct a {@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     */\n    /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.array = /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validator, asyncValidator);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._reduceControls = /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    function (controlsConfig) {\n        var _this = this;\n        var /** @type {?} */ controls = {};\n        Object.keys(controlsConfig).forEach(function (controlName) {\n            controls[controlName] = _this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._createControl = /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            var /** @type {?} */ value = controlConfig[0];\n            var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    FormBuilder.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    FormBuilder.ctorParameters = function () { return []; };\n    return FormBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.2.10');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@experimental\n */\nvar NgNoValidate = /** @class */ (function () {\n    function NgNoValidate() {\n    }\n    NgNoValidate.decorators = [\n        { type: Directive, args: [{\n                    selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                    host: { 'novalidate': '' },\n                },] },\n    ];\n    /** @nocollapse */\n    NgNoValidate.ctorParameters = function () { return []; };\n    return NgNoValidate;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SHARED_FORM_DIRECTIVES = [\n    NgNoValidate,\n    NgSelectOption,\n    NgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nvar TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nvar REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nvar InternalFormsSharedModule = /** @class */ (function () {\n    function InternalFormsSharedModule() {\n    }\n    InternalFormsSharedModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: SHARED_FORM_DIRECTIVES,\n                    exports: SHARED_FORM_DIRECTIVES,\n                },] },\n    ];\n    /** @nocollapse */\n    InternalFormsSharedModule.ctorParameters = function () { return []; };\n    return InternalFormsSharedModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The ng module for forms.\n * \\@stable\n */\nvar FormsModule = /** @class */ (function () {\n    function FormsModule() {\n    }\n    FormsModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                    providers: [RadioControlRegistry],\n                    exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                },] },\n    ];\n    /** @nocollapse */\n    FormsModule.ctorParameters = function () { return []; };\n    return FormsModule;\n}());\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nvar ReactiveFormsModule = /** @class */ (function () {\n    function ReactiveFormsModule() {\n    }\n    ReactiveFormsModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                    providers: [FormBuilder, RadioControlRegistry],\n                    exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                },] },\n    ];\n    /** @nocollapse */\n    ReactiveFormsModule.ctorParameters = function () { return []; };\n    return ReactiveFormsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControlDirective, AbstractFormGroupDirective, CheckboxControlValueAccessor, ControlContainer, NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE, DefaultValueAccessor, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, RadioControlValueAccessor, FormControlDirective, FormControlName, FormGroupDirective, FormArrayName, FormGroupName, NgSelectOption, SelectControlValueAccessor, SelectMultipleControlValueAccessor, CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator, FormBuilder, AbstractControl, FormArray, FormControl, FormGroup, NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators, VERSION, FormsModule, ReactiveFormsModule, InternalFormsSharedModule as ɵba, REACTIVE_DRIVEN_DIRECTIVES as ɵz, SHARED_FORM_DIRECTIVES as ɵx, TEMPLATE_DRIVEN_DIRECTIVES as ɵy, CHECKBOX_VALUE_ACCESSOR as ɵa, DEFAULT_VALUE_ACCESSOR as ɵb, AbstractControlStatus as ɵc, ngControlStatusHost as ɵd, formDirectiveProvider as ɵe, formControlBinding as ɵf, modelGroupProvider as ɵg, NgNoValidate as ɵbf, NUMBER_VALUE_ACCESSOR as ɵbb, NumberValueAccessor as ɵbc, RADIO_VALUE_ACCESSOR as ɵh, RadioControlRegistry as ɵi, RANGE_VALUE_ACCESSOR as ɵbd, RangeValueAccessor as ɵbe, formControlBinding$1 as ɵj, controlNameBinding as ɵk, formDirectiveProvider$1 as ɵl, formArrayNameProvider as ɵn, formGroupNameProvider as ɵm, SELECT_VALUE_ACCESSOR as ɵo, NgSelectMultipleOption as ɵq, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵp, CHECKBOX_REQUIRED_VALIDATOR as ɵs, EMAIL_VALIDATOR as ɵt, MAX_LENGTH_VALIDATOR as ɵv, MIN_LENGTH_VALIDATOR as ɵu, PATTERN_VALIDATOR as ɵw, REQUIRED_VALIDATOR as ɵr };\n//# sourceMappingURL=forms.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/forms/esm5/forms.js\n// module id = 25\n// module chunks = 1","/**\n * @license Angular v5.2.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * AnimationBuilder is an injectable service that is available when the {\\@link\n * BrowserAnimationsModule BrowserAnimationsModule} or {\\@link NoopAnimationsModule\n * NoopAnimationsModule} modules are used within an application.\n *\n * The purpose if this service is to produce an animation sequence programmatically within an\n * angular component or directive.\n *\n * Programmatic animations are first built and then a player is created when the build animation is\n * attached to an element.\n *\n * ```ts\n * // remember to include the BrowserAnimationsModule module for this to work...\n * import {AnimationBuilder} from '\\@angular/animations';\n *\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first build the animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // then create a player from it\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * When an animation is built an instance of {\\@link AnimationFactory AnimationFactory} will be\n * returned. Using that an {\\@link AnimationPlayer AnimationPlayer} can be created which can then be\n * used to start the animation.\n *\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationBuilder = /** @class */ (function () {\n    function AnimationBuilder() {\n    }\n    return AnimationBuilder;\n}());\n/**\n * An instance of `AnimationFactory` is returned from {\\@link AnimationBuilder#build\n * AnimationBuilder.build}.\n *\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationFactory = /** @class */ (function () {\n    function AnimationFactory() {\n    }\n    return AnimationFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AUTO_STYLE = '*';\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disabled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\" *ngFor=\"let banner of banners\"> {{ banner }} </div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ]))\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction animation(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 8 /* Reference */, animation: steps, options: options };\n}\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\nfunction animateChild(options) {\n    if (options === void 0) { options = null; }\n    return { type: 9 /* AnimateChild */, options: options };\n}\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nfunction useAnimation(animation, options) {\n    if (options === void 0) { options = null; }\n    return { type: 10 /* AnimateRef */, animation: animation, options: options };\n}\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nfunction query(selector, animation, options) {\n    if (options === void 0) { options = null; }\n    return { type: 11 /* Query */, selector: selector, animation: animation, options: options };\n}\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\nfunction stagger(timings, animation) {\n    return { type: 12 /* Stagger */, timings: timings, animation: animation };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?} cb\n * @return {?}\n */\nfunction scheduleMicroTask(cb) {\n    Promise.resolve(null).then(cb);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * AnimationPlayer controls an animation sequence that was produced from a programmatic animation.\n * (see {\\@link AnimationBuilder AnimationBuilder} for more information on how to create programmatic\n * animations.)\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationPlayer = /** @class */ (function () {\n    function NoopAnimationPlayer() {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this.parentPlayer = null;\n        this.totalTime = 0;\n    }\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onFinish = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.hasStarted()) {\n            this._onStart();\n            this.triggerMicrotask();\n        }\n        this._started = true;\n    };\n    /* @internal */\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.triggerMicrotask = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        scheduleMicroTask(function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onStart = /**\n     * @return {?}\n     */\n    function () {\n        this._onStartFns.forEach(function (fn) { return fn(); });\n        this._onStartFns = [];\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () { this._onFinish(); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return 0; };\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(function (fn) { return fn(); });\n        methods.length = 0;\n    };\n    return NoopAnimationPlayer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationGroupPlayer = /** @class */ (function () {\n    function AnimationGroupPlayer(_players) {\n        var _this = this;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        this.totalTime = 0;\n        this.players = _players;\n        var /** @type {?} */ doneCount = 0;\n        var /** @type {?} */ destroyCount = 0;\n        var /** @type {?} */ startCount = 0;\n        var /** @type {?} */ total = this.players.length;\n        if (total == 0) {\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        else {\n            this.players.forEach(function (player) {\n                player.onDone(function () {\n                    if (++doneCount == total) {\n                        _this._onFinish();\n                    }\n                });\n                player.onDestroy(function () {\n                    if (++destroyCount == total) {\n                        _this._onDestroy();\n                    }\n                });\n                player.onStart(function () {\n                    if (++startCount == total) {\n                        _this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this.players.reduce(function (time, player) { return Math.max(time, player.totalTime); }, 0);\n    }\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onFinish = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () { this.players.forEach(function (player) { return player.init(); }); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onStart = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.hasStarted()) {\n            this._started = true;\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this.players.forEach(function (player) { return player.play(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () { this.players.forEach(function (player) { return player.pause(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () { this.players.forEach(function (player) { return player.restart(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () {\n        this._onFinish();\n        this.players.forEach(function (player) { return player.finish(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._onDestroy(); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this.players.forEach(function (player) { return player.destroy(); });\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () {\n        this.players.forEach(function (player) { return player.reset(); });\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) {\n        var /** @type {?} */ timeAtPosition = p * this.totalTime;\n        this.players.forEach(function (player) {\n            var /** @type {?} */ position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ min = 0;\n        this.players.forEach(function (player) {\n            var /** @type {?} */ p = player.getPosition();\n            min = Math.min(p, min);\n        });\n        return min;\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.beforeDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.players.forEach(function (player) {\n            if (player.beforeDestroy) {\n                player.beforeDestroy();\n            }\n        });\n    };\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(function (fn) { return fn(); });\n        methods.length = 0;\n    };\n    return AnimationGroupPlayer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ɵPRE_STYLE = '!';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationBuilder, AnimationFactory, AUTO_STYLE, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, NoopAnimationPlayer, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE };\n//# sourceMappingURL=animations.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/animations/esm5/animations.js\n// module id = 259\n// module chunks = 1","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class PasswordService {\r\n\r\n  // url = \"http://localhost:3000/\";\r\n  url = \"https://password-backend.herokuapp.com/\";\r\n\r\n  constructor(public http: Http) { }\r\n\r\n  makeAPICall(password: string) {\r\n\r\n    var data = {\r\n      password: password\r\n    };\r\n    return this.http.post(this.url,data)\r\n                    .map(response => response.json());\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/service/password.service.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent } from './accordion';\nimport { NgbAccordionConfig } from './accordion-config';\nexport { NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent } from './accordion';\nexport { NgbAccordionConfig } from './accordion-config';\nvar NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent];\nvar NgbAccordionModule = (function () {\n    function NgbAccordionModule() {\n    }\n    NgbAccordionModule.forRoot = function () { return { ngModule: NgbAccordionModule, providers: [NgbAccordionConfig] }; };\n    NgbAccordionModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule] },] },\n    ];\n    /** @nocollapse */\n    NgbAccordionModule.ctorParameters = function () { return []; };\n    return NgbAccordionModule;\n}());\nexport { NgbAccordionModule };\n//# sourceMappingURL=accordion.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/accordion/accordion.module.js\n// module id = 261\n// module chunks = 1","import { Component, ContentChildren, Directive, EventEmitter, Input, Output, QueryList, TemplateRef } from '@angular/core';\nimport { isString } from '../util/util';\nimport { NgbAccordionConfig } from './accordion-config';\nvar nextId = 0;\n/**\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\n */\nvar NgbPanelTitle = (function () {\n    function NgbPanelTitle(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPanelTitle.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPanelTitle]' },] },\n    ];\n    /** @nocollapse */\n    NgbPanelTitle.ctorParameters = function () { return [\n        { type: TemplateRef, },\n    ]; };\n    return NgbPanelTitle;\n}());\nexport { NgbPanelTitle };\n/**\n * This directive must be used to wrap accordion panel content.\n */\nvar NgbPanelContent = (function () {\n    function NgbPanelContent(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPanelContent.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPanelContent]' },] },\n    ];\n    /** @nocollapse */\n    NgbPanelContent.ctorParameters = function () { return [\n        { type: TemplateRef, },\n    ]; };\n    return NgbPanelContent;\n}());\nexport { NgbPanelContent };\n/**\n * The NgbPanel directive represents an individual panel with the title and collapsible\n * content\n */\nvar NgbPanel = (function () {\n    function NgbPanel() {\n        /**\n           *  A flag determining whether the panel is disabled or not.\n           *  When disabled, the panel cannot be toggled.\n           */\n        this.disabled = false;\n        /**\n           *  An optional id for the panel. The id should be unique.\n           *  If not provided, it will be auto-generated.\n           */\n        this.id = \"ngb-panel-\" + nextId++;\n        /**\n           * A flag telling if the panel is currently open\n           */\n        this.isOpen = false;\n    }\n    NgbPanel.prototype.ngAfterContentChecked = function () {\n        // We are using @ContentChildren instead of @ContantChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    };\n    NgbPanel.decorators = [\n        { type: Directive, args: [{ selector: 'ngb-panel' },] },\n    ];\n    /** @nocollapse */\n    NgbPanel.ctorParameters = function () { return []; };\n    NgbPanel.propDecorators = {\n        \"disabled\": [{ type: Input },],\n        \"id\": [{ type: Input },],\n        \"title\": [{ type: Input },],\n        \"type\": [{ type: Input },],\n        \"titleTpls\": [{ type: ContentChildren, args: [NgbPanelTitle, { descendants: false },] },],\n        \"contentTpls\": [{ type: ContentChildren, args: [NgbPanelContent, { descendants: false },] },],\n    };\n    return NgbPanel;\n}());\nexport { NgbPanel };\n/**\n * The NgbAccordion directive is a collection of panels.\n * It can assure that only one panel can be opened at a time.\n */\nvar NgbAccordion = (function () {\n    function NgbAccordion(config) {\n        /**\n           * An array or comma separated strings of panel identifiers that should be opened\n           */\n        this.activeIds = [];\n        /**\n           * Whether the closed panels should be hidden without destroying them\n           */\n        this.destroyOnHide = true;\n        /**\n           * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\n           */\n        this.panelChange = new EventEmitter();\n        this.type = config.type;\n        this.closeOtherPanels = config.closeOthers;\n    }\n    /**\n     * Programmatically toggle a panel with a given id.\n     */\n    /**\n       * Programmatically toggle a panel with a given id.\n       */\n    NgbAccordion.prototype.toggle = /**\n       * Programmatically toggle a panel with a given id.\n       */\n    function (panelId) {\n        var panel = this.panels.find(function (p) { return p.id === panelId; });\n        if (panel && !panel.disabled) {\n            var defaultPrevented_1 = false;\n            this.panelChange.emit({ panelId: panelId, nextState: !panel.isOpen, preventDefault: function () { defaultPrevented_1 = true; } });\n            if (!defaultPrevented_1) {\n                panel.isOpen = !panel.isOpen;\n                if (this.closeOtherPanels) {\n                    this._closeOthers(panelId);\n                }\n                this._updateActiveIds();\n            }\n        }\n    };\n    NgbAccordion.prototype.ngAfterContentChecked = function () {\n        var _this = this;\n        // active id updates\n        if (isString(this.activeIds)) {\n            this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n        }\n        // update panels open states\n        this.panels.forEach(function (panel) { return panel.isOpen = !panel.disabled && _this.activeIds.indexOf(panel.id) > -1; });\n        // closeOthers updates\n        if (this.activeIds.length > 1 && this.closeOtherPanels) {\n            this._closeOthers(this.activeIds[0]);\n            this._updateActiveIds();\n        }\n    };\n    NgbAccordion.prototype._closeOthers = function (panelId) {\n        this.panels.forEach(function (panel) {\n            if (panel.id !== panelId) {\n                panel.isOpen = false;\n            }\n        });\n    };\n    NgbAccordion.prototype._updateActiveIds = function () {\n        this.activeIds = this.panels.filter(function (panel) { return panel.isOpen && !panel.disabled; }).map(function (panel) { return panel.id; });\n    };\n    NgbAccordion.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-accordion',\n                    exportAs: 'ngbAccordion',\n                    host: { 'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels' },\n                    template: \"\\n    <ng-template ngFor let-panel [ngForOf]=\\\"panels\\\">\\n      <div class=\\\"card\\\">\\n        <div role=\\\"tab\\\" id=\\\"{{panel.id}}-header\\\"\\n          [class]=\\\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\\\" [class.active]=\\\"panel.isOpen\\\">\\n          <a href (click)=\\\"!!toggle(panel.id)\\\" [class.text-muted]=\\\"panel.disabled\\\" [attr.tabindex]=\\\"(panel.disabled ? '-1' : null)\\\"\\n            [attr.aria-expanded]=\\\"panel.isOpen\\\" [attr.aria-controls]=\\\"(panel.isOpen ? panel.id : null)\\\"\\n            [attr.aria-disabled]=\\\"panel.disabled\\\">\\n            {{panel.title}}<ng-template [ngTemplateOutlet]=\\\"panel.titleTpl?.templateRef\\\"></ng-template>\\n          </a>\\n        </div>\\n        <div id=\\\"{{panel.id}}\\\" role=\\\"tabpanel\\\" [attr.aria-labelledby]=\\\"panel.id + '-header'\\\"\\n             class=\\\"card-body collapse {{panel.isOpen ? 'show' : null}}\\\" *ngIf=\\\"!destroyOnHide || panel.isOpen\\\">\\n             <ng-template [ngTemplateOutlet]=\\\"panel.contentTpl?.templateRef\\\"></ng-template>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbAccordion.ctorParameters = function () { return [\n        { type: NgbAccordionConfig, },\n    ]; };\n    NgbAccordion.propDecorators = {\n        \"panels\": [{ type: ContentChildren, args: [NgbPanel,] },],\n        \"activeIds\": [{ type: Input },],\n        \"closeOtherPanels\": [{ type: Input, args: ['closeOthers',] },],\n        \"destroyOnHide\": [{ type: Input },],\n        \"type\": [{ type: Input },],\n        \"panelChange\": [{ type: Output },],\n    };\n    return NgbAccordion;\n}());\nexport { NgbAccordion };\n//# sourceMappingURL=accordion.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/accordion/accordion.js\n// module id = 262\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbAlert } from './alert';\nimport { NgbAlertConfig } from './alert-config';\nexport { NgbAlert } from './alert';\nexport { NgbAlertConfig } from './alert-config';\nvar NgbAlertModule = (function () {\n    function NgbAlertModule() {\n    }\n    NgbAlertModule.forRoot = function () { return { ngModule: NgbAlertModule, providers: [NgbAlertConfig] }; };\n    NgbAlertModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert] },] },\n    ];\n    /** @nocollapse */\n    NgbAlertModule.ctorParameters = function () { return []; };\n    return NgbAlertModule;\n}());\nexport { NgbAlertModule };\n//# sourceMappingURL=alert.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/alert/alert.module.js\n// module id = 263\n// module chunks = 1","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, } from '@angular/core';\nimport { NgbAlertConfig } from './alert-config';\n/**\n * Alerts can be used to provide feedback messages.\n */\nvar NgbAlert = (function () {\n    function NgbAlert(config) {\n        /**\n           * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n           */\n        this.close = new EventEmitter();\n        this.dismissible = config.dismissible;\n        this.type = config.type;\n    }\n    NgbAlert.prototype.closeHandler = function () { this.close.emit(null); };\n    NgbAlert.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-alert',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: \"\\n    <div [class]=\\\"'alert alert-' + type + (dismissible ? ' alert-dismissible' : '')\\\" role=\\\"alert\\\">\\n      <button *ngIf=\\\"dismissible\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeHandler()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n      <ng-content></ng-content>\\n    </div>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbAlert.ctorParameters = function () { return [\n        { type: NgbAlertConfig, },\n    ]; };\n    NgbAlert.propDecorators = {\n        \"dismissible\": [{ type: Input },],\n        \"type\": [{ type: Input },],\n        \"close\": [{ type: Output },],\n    };\n    return NgbAlert;\n}());\nexport { NgbAlert };\n//# sourceMappingURL=alert.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/alert/alert.js\n// module id = 264\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { NgbButtonLabel } from './label';\nimport { NgbCheckBox } from './checkbox';\nimport { NgbRadio, NgbRadioGroup } from './radio';\nexport { NgbButtonLabel } from './label';\nexport { NgbCheckBox } from './checkbox';\nexport { NgbRadio, NgbRadioGroup } from './radio';\nvar NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\nvar NgbButtonsModule = (function () {\n    function NgbButtonsModule() {\n    }\n    NgbButtonsModule.forRoot = function () { return { ngModule: NgbButtonsModule, providers: [] }; };\n    NgbButtonsModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES },] },\n    ];\n    /** @nocollapse */\n    NgbButtonsModule.ctorParameters = function () { return []; };\n    return NgbButtonsModule;\n}());\nexport { NgbButtonsModule };\n//# sourceMappingURL=buttons.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/buttons/buttons.module.js\n// module id = 265\n// module chunks = 1","import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgbButtonLabel } from './label';\nvar NGB_CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NgbCheckBox; }),\n    multi: true\n};\n/**\n * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable\n * specified via ngModel.\n */\nvar NgbCheckBox = (function () {\n    function NgbCheckBox(_label) {\n        this._label = _label;\n        /**\n           * A flag indicating if a given checkbox button is disabled.\n           */\n        this.disabled = false;\n        /**\n           * Value to be propagated as model when the checkbox is checked.\n           */\n        this.valueChecked = true;\n        /**\n           * Value to be propagated as model when the checkbox is unchecked.\n           */\n        this.valueUnChecked = false;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    Object.defineProperty(NgbCheckBox.prototype, \"focused\", {\n        set: function (isFocused) {\n            this._label.focused = isFocused;\n            if (!isFocused) {\n                this.onTouched();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgbCheckBox.prototype.onInputChange = function ($event) {\n        var modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n        this.onChange(modelToPropagate);\n        this.onTouched();\n        this.writeValue(modelToPropagate);\n    };\n    NgbCheckBox.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbCheckBox.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbCheckBox.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n        this._label.disabled = isDisabled;\n    };\n    NgbCheckBox.prototype.writeValue = function (value) {\n        this.checked = value === this.valueChecked;\n        this._label.active = this.checked;\n    };\n    NgbCheckBox.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbButton][type=checkbox]',\n                    host: {\n                        'autocomplete': 'off',\n                        '[checked]': 'checked',\n                        '[disabled]': 'disabled',\n                        '(change)': 'onInputChange($event)',\n                        '(focus)': 'focused = true',\n                        '(blur)': 'focused = false'\n                    },\n                    providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbCheckBox.ctorParameters = function () { return [\n        { type: NgbButtonLabel, },\n    ]; };\n    NgbCheckBox.propDecorators = {\n        \"disabled\": [{ type: Input },],\n        \"valueChecked\": [{ type: Input },],\n        \"valueUnChecked\": [{ type: Input },],\n    };\n    return NgbCheckBox;\n}());\nexport { NgbCheckBox };\n//# sourceMappingURL=checkbox.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/buttons/checkbox.js\n// module id = 266\n// module chunks = 1","import { Directive, forwardRef, Input, Renderer2, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgbButtonLabel } from './label';\nvar NGB_RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NgbRadioGroup; }),\n    multi: true\n};\nvar nextId = 0;\n/**\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\n * specified via ngModel.\n */\nvar NgbRadioGroup = (function () {\n    function NgbRadioGroup() {\n        this._radios = new Set();\n        this._value = null;\n        /**\n           * The name of the group. Unless enclosed inputs specify a name, this name is used as the name of the\n           * enclosed inputs. If not specified, a name is generated automatically.\n           */\n        this.name = \"ngb-radio-\" + nextId++;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    Object.defineProperty(NgbRadioGroup.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (isDisabled) { this.setDisabledState(isDisabled); },\n        enumerable: true,\n        configurable: true\n    });\n    NgbRadioGroup.prototype.onRadioChange = function (radio) {\n        this.writeValue(radio.value);\n        this.onChange(radio.value);\n    };\n    NgbRadioGroup.prototype.onRadioValueUpdate = function () { this._updateRadiosValue(); };\n    NgbRadioGroup.prototype.register = function (radio) { this._radios.add(radio); };\n    NgbRadioGroup.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbRadioGroup.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbRadioGroup.prototype.setDisabledState = function (isDisabled) {\n        this._disabled = isDisabled;\n        this._updateRadiosDisabled();\n    };\n    NgbRadioGroup.prototype.unregister = function (radio) { this._radios.delete(radio); };\n    NgbRadioGroup.prototype.writeValue = function (value) {\n        this._value = value;\n        this._updateRadiosValue();\n    };\n    NgbRadioGroup.prototype._updateRadiosValue = function () {\n        var _this = this;\n        this._radios.forEach(function (radio) { return radio.updateValue(_this._value); });\n    };\n    NgbRadioGroup.prototype._updateRadiosDisabled = function () { this._radios.forEach(function (radio) { return radio.updateDisabled(); }); };\n    NgbRadioGroup.decorators = [\n        { type: Directive, args: [{ selector: '[ngbRadioGroup]', host: { 'role': 'group' }, providers: [NGB_RADIO_VALUE_ACCESSOR] },] },\n    ];\n    /** @nocollapse */\n    NgbRadioGroup.ctorParameters = function () { return []; };\n    NgbRadioGroup.propDecorators = {\n        \"name\": [{ type: Input },],\n    };\n    return NgbRadioGroup;\n}());\nexport { NgbRadioGroup };\n/**\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\n */\nvar NgbRadio = (function () {\n    function NgbRadio(_group, _label, _renderer, _element) {\n        this._group = _group;\n        this._label = _label;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._value = null;\n        this._group.register(this);\n    }\n    Object.defineProperty(NgbRadio.prototype, \"value\", {\n        get: function () { return this._value; },\n        set: /**\n           * You can specify model value of a given radio by binding to the value property.\n           */\n        function (value) {\n            this._value = value;\n            var stringValue = value ? value.toString() : '';\n            this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n            this._group.onRadioValueUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"disabled\", {\n        get: function () { return this._group.disabled || this._disabled; },\n        set: /**\n           * A flag indicating if a given radio button is disabled.\n           */\n        function (isDisabled) {\n            this._disabled = isDisabled !== false;\n            this.updateDisabled();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"focused\", {\n        set: function (isFocused) {\n            if (this._label) {\n                this._label.focused = isFocused;\n            }\n            if (!isFocused) {\n                this._group.onTouched();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"checked\", {\n        get: function () { return this._checked; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"nameAttr\", {\n        get: function () { return this.name || this._group.name; },\n        enumerable: true,\n        configurable: true\n    });\n    NgbRadio.prototype.ngOnDestroy = function () { this._group.unregister(this); };\n    NgbRadio.prototype.onChange = function () { this._group.onRadioChange(this); };\n    NgbRadio.prototype.updateValue = function (value) {\n        this._checked = this.value === value;\n        this._label.active = this._checked;\n    };\n    NgbRadio.prototype.updateDisabled = function () { this._label.disabled = this.disabled; };\n    NgbRadio.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbButton][type=radio]',\n                    host: {\n                        '[checked]': 'checked',\n                        '[disabled]': 'disabled',\n                        '[name]': 'nameAttr',\n                        '(change)': 'onChange()',\n                        '(focus)': 'focused = true',\n                        '(blur)': 'focused = false'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbRadio.ctorParameters = function () { return [\n        { type: NgbRadioGroup, },\n        { type: NgbButtonLabel, },\n        { type: Renderer2, },\n        { type: ElementRef, },\n    ]; };\n    NgbRadio.propDecorators = {\n        \"name\": [{ type: Input },],\n        \"value\": [{ type: Input, args: ['value',] },],\n        \"disabled\": [{ type: Input, args: ['disabled',] },],\n    };\n    return NgbRadio;\n}());\nexport { NgbRadio };\n//# sourceMappingURL=radio.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/buttons/radio.js\n// module id = 267\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NGB_CAROUSEL_DIRECTIVES } from './carousel';\nimport { NgbCarouselConfig } from './carousel-config';\nexport { NgbCarousel, NgbSlide } from './carousel';\nexport { NgbCarouselConfig } from './carousel-config';\nvar NgbCarouselModule = (function () {\n    function NgbCarouselModule() {\n    }\n    NgbCarouselModule.forRoot = function () { return { ngModule: NgbCarouselModule, providers: [NgbCarouselConfig] }; };\n    NgbCarouselModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule] },] },\n    ];\n    /** @nocollapse */\n    NgbCarouselModule.ctorParameters = function () { return []; };\n    return NgbCarouselModule;\n}());\nexport { NgbCarouselModule };\n//# sourceMappingURL=carousel.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/carousel/carousel.module.js\n// module id = 268\n// module chunks = 1","import { Component, Directive, TemplateRef, ContentChildren, QueryList, Input, Output, EventEmitter } from '@angular/core';\nimport { NgbCarouselConfig } from './carousel-config';\nvar nextId = 0;\n/**\n * Represents an individual slide to be used within a carousel.\n */\nvar NgbSlide = (function () {\n    function NgbSlide(tplRef) {\n        this.tplRef = tplRef;\n        /**\n           * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n           * Will be auto-generated if not provided.\n           */\n        this.id = \"ngb-slide-\" + nextId++;\n    }\n    NgbSlide.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbSlide]' },] },\n    ];\n    /** @nocollapse */\n    NgbSlide.ctorParameters = function () { return [\n        { type: TemplateRef, },\n    ]; };\n    NgbSlide.propDecorators = {\n        \"id\": [{ type: Input },],\n    };\n    return NgbSlide;\n}());\nexport { NgbSlide };\n/**\n * Directive to easily create carousels based on Bootstrap's markup.\n */\nvar NgbCarousel = (function () {\n    function NgbCarousel(config) {\n        /**\n           * A carousel slide event fired when the slide transition is completed.\n           * See NgbSlideEvent for payload details\n           */\n        this.slide = new EventEmitter();\n        this.interval = config.interval;\n        this.wrap = config.wrap;\n        this.keyboard = config.keyboard;\n    }\n    NgbCarousel.prototype.ngAfterContentChecked = function () {\n        var activeSlide = this._getSlideById(this.activeId);\n        this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n    };\n    NgbCarousel.prototype.ngOnInit = function () { this._startTimer(); };\n    NgbCarousel.prototype.ngOnChanges = function (changes) {\n        if ('interval' in changes && !changes['interval'].isFirstChange()) {\n            this._restartTimer();\n        }\n    };\n    NgbCarousel.prototype.ngOnDestroy = function () { clearInterval(this._slideChangeInterval); };\n    /**\n     * Navigate to a slide with the specified identifier.\n     */\n    /**\n       * Navigate to a slide with the specified identifier.\n       */\n    NgbCarousel.prototype.select = /**\n       * Navigate to a slide with the specified identifier.\n       */\n    function (slideId) {\n        this.cycleToSelected(slideId, this.getSlideEventDirection(this.activeId, slideId));\n        this._restartTimer();\n    };\n    /**\n     * Navigate to the next slide.\n     */\n    /**\n       * Navigate to the next slide.\n       */\n    NgbCarousel.prototype.prev = /**\n       * Navigate to the next slide.\n       */\n    function () {\n        this.cycleToPrev();\n        this._restartTimer();\n    };\n    /**\n     * Navigate to the next slide.\n     */\n    /**\n       * Navigate to the next slide.\n       */\n    NgbCarousel.prototype.next = /**\n       * Navigate to the next slide.\n       */\n    function () {\n        this.cycleToNext();\n        this._restartTimer();\n    };\n    /**\n     * Stops the carousel from cycling through items.\n     */\n    /**\n       * Stops the carousel from cycling through items.\n       */\n    NgbCarousel.prototype.pause = /**\n       * Stops the carousel from cycling through items.\n       */\n    function () { this._stopTimer(); };\n    /**\n     * Restarts cycling through the carousel slides from left to right.\n     */\n    /**\n       * Restarts cycling through the carousel slides from left to right.\n       */\n    NgbCarousel.prototype.cycle = /**\n       * Restarts cycling through the carousel slides from left to right.\n       */\n    function () { this._startTimer(); };\n    NgbCarousel.prototype.cycleToNext = function () { this.cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); };\n    NgbCarousel.prototype.cycleToPrev = function () { this.cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); };\n    NgbCarousel.prototype.cycleToSelected = function (slideIdx, direction) {\n        var selectedSlide = this._getSlideById(slideIdx);\n        if (selectedSlide) {\n            if (selectedSlide.id !== this.activeId) {\n                this.slide.emit({ prev: this.activeId, current: selectedSlide.id, direction: direction });\n            }\n            this.activeId = selectedSlide.id;\n        }\n    };\n    NgbCarousel.prototype.getSlideEventDirection = function (currentActiveSlideId, nextActiveSlideId) {\n        var currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n        var nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n        return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n    };\n    NgbCarousel.prototype.keyPrev = function () {\n        if (this.keyboard) {\n            this.prev();\n        }\n    };\n    NgbCarousel.prototype.keyNext = function () {\n        if (this.keyboard) {\n            this.next();\n        }\n    };\n    NgbCarousel.prototype._restartTimer = function () {\n        this._stopTimer();\n        this._startTimer();\n    };\n    NgbCarousel.prototype._startTimer = function () {\n        var _this = this;\n        if (this.interval > 0) {\n            this._slideChangeInterval = setInterval(function () { _this.cycleToNext(); }, this.interval);\n        }\n    };\n    NgbCarousel.prototype._stopTimer = function () { clearInterval(this._slideChangeInterval); };\n    NgbCarousel.prototype._getSlideById = function (slideId) {\n        var slideWithId = this.slides.filter(function (slide) { return slide.id === slideId; });\n        return slideWithId.length ? slideWithId[0] : null;\n    };\n    NgbCarousel.prototype._getSlideIdxById = function (slideId) {\n        return this.slides.toArray().indexOf(this._getSlideById(slideId));\n    };\n    NgbCarousel.prototype._getNextSlide = function (currentSlideId) {\n        var slideArr = this.slides.toArray();\n        var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        var isLastSlide = currentSlideIdx === slideArr.length - 1;\n        return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n            slideArr[currentSlideIdx + 1].id;\n    };\n    NgbCarousel.prototype._getPrevSlide = function (currentSlideId) {\n        var slideArr = this.slides.toArray();\n        var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        var isFirstSlide = currentSlideIdx === 0;\n        return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n            slideArr[currentSlideIdx - 1].id;\n    };\n    NgbCarousel.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-carousel',\n                    exportAs: 'ngbCarousel',\n                    host: {\n                        'class': 'carousel slide',\n                        '[style.display]': '\"block\"',\n                        'tabIndex': '0',\n                        '(mouseenter)': 'pause()',\n                        '(mouseleave)': 'cycle()',\n                        '(keydown.arrowLeft)': 'keyPrev()',\n                        '(keydown.arrowRight)': 'keyNext()'\n                    },\n                    template: \"\\n    <ol class=\\\"carousel-indicators\\\">\\n      <li *ngFor=\\\"let slide of slides\\\" [id]=\\\"slide.id\\\" [class.active]=\\\"slide.id === activeId\\\"\\n          (click)=\\\"cycleToSelected(slide.id, getSlideEventDirection(activeId, slide.id))\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\">\\n      <div *ngFor=\\\"let slide of slides\\\" class=\\\"carousel-item\\\" [class.active]=\\\"slide.id === activeId\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"slide.tplRef\\\"></ng-template>\\n      </div>\\n    </div>\\n    <a class=\\\"carousel-control-prev\\\" role=\\\"button\\\" (click)=\\\"cycleToPrev()\\\">\\n      <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\">Previous</span>\\n    </a>\\n    <a class=\\\"carousel-control-next\\\" role=\\\"button\\\" (click)=\\\"cycleToNext()\\\">\\n      <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\">Next</span>\\n    </a>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbCarousel.ctorParameters = function () { return [\n        { type: NgbCarouselConfig, },\n    ]; };\n    NgbCarousel.propDecorators = {\n        \"slides\": [{ type: ContentChildren, args: [NgbSlide,] },],\n        \"interval\": [{ type: Input },],\n        \"wrap\": [{ type: Input },],\n        \"keyboard\": [{ type: Input },],\n        \"activeId\": [{ type: Input },],\n        \"slide\": [{ type: Output },],\n    };\n    return NgbCarousel;\n}());\nexport { NgbCarousel };\n/**\n * Enum to define the carousel slide event direction\n */\n/**\n * Enum to define the carousel slide event direction\n */\nexport var NgbSlideEventDirection;\n/**\n * Enum to define the carousel slide event direction\n */\n(function (NgbSlideEventDirection) {\n    NgbSlideEventDirection[NgbSlideEventDirection[\"LEFT\"] = 'left'] = \"LEFT\";\n    NgbSlideEventDirection[NgbSlideEventDirection[\"RIGHT\"] = 'right'] = \"RIGHT\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\nexport var NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n//# sourceMappingURL=carousel.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/carousel/carousel.js\n// module id = 269\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { NgbCollapse } from './collapse';\nexport { NgbCollapse } from './collapse';\nvar NgbCollapseModule = (function () {\n    function NgbCollapseModule() {\n    }\n    NgbCollapseModule.forRoot = function () { return { ngModule: NgbCollapseModule, providers: [] }; };\n    NgbCollapseModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbCollapse], exports: [NgbCollapse] },] },\n    ];\n    /** @nocollapse */\n    NgbCollapseModule.ctorParameters = function () { return []; };\n    return NgbCollapseModule;\n}());\nexport { NgbCollapseModule };\n//# sourceMappingURL=collapse.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/collapse/collapse.module.js\n// module id = 270\n// module chunks = 1","import { Directive, Input } from '@angular/core';\n/**\n * The NgbCollapse directive provides a simple way to hide and show an element with animations.\n */\nvar NgbCollapse = (function () {\n    function NgbCollapse() {\n        /**\n           * A flag indicating collapsed (true) or open (false) state.\n           */\n        this.collapsed = false;\n    }\n    NgbCollapse.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbCollapse]',\n                    exportAs: 'ngbCollapse',\n                    host: { '[class.collapse]': 'true', '[class.show]': '!collapsed' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbCollapse.ctorParameters = function () { return []; };\n    NgbCollapse.propDecorators = {\n        \"collapsed\": [{ type: Input, args: ['ngbCollapse',] },],\n    };\n    return NgbCollapse;\n}());\nexport { NgbCollapse };\n//# sourceMappingURL=collapse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/collapse/collapse.js\n// module id = 271\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbDatepicker } from './datepicker';\nimport { NgbDatepickerMonthView } from './datepicker-month-view';\nimport { NgbDatepickerNavigation } from './datepicker-navigation';\nimport { NgbInputDatepicker } from './datepicker-input';\nimport { FormsModule } from '@angular/forms';\nimport { NgbDatepickerDayView } from './datepicker-day-view';\nimport { NgbDatepickerI18n, NgbDatepickerI18nDefault } from './datepicker-i18n';\nimport { NgbCalendar, NgbCalendarGregorian } from './ngb-calendar';\nimport { NgbDateParserFormatter, NgbDateISOParserFormatter } from './ngb-date-parser-formatter';\nimport { NgbDateAdapter, NgbDateStructAdapter } from './ngb-date-adapter';\nimport { NgbDatepickerNavigationSelect } from './datepicker-navigation-select';\nimport { NgbDatepickerConfig } from './datepicker-config';\nexport { NgbDatepicker } from './datepicker';\nexport { NgbInputDatepicker } from './datepicker-input';\nexport { NgbCalendar } from './ngb-calendar';\nexport { NgbCalendarIslamicCivil } from './hijri/ngb-calendar-islamic-civil';\nexport { NgbCalendarIslamicUmalqura } from './hijri/ngb-calendar-islamic-umalqura';\nexport { NgbDatepickerMonthView } from './datepicker-month-view';\nexport { NgbDatepickerDayView } from './datepicker-day-view';\nexport { NgbDatepickerNavigation } from './datepicker-navigation';\nexport { NgbDatepickerNavigationSelect } from './datepicker-navigation-select';\nexport { NgbDatepickerConfig } from './datepicker-config';\nexport { NgbDatepickerI18n } from './datepicker-i18n';\nexport { NgbDateAdapter } from './ngb-date-adapter';\nexport { NgbDateParserFormatter } from './ngb-date-parser-formatter';\nvar NgbDatepickerModule = (function () {\n    function NgbDatepickerModule() {\n    }\n    NgbDatepickerModule.forRoot = function () {\n        return {\n            ngModule: NgbDatepickerModule,\n            providers: [\n                { provide: NgbCalendar, useClass: NgbCalendarGregorian },\n                { provide: NgbDatepickerI18n, useClass: NgbDatepickerI18nDefault },\n                { provide: NgbDateParserFormatter, useClass: NgbDateISOParserFormatter },\n                { provide: NgbDateAdapter, useClass: NgbDateStructAdapter }, NgbDatepickerConfig\n            ]\n        };\n    };\n    NgbDatepickerModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n                        NgbInputDatepicker\n                    ],\n                    exports: [NgbDatepicker, NgbInputDatepicker],\n                    imports: [CommonModule, FormsModule],\n                    entryComponents: [NgbDatepicker]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerModule.ctorParameters = function () { return []; };\n    return NgbDatepickerModule;\n}());\nexport { NgbDatepickerModule };\n//# sourceMappingURL=datepicker.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.js\n// module id = 272\n// module chunks = 1","import { NgbDate } from './ngb-date';\nimport { isDefined } from '../util/util';\nexport function isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\nexport function dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\nexport function checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(\"'maxDate' \" + maxDate + \" should be greater than 'minDate' \" + minDate);\n    }\n}\nexport function checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return NgbDate.from(minDate);\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return NgbDate.from(maxDate);\n    }\n    return date;\n}\nexport function isDateSelectable(date, state) {\n    var minDate = state.minDate, maxDate = state.maxDate, disabled = state.disabled, markDisabled = state.markDisabled;\n    // clang-format off\n    return !(!isDefined(date) ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n    // clang-format on\n}\nexport function generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    var months = calendar.getMonths();\n    if (minDate && date.year === minDate.year) {\n        var index = months.findIndex(function (month) { return month === minDate.month; });\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        var index = months.findIndex(function (month) { return month === maxDate.month; });\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\nexport function generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    var start = minDate && minDate.year || date.year - 10;\n    var end = maxDate && maxDate.year || date.year + 10;\n    return Array.from({ length: end - start + 1 }, function (e, i) { return start + i; });\n}\nexport function nextMonthDisabled(calendar, date, maxDate) {\n    return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\nexport function prevMonthDisabled(calendar, date, minDate) {\n    var prevDate = calendar.getPrev(date, 'm');\n    return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n        prevDate.year < minDate.year && minDate.month === 1);\n}\nexport function buildMonths(calendar, date, state, force) {\n    var displayMonths = state.displayMonths, months = state.months;\n    var newMonths = [];\n    var _loop_1 = function (i) {\n        var newDate = calendar.getNext(date, 'm', i);\n        var index = months.findIndex(function (month) { return month.firstDate.equals(newDate); });\n        if (force || index === -1) {\n            newMonths.push(buildMonth(calendar, newDate, state));\n        }\n        else {\n            newMonths.push(months[index]);\n        }\n    };\n    for (var i = 0; i < displayMonths; i++) {\n        _loop_1(i);\n    }\n    return newMonths;\n}\nexport function buildMonth(calendar, date, state) {\n    var minDate = state.minDate, maxDate = state.maxDate, firstDayOfWeek = state.firstDayOfWeek, markDisabled = state.markDisabled;\n    var month = { firstDate: null, lastDate: null, number: date.month, year: date.year, weeks: [], weekdays: [] };\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // month has weeks\n    for (var week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        var days = [];\n        // week has days\n        for (var day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0) {\n                month.weekdays.push(calendar.getWeekday(date));\n            }\n            var newDate = new NgbDate(date.year, date.month, date.day);\n            var nextDate = calendar.getNext(newDate);\n            // marking date as disabled\n            var disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            days.push({\n                date: newDate,\n                context: {\n                    date: { year: newDate.year, month: newDate.month, day: newDate.day },\n                    currentMonth: month.number,\n                    disabled: disabled,\n                    focused: false,\n                    selected: false\n                }\n            });\n            date = nextDate;\n        }\n        month.weeks.push({ number: calendar.getWeekNumber(days.map(function (day) { return NgbDate.from(day.date); }), firstDayOfWeek), days: days });\n    }\n    return month;\n}\nexport function getFirstViewDate(calendar, date, firstDayOfWeek) {\n    var daysPerWeek = calendar.getDaysPerWeek();\n    var firstMonthDate = new NgbDate(date.year, date.month, 1);\n    var dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n//# sourceMappingURL=datepicker-tools.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.js\n// module id = 273\n// module chunks = 1","// clang-format on\n// clang-format on\nexport var NavigationEvent;\n// clang-format on\n(function (NavigationEvent) {\n    NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n    NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n//# sourceMappingURL=datepicker-view-model.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.js\n// module id = 274\n// module chunks = 1","import { Component, Input, TemplateRef, Output, EventEmitter } from '@angular/core';\nimport { NgbDate } from './ngb-date';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\nvar NgbDatepickerMonthView = (function () {\n    function NgbDatepickerMonthView(i18n) {\n        this.i18n = i18n;\n        this.select = new EventEmitter();\n    }\n    NgbDatepickerMonthView.prototype.doSelect = function (day) {\n        if (!day.context.disabled && !this.isHidden(day)) {\n            this.select.emit(NgbDate.from(day.date));\n        }\n    };\n    NgbDatepickerMonthView.prototype.isCollapsed = function (week) {\n        return this.outsideDays === 'collapsed' && week.days[0].date.month !== this.month.number &&\n            week.days[week.days.length - 1].date.month !== this.month.number;\n    };\n    NgbDatepickerMonthView.prototype.isHidden = function (day) {\n        return (this.outsideDays === 'hidden' || this.outsideDays === 'collapsed') && this.month.number !== day.date.month;\n    };\n    NgbDatepickerMonthView.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-datepicker-month-view',\n                    host: { 'class': 'd-block' },\n                    styles: [\"\\n    .ngb-dp-weekday, .ngb-dp-week-number {\\n      line-height: 2rem;\\n    }\\n    .ngb-dp-weekday {\\n      color: #5bc0de;\\n    }\\n    .ngb-dp-week {\\n        border-radius: 0.25rem;\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n        display: flex;\\n    }\\n    .ngb-dp-weekdays {\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\\n      border-radius: 0rem;\\n    }\\n    .ngb-dp-day, .ngb-dp-weekday, .ngb-dp-week-number {\\n      width: 2rem;\\n      height: 2rem;\\n    }\\n    .ngb-dp-day {\\n      cursor: pointer;\\n    }\\n    .ngb-dp-day.disabled, .ngb-dp-day.hidden {\\n      cursor: default;\\n    }\\n  \"],\n                    template: \"\\n    <div *ngIf=\\\"showWeekdays\\\" class=\\\"ngb-dp-week ngb-dp-weekdays bg-light\\\">\\n      <div *ngIf=\\\"showWeekNumbers\\\" class=\\\"ngb-dp-weekday ngb-dp-showweek\\\"></div>\\n      <div *ngFor=\\\"let w of month.weekdays\\\" class=\\\"ngb-dp-weekday small text-center font-italic\\\">\\n        {{ i18n.getWeekdayShortName(w) }}\\n      </div>\\n    </div>\\n    <ng-template ngFor let-week [ngForOf]=\\\"month.weeks\\\">\\n      <div *ngIf=\\\"!isCollapsed(week)\\\" class=\\\"ngb-dp-week\\\">\\n        <div *ngIf=\\\"showWeekNumbers\\\" class=\\\"ngb-dp-week-number small text-center font-italic text-muted\\\">{{ week.number }}</div>\\n        <div *ngFor=\\\"let day of week.days\\\" (click)=\\\"doSelect(day)\\\" class=\\\"ngb-dp-day\\\" [class.disabled]=\\\"day.context.disabled\\\"\\n         [class.hidden]=\\\"isHidden(day)\\\">\\n          <ng-template [ngIf]=\\\"!isHidden(day)\\\">\\n            <ng-template [ngTemplateOutlet]=\\\"dayTemplate\\\" [ngTemplateOutletContext]=\\\"day.context\\\"></ng-template>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerMonthView.ctorParameters = function () { return [\n        { type: NgbDatepickerI18n, },\n    ]; };\n    NgbDatepickerMonthView.propDecorators = {\n        \"dayTemplate\": [{ type: Input },],\n        \"month\": [{ type: Input },],\n        \"outsideDays\": [{ type: Input },],\n        \"showWeekdays\": [{ type: Input },],\n        \"showWeekNumbers\": [{ type: Input },],\n        \"select\": [{ type: Output },],\n    };\n    return NgbDatepickerMonthView;\n}());\nexport { NgbDatepickerMonthView };\n//# sourceMappingURL=datepicker-month-view.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.js\n// module id = 275\n// module chunks = 1","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { NavigationEvent } from './datepicker-view-model';\nimport { NgbDate } from './ngb-date';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\n// The -ms- and -webkit- element for the CSS can be removed if we are generating the CSS using SASS.\nvar NgbDatepickerNavigation = (function () {\n    function NgbDatepickerNavigation(i18n) {\n        this.i18n = i18n;\n        this.navigation = NavigationEvent;\n        this.months = [];\n        this.navigate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    NgbDatepickerNavigation.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-datepicker-navigation',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\"\\n    :host {\\n      height: 2rem;\\n      line-height: 1.85rem;\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n    }\\n    .ngb-dp-navigation-chevron::before {\\n      border-style: solid;\\n      border-width: 0.2em 0.2em 0 0;\\n      content: '';\\n      display: inline-block;\\n      width: 0.75em;\\n      height: 0.75em;\\n      transform: rotate(-135deg);\\n      -webkit-transform: rotate(-135deg);\\n      -ms-transform: rotate(-135deg);\\n    }\\n    .right .ngb-dp-navigation-chevron:before {\\n      -webkit-transform: rotate(45deg);\\n      -ms-transform: rotate(45deg);\\n      transform: rotate(45deg);\\n    }\\n    .ngb-dp-arrow {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-flex: 1 1 auto;\\n      -ms-flex: 1 1 auto;\\n      flex-basis: auto;\\n      flex-grow: 1;\\n      padding-right: 0px;\\n      padding-left: 0px;\\n      margin: 0px;\\n      width: 2rem;\\n      height: 2rem;\\n    }\\n    .ngb-dp-arrow.right {\\n      -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n      justify-content: flex-end;\\n    }\\n    .ngb-dp-arrow-btn {\\n      padding: 0rem 1rem;\\n    }\\n    .ngb-dp-month-name {\\n      font-size: larger;\\n      height: 2rem;\\n      line-height: 2rem;\\n      text-align: center;\\n    }\\n    .ngb-dp-navigation-select {\\n      -webkit-box-flex: 1 1 9rem;\\n      -ms-flex:  1 1 9rem;\\n      flex-grow: 1;\\n      flex-basis: 9rem;\\n    }\\n  \"],\n                    template: \"\\n  <div class=\\\"ngb-dp-arrow\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\"\\n            (click)=\\\"!!navigate.emit(navigation.PREV)\\\" [disabled]=\\\"prevDisabled\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n    </button>\\n  </div>\\n    <ngb-datepicker-navigation-select *ngIf=\\\"showSelect\\\" class=\\\"d-block ngb-dp-navigation-select\\\"\\n      [date]=\\\"date\\\"\\n      [disabled] = \\\"disabled\\\"\\n      [months]=\\\"selectBoxes.months\\\"\\n      [years]=\\\"selectBoxes.years\\\"\\n      (select)=\\\"select.emit($event)\\\">\\n    </ngb-datepicker-navigation-select>\\n\\n    <ng-template *ngIf=\\\"!showSelect\\\" ngFor let-month [ngForOf]=\\\"months\\\" let-i=\\\"index\\\">\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i > 0\\\"></div>\\n      <div class=\\\"ngb-dp-month-name d-block\\\">\\n        {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\\n      </div>\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i !== months.length - 1\\\"></div>\\n    </ng-template>\\n    <div class=\\\"ngb-dp-arrow right\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\"\\n            (click)=\\\"!!navigate.emit(navigation.NEXT)\\\" [disabled]=\\\"nextDisabled\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n    </button>\\n    </div>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerNavigation.ctorParameters = function () { return [\n        { type: NgbDatepickerI18n, },\n    ]; };\n    NgbDatepickerNavigation.propDecorators = {\n        \"date\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"months\": [{ type: Input },],\n        \"showSelect\": [{ type: Input },],\n        \"prevDisabled\": [{ type: Input },],\n        \"nextDisabled\": [{ type: Input },],\n        \"selectBoxes\": [{ type: Input },],\n        \"navigate\": [{ type: Output },],\n        \"select\": [{ type: Output },],\n    };\n    return NgbDatepickerNavigation;\n}());\nexport { NgbDatepickerNavigation };\n//# sourceMappingURL=datepicker-navigation.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.js\n// module id = 276\n// module chunks = 1","import { Directive, Input, ElementRef, ViewContainerRef, Renderer2, ComponentFactoryResolver, NgZone, TemplateRef, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { NgbDate } from './ngb-date';\nimport { NgbDatepicker } from './datepicker';\nimport { NgbDateParserFormatter } from './ngb-date-parser-formatter';\nimport { positionElements } from '../util/positioning';\nimport { NgbDateAdapter } from './ngb-date-adapter';\nimport { NgbCalendar } from './ngb-calendar';\nimport { NgbDatepickerService } from './datepicker-service';\nvar NGB_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NgbInputDatepicker; }),\n    multi: true\n};\nvar NGB_DATEPICKER_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return NgbInputDatepicker; }),\n    multi: true\n};\n/**\n * A directive that makes it possible to have datepickers on input fields.\n * Manages integration with the input field itself (data entry) and ngModel (validation etc.).\n */\nvar NgbInputDatepicker = (function () {\n    function NgbInputDatepicker(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, ngZone, _service, _calendar, _ngbDateAdapter) {\n        var _this = this;\n        this._parserFormatter = _parserFormatter;\n        this._elRef = _elRef;\n        this._vcRef = _vcRef;\n        this._renderer = _renderer;\n        this._cfr = _cfr;\n        this._service = _service;\n        this._calendar = _calendar;\n        this._ngbDateAdapter = _ngbDateAdapter;\n        this._cRef = null;\n        this._disabled = false;\n        /**\n           * Indicates whether the datepicker popup should be closed automatically after date selection or not.\n           * If the value is 'false', the popup can be closed via 'close()' or 'toggle()' methods.\n           *\n           * @since 1.1.0\n           */\n        this.autoClose = true;\n        /**\n              * Placement of a datepicker popup accepts:\n              *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n              *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n              * and array of above values.\n              */\n        this.placement = 'bottom-left';\n        /**\n           * An event fired when user selects a date using keyboard or mouse.\n           * The payload of the event is currently selected NgbDateStruct.\n           *\n           * @since 1.1.1\n           */\n        this.dateSelect = new EventEmitter();\n        /**\n           * An event fired when navigation happens and currently displayed month changes.\n           * See NgbDatepickerNavigateEvent for the payload info.\n           */\n        this.navigate = new EventEmitter();\n        this._onChange = function (_) { };\n        this._onTouched = function () { };\n        this._validatorChange = function () { };\n        this._zoneSubscription = ngZone.onStable.subscribe(function () {\n            if (_this._cRef) {\n                positionElements(_this._elRef.nativeElement, _this._cRef.location.nativeElement, _this.placement, _this.container === 'body');\n            }\n        });\n    }\n    Object.defineProperty(NgbInputDatepicker.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled;\n        },\n        set: function (value) {\n            this._disabled = value === '' || (value && value !== 'false');\n            if (this.isOpen()) {\n                this._cRef.instance.setDisabledState(this._disabled);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgbInputDatepicker.prototype.registerOnChange = function (fn) { this._onChange = fn; };\n    NgbInputDatepicker.prototype.registerOnTouched = function (fn) { this._onTouched = fn; };\n    NgbInputDatepicker.prototype.registerOnValidatorChange = function (fn) { this._validatorChange = fn; };\n    ;\n    NgbInputDatepicker.prototype.setDisabledState = function (isDisabled) { this.disabled = isDisabled; };\n    NgbInputDatepicker.prototype.validate = function (c) {\n        var value = c.value;\n        if (value === null || value === undefined) {\n            return null;\n        }\n        var ngbDate = this._fromDateStruct(this._ngbDateAdapter.fromModel(value));\n        if (!this._calendar.isValid(ngbDate)) {\n            return { 'ngbDate': { invalid: c.value } };\n        }\n        if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n            return { 'ngbDate': { requiredBefore: this.minDate } };\n        }\n        if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n            return { 'ngbDate': { requiredAfter: this.maxDate } };\n        }\n    };\n    NgbInputDatepicker.prototype.writeValue = function (value) {\n        this._model = this._fromDateStruct(this._ngbDateAdapter.fromModel(value));\n        this._writeModelValue(this._model);\n    };\n    NgbInputDatepicker.prototype.manualDateChange = function (value, updateView) {\n        if (updateView === void 0) { updateView = false; }\n        this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n        this._onChange(this._model ? this._ngbDateAdapter.toModel(this._model) : (value === '' ? null : value));\n        if (updateView && this._model) {\n            this._writeModelValue(this._model);\n        }\n    };\n    NgbInputDatepicker.prototype.isOpen = function () { return !!this._cRef; };\n    /**\n     * Opens the datepicker with the selected date indicated by the ngModel value.\n     */\n    /**\n       * Opens the datepicker with the selected date indicated by the ngModel value.\n       */\n    NgbInputDatepicker.prototype.open = /**\n       * Opens the datepicker with the selected date indicated by the ngModel value.\n       */\n    function () {\n        var _this = this;\n        if (!this.isOpen()) {\n            var cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n            this._cRef = this._vcRef.createComponent(cf);\n            this._applyPopupStyling(this._cRef.location.nativeElement);\n            this._applyDatepickerInputs(this._cRef.instance);\n            this._subscribeForDatepickerOutputs(this._cRef.instance);\n            this._cRef.instance.ngOnInit();\n            this._cRef.instance.writeValue(this._ngbDateAdapter.toModel(this._model));\n            // date selection event handling\n            this._cRef.instance.registerOnChange(function (selectedDate) {\n                _this.writeValue(selectedDate);\n                _this._onChange(selectedDate);\n            });\n            // focus handling\n            this._cRef.instance.focus();\n            this._cRef.instance.setDisabledState(this.disabled);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n            }\n        }\n    };\n    /**\n     * Closes the datepicker popup.\n     */\n    /**\n       * Closes the datepicker popup.\n       */\n    NgbInputDatepicker.prototype.close = /**\n       * Closes the datepicker popup.\n       */\n    function () {\n        if (this.isOpen()) {\n            this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n            this._cRef = null;\n        }\n    };\n    /**\n     * Toggles the datepicker popup (opens when closed and closes when opened).\n     */\n    /**\n       * Toggles the datepicker popup (opens when closed and closes when opened).\n       */\n    NgbInputDatepicker.prototype.toggle = /**\n       * Toggles the datepicker popup (opens when closed and closes when opened).\n       */\n    function () {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Navigates current view to provided date.\n     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     * Use 'startDate' input as an alternative\n     */\n    /**\n       * Navigates current view to provided date.\n       * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date provided calendar will open current month.\n       * Use 'startDate' input as an alternative\n       */\n    NgbInputDatepicker.prototype.navigateTo = /**\n       * Navigates current view to provided date.\n       * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date provided calendar will open current month.\n       * Use 'startDate' input as an alternative\n       */\n    function (date) {\n        if (this.isOpen()) {\n            this._cRef.instance.navigateTo(date);\n        }\n    };\n    NgbInputDatepicker.prototype.onBlur = function () { this._onTouched(); };\n    NgbInputDatepicker.prototype.ngOnChanges = function (changes) {\n        if (changes['minDate'] || changes['maxDate']) {\n            this._validatorChange();\n        }\n    };\n    NgbInputDatepicker.prototype.ngOnDestroy = function () {\n        this.close();\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbInputDatepicker.prototype._applyDatepickerInputs = function (datepickerInstance) {\n        var _this = this;\n        ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\n            'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n            .forEach(function (optionName) {\n            if (_this[optionName] !== undefined) {\n                datepickerInstance[optionName] = _this[optionName];\n            }\n        });\n        datepickerInstance.startDate = this.startDate || this._model;\n    };\n    NgbInputDatepicker.prototype._applyPopupStyling = function (nativeElement) {\n        this._renderer.addClass(nativeElement, 'dropdown-menu');\n        this._renderer.setStyle(nativeElement, 'padding', '0');\n        this._renderer.addClass(nativeElement, 'show');\n    };\n    NgbInputDatepicker.prototype._subscribeForDatepickerOutputs = function (datepickerInstance) {\n        var _this = this;\n        datepickerInstance.navigate.subscribe(function (date) { return _this.navigate.emit(date); });\n        datepickerInstance.select.subscribe(function (date) {\n            _this.dateSelect.emit(date);\n            if (_this.autoClose) {\n                _this.close();\n            }\n        });\n    };\n    NgbInputDatepicker.prototype._writeModelValue = function (model) {\n        this._renderer.setProperty(this._elRef.nativeElement, 'value', this._parserFormatter.format(model));\n        if (this.isOpen()) {\n            this._cRef.instance.writeValue(this._ngbDateAdapter.toModel(model));\n            this._onTouched();\n        }\n    };\n    NgbInputDatepicker.prototype._fromDateStruct = function (date) {\n        var ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n        return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    };\n    NgbInputDatepicker.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[ngbDatepicker]',\n                    exportAs: 'ngbDatepicker',\n                    host: {\n                        '(input)': 'manualDateChange($event.target.value)',\n                        '(change)': 'manualDateChange($event.target.value, true)',\n                        '(keyup.esc)': 'close()',\n                        '(blur)': 'onBlur()',\n                        '[disabled]': 'disabled'\n                    },\n                    providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbInputDatepicker.ctorParameters = function () { return [\n        { type: NgbDateParserFormatter, },\n        { type: ElementRef, },\n        { type: ViewContainerRef, },\n        { type: Renderer2, },\n        { type: ComponentFactoryResolver, },\n        { type: NgZone, },\n        { type: NgbDatepickerService, },\n        { type: NgbCalendar, },\n        { type: NgbDateAdapter, },\n    ]; };\n    NgbInputDatepicker.propDecorators = {\n        \"autoClose\": [{ type: Input },],\n        \"dayTemplate\": [{ type: Input },],\n        \"displayMonths\": [{ type: Input },],\n        \"firstDayOfWeek\": [{ type: Input },],\n        \"markDisabled\": [{ type: Input },],\n        \"minDate\": [{ type: Input },],\n        \"maxDate\": [{ type: Input },],\n        \"navigation\": [{ type: Input },],\n        \"outsideDays\": [{ type: Input },],\n        \"placement\": [{ type: Input },],\n        \"showWeekdays\": [{ type: Input },],\n        \"showWeekNumbers\": [{ type: Input },],\n        \"startDate\": [{ type: Input },],\n        \"container\": [{ type: Input },],\n        \"dateSelect\": [{ type: Output },],\n        \"navigate\": [{ type: Output },],\n        \"disabled\": [{ type: Input },],\n    };\n    return NgbInputDatepicker;\n}());\nexport { NgbInputDatepicker };\n//# sourceMappingURL=datepicker-input.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.js\n// module id = 277\n// module chunks = 1","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nvar NgbDatepickerDayView = (function () {\n    function NgbDatepickerDayView() {\n    }\n    NgbDatepickerDayView.prototype.isMuted = function () { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); };\n    NgbDatepickerDayView.decorators = [\n        { type: Component, args: [{\n                    selector: '[ngbDatepickerDayView]',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\"\\n    :host {\\n      text-align: center;\\n      width: 2rem;\\n      height: 2rem;\\n      line-height: 2rem;\\n      border-radius: 0.25rem;\\n      background: transparent;\\n    }\\n    :host.outside {\\n      opacity: 0.5;\\n    }\\n  \"],\n                    host: {\n                        'class': 'btn-light',\n                        '[class.bg-primary]': 'selected',\n                        '[class.text-white]': 'selected',\n                        '[class.text-muted]': 'isMuted()',\n                        '[class.outside]': 'isMuted()',\n                        '[class.active]': 'focused'\n                    },\n                    template: \"{{ date.day }}\"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerDayView.ctorParameters = function () { return []; };\n    NgbDatepickerDayView.propDecorators = {\n        \"currentMonth\": [{ type: Input },],\n        \"date\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"focused\": [{ type: Input },],\n        \"selected\": [{ type: Input },],\n    };\n    return NgbDatepickerDayView;\n}());\nexport { NgbDatepickerDayView };\n//# sourceMappingURL=datepicker-day-view.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.js\n// module id = 278\n// module chunks = 1","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { NgbDate } from './ngb-date';\nimport { toInteger } from '../util/util';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\nvar NgbDatepickerNavigationSelect = (function () {\n    function NgbDatepickerNavigationSelect(i18n) {\n        this.i18n = i18n;\n        this.select = new EventEmitter();\n    }\n    NgbDatepickerNavigationSelect.prototype.changeMonth = function (month) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); };\n    NgbDatepickerNavigationSelect.prototype.changeYear = function (year) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); };\n    NgbDatepickerNavigationSelect.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-datepicker-navigation-select',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\"\\n    :host>select {\\n      /* to align with btn-sm */\\n      padding: 0.25rem 0.5rem;\\n      font-size: 0.875rem;\\n      line-height: 1.25;\\n      /* to cancel the custom height set by custom-select */\\n      height: inherit;\\n      width: 50%;\\n      display: inline-block;\\n    }\\n  \"],\n                    template: \"\\n    <select\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      [value]=\\\"date?.month\\\"\\n      (change)=\\\"changeMonth($event.target.value)\\\"\\n      tabindex=\\\"-1\\\">\\n        <option *ngFor=\\\"let m of months\\\" [value]=\\\"m\\\">{{ i18n.getMonthShortName(m) }}</option>\\n    </select><select\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      [value]=\\\"date?.year\\\"\\n      (change)=\\\"changeYear($event.target.value)\\\"\\n      tabindex=\\\"-1\\\">\\n        <option *ngFor=\\\"let y of years\\\" [value]=\\\"y\\\">{{ y }}</option>\\n    </select>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerNavigationSelect.ctorParameters = function () { return [\n        { type: NgbDatepickerI18n, },\n    ]; };\n    NgbDatepickerNavigationSelect.propDecorators = {\n        \"date\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"months\": [{ type: Input },],\n        \"years\": [{ type: Input },],\n        \"select\": [{ type: Output },],\n    };\n    return NgbDatepickerNavigationSelect;\n}());\nexport { NgbDatepickerNavigationSelect };\n//# sourceMappingURL=datepicker-navigation-select.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.js\n// module id = 279\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { NgbCalendarHijri } from './ngb-calendar-hijri';\nimport { NgbDate } from '../ngb-date';\nimport { Injectable } from '@angular/core';\nfunction isGregorianLeapYear(date) {\n    var year = date.getFullYear();\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nfunction mod(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\nvar GREGORIAN_EPOCH = 1721425.5;\nvar ISLAMIC_EPOCH = 1948439.5;\nvar NgbCalendarIslamicCivil = (function (_super) {\n    __extends(NgbCalendarIslamicCivil, _super);\n    function NgbCalendarIslamicCivil() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gdate` is a JS Date to be converted to Hijri.\n     */\n    /**\n       * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n       * `gdate` is a JS Date to be converted to Hijri.\n       */\n    NgbCalendarIslamicCivil.prototype.fromGregorian = /**\n       * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n       * `gdate` is a JS Date to be converted to Hijri.\n       */\n    function (gdate) {\n        var date = new Date(gdate);\n        var gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n        var julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n            -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n            Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(date) ? -1 : -2) + gDay);\n        julianDay = Math.floor(julianDay) + 0.5;\n        var days = julianDay - ISLAMIC_EPOCH;\n        var hYear = Math.floor((30 * days + 10646) / 10631.0);\n        var hMonth = Math.ceil((days - 29 - this._getYearStart(hYear)) / 29.5);\n        hMonth = Math.min(hMonth, 11);\n        var hDay = Math.ceil(days - this._getMonthStart(hYear, hMonth)) + 1;\n        return new NgbDate(hYear, hMonth + 1, hDay);\n    };\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hijriDate` is an islamic(civil) date to be converted to Gregorian.\n     */\n    /**\n       * Returns the equivalent JS date value for a give input islamic(civil) date.\n       * `hijriDate` is an islamic(civil) date to be converted to Gregorian.\n       */\n    NgbCalendarIslamicCivil.prototype.toGregorian = /**\n       * Returns the equivalent JS date value for a give input islamic(civil) date.\n       * `hijriDate` is an islamic(civil) date to be converted to Gregorian.\n       */\n    function (hijriDate) {\n        var hYear = hijriDate.year;\n        var hMonth = hijriDate.month - 1;\n        var hDate = hijriDate.day;\n        var julianDay = hDate + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n        var wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH, quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524), dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461), yindex = Math.floor(dquad / 365);\n        var year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n        if (!(cent === 4 || yindex === 4)) {\n            year++;\n        }\n        var gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400);\n        var yearday = wjd - gYearStart;\n        var tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n        var leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n        var month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n        var tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n                1);\n        var day = wjd - tjd2 + 1;\n        return new Date(year, month - 1, day);\n    };\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n    /**\n       * Returns the number of days in a specific Hijri month.\n       * `month` is 1 for Muharram, 2 for Safar, etc.\n       * `year` is any Hijri year.\n       */\n    NgbCalendarIslamicCivil.prototype.getDaysInIslamicMonth = /**\n       * Returns the number of days in a specific Hijri month.\n       * `month` is 1 for Muharram, 2 for Safar, etc.\n       * `year` is any Hijri year.\n       */\n    function (month, year) {\n        year = year + Math.floor(month / 13);\n        month = ((month - 1) % 12) + 1;\n        var length = 29 + month % 2;\n        if (month === 12 && this._isIslamicLeapYear(year)) {\n            length++;\n        }\n        return length;\n    };\n    NgbCalendarIslamicCivil.prototype.getNext = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        date = NgbDate.from(date);\n        switch (period) {\n            case 'y':\n                date = this.setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this.setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this.setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    };\n    NgbCalendarIslamicCivil.prototype.getPrev = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    NgbCalendarIslamicCivil.prototype.getWeekday = function (date) {\n        var day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    NgbCalendarIslamicCivil.prototype.getWeekNumber = function (week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        var date = week[thursdayIndex];\n        var jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        var time = jsDate.getTime();\n        var MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n        return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    };\n    NgbCalendarIslamicCivil.prototype.getToday = function () { return this.fromGregorian(new Date()); };\n    NgbCalendarIslamicCivil.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbCalendarIslamicCivil.ctorParameters = function () { return []; };\n    return NgbCalendarIslamicCivil;\n}(NgbCalendarHijri));\nexport { NgbCalendarIslamicCivil };\n//# sourceMappingURL=ngb-calendar-islamic-civil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.js\n// module id = 280\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { NgbCalendar } from '../ngb-calendar';\nimport { Injectable } from '@angular/core';\nimport { isNumber } from '../../util/util';\nvar NgbCalendarHijri = (function (_super) {\n    __extends(NgbCalendarHijri, _super);\n    function NgbCalendarHijri() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NgbCalendarHijri.prototype.getDaysPerWeek = function () { return 7; };\n    NgbCalendarHijri.prototype.getMonths = function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; };\n    NgbCalendarHijri.prototype.getWeeksPerMonth = function () { return 6; };\n    NgbCalendarHijri.prototype.isValid = function (date) {\n        return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n            !isNaN(this.toGregorian(date).getTime());\n    };\n    NgbCalendarHijri.prototype.setDay = function (date, day) {\n        day = +day;\n        var mDays = this.getDaysInIslamicMonth(date.month, date.year);\n        if (day <= 0) {\n            while (day <= 0) {\n                date = this.setMonth(date, date.month - 1);\n                mDays = this.getDaysInIslamicMonth(date.month, date.year);\n                day += mDays;\n            }\n        }\n        else if (day > mDays) {\n            while (day > mDays) {\n                day -= mDays;\n                date = this.setMonth(date, date.month + 1);\n                mDays = this.getDaysInIslamicMonth(date.month, date.year);\n            }\n        }\n        date.day = day;\n        return date;\n    };\n    NgbCalendarHijri.prototype.setMonth = function (date, month) {\n        month = +month;\n        date.year = date.year + Math.floor((month - 1) / 12);\n        date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n        return date;\n    };\n    NgbCalendarHijri.prototype.setYear = function (date, yearValue) {\n        date.year = +yearValue;\n        return date;\n    };\n    NgbCalendarHijri.prototype._isIslamicLeapYear = function (year) { return (14 + 11 * year) % 30 < 11; };\n    /**\n     * Returns the start of Hijri Month.\n     * `month` is 0 for Muharram, 1 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n    /**\n       * Returns the start of Hijri Month.\n       * `month` is 0 for Muharram, 1 for Safar, etc.\n       * `year` is any Hijri year.\n       */\n    NgbCalendarHijri.prototype._getMonthStart = /**\n       * Returns the start of Hijri Month.\n       * `month` is 0 for Muharram, 1 for Safar, etc.\n       * `year` is any Hijri year.\n       */\n    function (year, month) {\n        return Math.ceil(29.5 * month) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n    };\n    /**\n     * Returns the start of Hijri year.\n     * `year` is any Hijri year.\n     */\n    /**\n       * Returns the start of Hijri year.\n       * `year` is any Hijri year.\n       */\n    NgbCalendarHijri.prototype._getYearStart = /**\n       * Returns the start of Hijri year.\n       * `year` is any Hijri year.\n       */\n    function (year) { return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0); };\n    NgbCalendarHijri.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbCalendarHijri.ctorParameters = function () { return []; };\n    return NgbCalendarHijri;\n}(NgbCalendar));\nexport { NgbCalendarHijri };\n//# sourceMappingURL=ngb-calendar-hijri.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.js\n// module id = 281\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu } from './dropdown';\nimport { NgbDropdownConfig } from './dropdown-config';\nexport { NgbDropdown, NgbDropdownToggle, NgbDropdownMenu } from './dropdown';\nexport { NgbDropdownConfig } from './dropdown-config';\nvar NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu];\nvar NgbDropdownModule = (function () {\n    function NgbDropdownModule() {\n    }\n    NgbDropdownModule.forRoot = function () { return { ngModule: NgbDropdownModule, providers: [NgbDropdownConfig] }; };\n    NgbDropdownModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownModule.ctorParameters = function () { return []; };\n    return NgbDropdownModule;\n}());\nexport { NgbDropdownModule };\n//# sourceMappingURL=dropdown.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.js\n// module id = 282\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { forwardRef, Inject, Directive, Input, Output, EventEmitter, ElementRef, ContentChild, NgZone, Renderer2 } from '@angular/core';\nimport { NgbDropdownConfig } from './dropdown-config';\nimport { positionElements } from '../util/positioning';\n/**\n */\nvar NgbDropdownMenu = (function () {\n    function NgbDropdownMenu(dropdown, _elementRef, _renderer) {\n        this.dropdown = dropdown;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.placement = 'bottom';\n        this.isOpen = false;\n    }\n    NgbDropdownMenu.prototype.isEventFrom = function ($event) { return this._elementRef.nativeElement.contains($event.target); };\n    NgbDropdownMenu.prototype.position = function (triggerEl, placement) {\n        this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));\n    };\n    NgbDropdownMenu.prototype.applyPlacement = function (_placement) {\n        // remove the current placement classes\n        this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');\n        this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n        this.placement = _placement;\n        /**\n             * apply the new placement\n             * in case of top use up-arrow or down-arrow otherwise\n             */\n        if (_placement.search('^top') !== -1) {\n            this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');\n        }\n        else {\n            this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n        }\n    };\n    NgbDropdownMenu.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbDropdownMenu]',\n                    host: { '[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()', '[attr.x-placement]': 'placement' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownMenu.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return NgbDropdown; }),] },] },\n        { type: ElementRef, },\n        { type: Renderer2, },\n    ]; };\n    return NgbDropdownMenu;\n}());\nexport { NgbDropdownMenu };\n/**\n * Marks an element to which dropdown menu will be anchored. This is a simple version\n * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but\n * doesn't listen to click events to toggle dropdown menu thus enabling support for\n * events other than click.\n *\n * @since 1.1.0\n */\nvar NgbDropdownAnchor = (function () {\n    function NgbDropdownAnchor(dropdown, _elementRef) {\n        this.dropdown = dropdown;\n        this._elementRef = _elementRef;\n        this.anchorEl = _elementRef.nativeElement;\n    }\n    NgbDropdownAnchor.prototype.isEventFrom = function ($event) { return this._elementRef.nativeElement.contains($event.target); };\n    NgbDropdownAnchor.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbDropdownAnchor]',\n                    host: { 'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownAnchor.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return NgbDropdown; }),] },] },\n        { type: ElementRef, },\n    ]; };\n    return NgbDropdownAnchor;\n}());\nexport { NgbDropdownAnchor };\n/**\n * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an\n * alternative.\n */\nvar NgbDropdownToggle = (function (_super) {\n    __extends(NgbDropdownToggle, _super);\n    function NgbDropdownToggle(dropdown, elementRef) {\n        return _super.call(this, dropdown, elementRef) || this;\n    }\n    NgbDropdownToggle.prototype.toggleOpen = function () { this.dropdown.toggle(); };\n    NgbDropdownToggle.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbDropdownToggle]',\n                    host: {\n                        'class': 'dropdown-toggle',\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'dropdown.isOpen()',\n                        '(click)': 'toggleOpen()'\n                    },\n                    providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(function () { return NgbDropdownToggle; }) }]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownToggle.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return NgbDropdown; }),] },] },\n        { type: ElementRef, },\n    ]; };\n    return NgbDropdownToggle;\n}(NgbDropdownAnchor));\nexport { NgbDropdownToggle };\n/**\n * Transforms a node into a dropdown.\n */\nvar NgbDropdown = (function () {\n    function NgbDropdown(config, ngZone) {\n        var _this = this;\n        /**\n           *  Defines whether or not the dropdown-menu is open initially.\n           */\n        this._open = false;\n        /**\n           *  An event fired when the dropdown is opened or closed.\n           *  Event's payload equals whether dropdown is open.\n           */\n        this.openChange = new EventEmitter();\n        this.placement = config.placement;\n        this.autoClose = config.autoClose;\n        this._zoneSubscription = ngZone.onStable.subscribe(function () { _this._positionMenu(); });\n    }\n    NgbDropdown.prototype.ngOnInit = function () {\n        if (this._menu) {\n            this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement);\n        }\n    };\n    /**\n     * Checks if the dropdown menu is open or not.\n     */\n    /**\n       * Checks if the dropdown menu is open or not.\n       */\n    NgbDropdown.prototype.isOpen = /**\n       * Checks if the dropdown menu is open or not.\n       */\n    function () { return this._open; };\n    /**\n     * Opens the dropdown menu of a given navbar or tabbed navigation.\n     */\n    /**\n       * Opens the dropdown menu of a given navbar or tabbed navigation.\n       */\n    NgbDropdown.prototype.open = /**\n       * Opens the dropdown menu of a given navbar or tabbed navigation.\n       */\n    function () {\n        if (!this._open) {\n            this._open = true;\n            this._positionMenu();\n            this.openChange.emit(true);\n        }\n    };\n    /**\n     * Closes the dropdown menu of a given navbar or tabbed navigation.\n     */\n    /**\n       * Closes the dropdown menu of a given navbar or tabbed navigation.\n       */\n    NgbDropdown.prototype.close = /**\n       * Closes the dropdown menu of a given navbar or tabbed navigation.\n       */\n    function () {\n        if (this._open) {\n            this._open = false;\n            this.openChange.emit(false);\n        }\n    };\n    /**\n     * Toggles the dropdown menu of a given navbar or tabbed navigation.\n     */\n    /**\n       * Toggles the dropdown menu of a given navbar or tabbed navigation.\n       */\n    NgbDropdown.prototype.toggle = /**\n       * Toggles the dropdown menu of a given navbar or tabbed navigation.\n       */\n    function () {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    NgbDropdown.prototype.closeFromClick = function ($event) {\n        if (this.autoClose && $event.button !== 2 && !this._isEventFromToggle($event)) {\n            if (this.autoClose === true) {\n                this.close();\n            }\n            else if (this.autoClose === 'inside' && this._isEventFromMenu($event)) {\n                this.close();\n            }\n            else if (this.autoClose === 'outside' && !this._isEventFromMenu($event)) {\n                this.close();\n            }\n        }\n    };\n    NgbDropdown.prototype.closeFromOutsideEsc = function () {\n        if (this.autoClose) {\n            this.close();\n        }\n    };\n    NgbDropdown.prototype.ngOnDestroy = function () { this._zoneSubscription.unsubscribe(); };\n    NgbDropdown.prototype._isEventFromToggle = function ($event) { return this._anchor.isEventFrom($event); };\n    NgbDropdown.prototype._isEventFromMenu = function ($event) { return this._menu ? this._menu.isEventFrom($event) : false; };\n    NgbDropdown.prototype._positionMenu = function () {\n        if (this.isOpen() && this._menu) {\n            this._menu.position(this._anchor.anchorEl, this.placement);\n        }\n    };\n    NgbDropdown.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbDropdown]',\n                    exportAs: 'ngbDropdown',\n                    host: {\n                        '[class.show]': 'isOpen()',\n                        '(keyup.esc)': 'closeFromOutsideEsc()',\n                        '(document:click)': 'closeFromClick($event)'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdown.ctorParameters = function () { return [\n        { type: NgbDropdownConfig, },\n        { type: NgZone, },\n    ]; };\n    NgbDropdown.propDecorators = {\n        \"_menu\": [{ type: ContentChild, args: [NgbDropdownMenu,] },],\n        \"_anchor\": [{ type: ContentChild, args: [NgbDropdownAnchor,] },],\n        \"autoClose\": [{ type: Input },],\n        \"_open\": [{ type: Input, args: ['open',] },],\n        \"placement\": [{ type: Input },],\n        \"openChange\": [{ type: Output },],\n    };\n    return NgbDropdown;\n}());\nexport { NgbDropdown };\n//# sourceMappingURL=dropdown.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.js\n// module id = 283\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { NgbModalBackdrop } from './modal-backdrop';\nimport { NgbModalWindow } from './modal-window';\nimport { NgbModalStack } from './modal-stack';\nimport { NgbModal } from './modal';\nexport { NgbModal } from './modal';\nexport { NgbModalRef, NgbActiveModal } from './modal-ref';\nexport { ModalDismissReasons } from './modal-dismiss-reasons';\nvar NgbModalModule = (function () {\n    function NgbModalModule() {\n    }\n    NgbModalModule.forRoot = function () { return { ngModule: NgbModalModule, providers: [NgbModal, NgbModalStack] }; };\n    NgbModalModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [NgbModalBackdrop, NgbModalWindow],\n                    entryComponents: [NgbModalBackdrop, NgbModalWindow],\n                    providers: [NgbModal]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbModalModule.ctorParameters = function () { return []; };\n    return NgbModalModule;\n}());\nexport { NgbModalModule };\n//# sourceMappingURL=modal.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal.module.js\n// module id = 284\n// module chunks = 1","import { Component, Input } from '@angular/core';\nvar NgbModalBackdrop = (function () {\n    function NgbModalBackdrop() {\n    }\n    NgbModalBackdrop.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-modal-backdrop',\n                    template: '',\n                    host: { '[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbModalBackdrop.ctorParameters = function () { return []; };\n    NgbModalBackdrop.propDecorators = {\n        \"backdropClass\": [{ type: Input },],\n    };\n    return NgbModalBackdrop;\n}());\nexport { NgbModalBackdrop };\n//# sourceMappingURL=modal-backdrop.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.js\n// module id = 285\n// module chunks = 1","import { DOCUMENT } from '@angular/common';\nimport { Component, Output, EventEmitter, Input, Inject, ElementRef, Renderer2 } from '@angular/core';\nimport { ModalDismissReasons } from './modal-dismiss-reasons';\nvar NgbModalWindow = (function () {\n    function NgbModalWindow(document, _elRef, _renderer) {\n        this._elRef = _elRef;\n        this._renderer = _renderer;\n        this.backdrop = true;\n        this.keyboard = true;\n        this.dismissEvent = new EventEmitter();\n        this._document = document;\n    }\n    NgbModalWindow.prototype.backdropClick = function ($event) {\n        if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n            this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n        }\n    };\n    NgbModalWindow.prototype.escKey = function ($event) {\n        if (this.keyboard && !$event.defaultPrevented) {\n            this.dismiss(ModalDismissReasons.ESC);\n        }\n    };\n    NgbModalWindow.prototype.dismiss = function (reason) { this.dismissEvent.emit(reason); };\n    NgbModalWindow.prototype.ngOnInit = function () {\n        this._elWithFocus = this._document.activeElement;\n        this._renderer.addClass(this._document.body, 'modal-open');\n    };\n    NgbModalWindow.prototype.ngAfterViewInit = function () {\n        if (!this._elRef.nativeElement.contains(document.activeElement)) {\n            this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\n        }\n    };\n    NgbModalWindow.prototype.ngOnDestroy = function () {\n        var body = this._document.body;\n        var elWithFocus = this._elWithFocus;\n        var elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        elementToFocus['focus'].apply(elementToFocus, []);\n        this._elWithFocus = null;\n        this._renderer.removeClass(body, 'modal-open');\n    };\n    NgbModalWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-modal-window',\n                    host: {\n                        '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n                        'role': 'dialog',\n                        'tabindex': '-1',\n                        '(keyup.esc)': 'escKey($event)',\n                        '(click)': 'backdropClick($event)'\n                    },\n                    template: \"\\n    <div [class]=\\\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\"><ng-content></ng-content></div>\\n    </div>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbModalWindow.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n        { type: ElementRef, },\n        { type: Renderer2, },\n    ]; };\n    NgbModalWindow.propDecorators = {\n        \"backdrop\": [{ type: Input },],\n        \"centered\": [{ type: Input },],\n        \"keyboard\": [{ type: Input },],\n        \"size\": [{ type: Input },],\n        \"windowClass\": [{ type: Input },],\n        \"dismissEvent\": [{ type: Output, args: ['dismiss',] },],\n    };\n    return NgbModalWindow;\n}());\nexport { NgbModalWindow };\n//# sourceMappingURL=modal-window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-window.js\n// module id = 286\n// module chunks = 1","export var ModalDismissReasons;\n(function (ModalDismissReasons) {\n    ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n//# sourceMappingURL=modal-dismiss-reasons.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.js\n// module id = 287\n// module chunks = 1","import { DOCUMENT } from '@angular/common';\nimport { ApplicationRef, Injectable, Injector, Inject, ReflectiveInjector, ComponentFactoryResolver, TemplateRef } from '@angular/core';\nimport { ContentRef } from '../util/popup';\nimport { isDefined, isString } from '../util/util';\nimport { NgbModalBackdrop } from './modal-backdrop';\nimport { NgbModalWindow } from './modal-window';\nimport { NgbActiveModal, NgbModalRef } from './modal-ref';\nvar NgbModalStack = (function () {\n    function NgbModalStack(_applicationRef, _injector, _componentFactoryResolver, document) {\n        this._applicationRef = _applicationRef;\n        this._injector = _injector;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._windowAttributes = ['backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\n        this._backdropAttributes = ['backdropClass'];\n        this._document = document;\n    }\n    NgbModalStack.prototype.open = function (moduleCFR, contentInjector, content, options) {\n        var containerEl = isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n        if (!containerEl) {\n            throw new Error(\"The specified modal container \\\"\" + (options.container || 'body') + \"\\\" was not found in the DOM.\");\n        }\n        var activeModal = new NgbActiveModal();\n        var contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\n        var backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : null;\n        var windowCmptRef = this._attachWindowComponent(containerEl, contentRef);\n        var ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        activeModal.close = function (result) { ngbModalRef.close(result); };\n        activeModal.dismiss = function (reason) { ngbModalRef.dismiss(reason); };\n        this._applyWindowOptions(windowCmptRef.instance, options);\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            this._applyBackdropOptions(backdropCmptRef.instance, options);\n        }\n        return ngbModalRef;\n    };\n    NgbModalStack.prototype._attachBackdrop = function (containerEl) {\n        var backdropFactory = this._componentFactoryResolver.resolveComponentFactory(NgbModalBackdrop);\n        var backdropCmptRef = backdropFactory.create(this._injector);\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    };\n    NgbModalStack.prototype._attachWindowComponent = function (containerEl, contentRef) {\n        var windowFactory = this._componentFactoryResolver.resolveComponentFactory(NgbModalWindow);\n        var windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n        this._applicationRef.attachView(windowCmptRef.hostView);\n        containerEl.appendChild(windowCmptRef.location.nativeElement);\n        return windowCmptRef;\n    };\n    NgbModalStack.prototype._applyWindowOptions = function (windowInstance, options) {\n        this._windowAttributes.forEach(function (optionName) {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        });\n    };\n    NgbModalStack.prototype._applyBackdropOptions = function (backdropInstance, options) {\n        this._backdropAttributes.forEach(function (optionName) {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        });\n    };\n    NgbModalStack.prototype._getContentRef = function (moduleCFR, contentInjector, content, context) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, context);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(moduleCFR, contentInjector, content, context);\n        }\n    };\n    NgbModalStack.prototype._createFromTemplateRef = function (content, context) {\n        var viewRef = content.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    };\n    NgbModalStack.prototype._createFromString = function (content) {\n        var component = this._document.createTextNode(\"\" + content);\n        return new ContentRef([[component]]);\n    };\n    NgbModalStack.prototype._createFromComponent = function (moduleCFR, contentInjector, content, context) {\n        var contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n        var modalContentInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgbActiveModal, useValue: context }], contentInjector);\n        var componentRef = contentCmptFactory.create(modalContentInjector);\n        this._applicationRef.attachView(componentRef.hostView);\n        return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n    };\n    NgbModalStack.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbModalStack.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n        { type: Injector, },\n        { type: ComponentFactoryResolver, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    return NgbModalStack;\n}());\nexport { NgbModalStack };\n//# sourceMappingURL=modal-stack.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-stack.js\n// module id = 288\n// module chunks = 1","/**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nvar /**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nNgbActiveModal = (function () {\n    function NgbActiveModal() {\n    }\n    /**\n     * Can be used to close a modal, passing an optional result.\n     */\n    /**\n       * Can be used to close a modal, passing an optional result.\n       */\n    NgbActiveModal.prototype.close = /**\n       * Can be used to close a modal, passing an optional result.\n       */\n    function (result) { };\n    /**\n     * Can be used to dismiss a modal, passing an optional reason.\n     */\n    /**\n       * Can be used to dismiss a modal, passing an optional reason.\n       */\n    NgbActiveModal.prototype.dismiss = /**\n       * Can be used to dismiss a modal, passing an optional reason.\n       */\n    function (reason) { };\n    return NgbActiveModal;\n}());\n/**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nexport { NgbActiveModal };\n/**\n * A reference to a newly opened modal.\n */\nvar /**\n * A reference to a newly opened modal.\n */\nNgbModalRef = (function () {\n    function NgbModalRef(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        var _this = this;\n        this._windowCmptRef = _windowCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        _windowCmptRef.instance.dismissEvent.subscribe(function (reason) { _this.dismiss(reason); });\n        this.result = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n        this.result.then(null, function () { });\n    }\n    Object.defineProperty(NgbModalRef.prototype, \"componentInstance\", {\n        /**\n         * The instance of component used as modal's content.\n         * Undefined when a TemplateRef is used as modal's content.\n         */\n        get: /**\n           * The instance of component used as modal's content.\n           * Undefined when a TemplateRef is used as modal's content.\n           */\n        function () {\n            if (this._contentRef.componentRef) {\n                return this._contentRef.componentRef.instance;\n            }\n        },\n        // only needed to keep TS1.8 compatibility\n        set: \n        // only needed to keep TS1.8 compatibility\n        function (instance) { },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Can be used to close a modal, passing an optional result.\n     */\n    /**\n       * Can be used to close a modal, passing an optional result.\n       */\n    NgbModalRef.prototype.close = /**\n       * Can be used to close a modal, passing an optional result.\n       */\n    function (result) {\n        if (this._windowCmptRef) {\n            this._resolve(result);\n            this._removeModalElements();\n        }\n    };\n    /**\n     * Can be used to dismiss a modal, passing an optional reason.\n     */\n    /**\n       * Can be used to dismiss a modal, passing an optional reason.\n       */\n    NgbModalRef.prototype.dismiss = /**\n       * Can be used to dismiss a modal, passing an optional reason.\n       */\n    function (reason) {\n        if (this._windowCmptRef) {\n            if (!this._beforeDismiss || this._beforeDismiss() !== false) {\n                this._reject(reason);\n                this._removeModalElements();\n            }\n        }\n    };\n    NgbModalRef.prototype._removeModalElements = function () {\n        var windowNativeEl = this._windowCmptRef.location.nativeElement;\n        windowNativeEl.parentNode.removeChild(windowNativeEl);\n        this._windowCmptRef.destroy();\n        if (this._backdropCmptRef) {\n            var backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n            backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n            this._backdropCmptRef.destroy();\n        }\n        if (this._contentRef && this._contentRef.viewRef) {\n            this._contentRef.viewRef.destroy();\n        }\n        this._windowCmptRef = null;\n        this._backdropCmptRef = null;\n        this._contentRef = null;\n    };\n    return NgbModalRef;\n}());\n/**\n * A reference to a newly opened modal.\n */\nexport { NgbModalRef };\n//# sourceMappingURL=modal-ref.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-ref.js\n// module id = 289\n// module chunks = 1","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\nimport { NgbModalStack } from './modal-stack';\n/**\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\n * the \"open\" method!\n */\nvar NgbModal = (function () {\n    function NgbModal(_moduleCFR, _injector, _modalStack) {\n        this._moduleCFR = _moduleCFR;\n        this._injector = _injector;\n        this._modalStack = _modalStack;\n    }\n    /**\n     * Opens a new modal window with the specified content and using supplied options. Content can be provided\n     * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n     * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n     * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n     */\n    /**\n       * Opens a new modal window with the specified content and using supplied options. Content can be provided\n       * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n       * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n       * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n       */\n    NgbModal.prototype.open = /**\n       * Opens a new modal window with the specified content and using supplied options. Content can be provided\n       * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n       * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n       * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n       */\n    function (content, options) {\n        if (options === void 0) { options = {}; }\n        return this._modalStack.open(this._moduleCFR, this._injector, content, options);\n    };\n    NgbModal.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbModal.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver, },\n        { type: Injector, },\n        { type: NgbModalStack, },\n    ]; };\n    return NgbModal;\n}());\nexport { NgbModal };\n//# sourceMappingURL=modal.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal.js\n// module id = 290\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbPagination } from './pagination';\nimport { NgbPaginationConfig } from './pagination-config';\nexport { NgbPagination } from './pagination';\nexport { NgbPaginationConfig } from './pagination-config';\nvar NgbPaginationModule = (function () {\n    function NgbPaginationModule() {\n    }\n    NgbPaginationModule.forRoot = function () { return { ngModule: NgbPaginationModule, providers: [NgbPaginationConfig] }; };\n    NgbPaginationModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbPagination], exports: [NgbPagination], imports: [CommonModule] },] },\n    ];\n    /** @nocollapse */\n    NgbPaginationModule.ctorParameters = function () { return []; };\n    return NgbPaginationModule;\n}());\nexport { NgbPaginationModule };\n//# sourceMappingURL=pagination.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/pagination/pagination.module.js\n// module id = 291\n// module chunks = 1","import { Component, EventEmitter, Input, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { getValueInRange, isNumber } from '../util/util';\nimport { NgbPaginationConfig } from './pagination-config';\n/**\n * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!\n */\nvar NgbPagination = (function () {\n    function NgbPagination(config) {\n        this.pageCount = 0;\n        this.pages = [];\n        /**\n           *  Current page. Page numbers start with 1\n           */\n        this.page = 1;\n        /**\n           *  An event fired when the page is changed.\n           *  Event's payload equals to the newly selected page.\n           *  Will fire only if collection size is set and all values are valid.\n           *  Page numbers start with 1\n           */\n        this.pageChange = new EventEmitter(true);\n        this.disabled = config.disabled;\n        this.boundaryLinks = config.boundaryLinks;\n        this.directionLinks = config.directionLinks;\n        this.ellipses = config.ellipses;\n        this.maxSize = config.maxSize;\n        this.pageSize = config.pageSize;\n        this.rotate = config.rotate;\n        this.size = config.size;\n    }\n    NgbPagination.prototype.hasPrevious = function () { return this.page > 1; };\n    NgbPagination.prototype.hasNext = function () { return this.page < this.pageCount; };\n    NgbPagination.prototype.selectPage = function (pageNumber) { this._updatePages(pageNumber); };\n    NgbPagination.prototype.ngOnChanges = function (changes) { this._updatePages(this.page); };\n    NgbPagination.prototype.isEllipsis = function (pageNumber) { return pageNumber === -1; };\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n    /**\n       * Appends ellipses and first/last page number to the displayed pages\n       */\n    NgbPagination.prototype._applyEllipses = /**\n       * Appends ellipses and first/last page number to the displayed pages\n       */\n    function (start, end) {\n        if (this.ellipses) {\n            if (start > 0) {\n                if (start > 1) {\n                    this.pages.unshift(-1);\n                }\n                this.pages.unshift(1);\n            }\n            if (end < this.pageCount) {\n                if (end < (this.pageCount - 1)) {\n                    this.pages.push(-1);\n                }\n                this.pages.push(this.pageCount);\n            }\n        }\n    };\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n    /**\n       * Rotates page numbers based on maxSize items visible.\n       * Currently selected page stays in the middle:\n       *\n       * Ex. for selected page = 6:\n       * [5,*6*,7] for maxSize = 3\n       * [4,5,*6*,7] for maxSize = 4\n       */\n    NgbPagination.prototype._applyRotation = /**\n       * Rotates page numbers based on maxSize items visible.\n       * Currently selected page stays in the middle:\n       *\n       * Ex. for selected page = 6:\n       * [5,*6*,7] for maxSize = 3\n       * [4,5,*6*,7] for maxSize = 4\n       */\n    function () {\n        var start = 0;\n        var end = this.pageCount;\n        var leftOffset = Math.floor(this.maxSize / 2);\n        var rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n        if (this.page <= leftOffset) {\n            // very beginning, no rotation -> [0..maxSize]\n            end = this.maxSize;\n        }\n        else if (this.pageCount - this.page < leftOffset) {\n            // very end, no rotation -> [len-maxSize..len]\n            start = this.pageCount - this.maxSize;\n        }\n        else {\n            // rotate\n            start = this.page - leftOffset - 1;\n            end = this.page + rightOffset;\n        }\n        return [start, end];\n    };\n    /**\n     * Paginates page numbers based on maxSize items per page\n     */\n    /**\n       * Paginates page numbers based on maxSize items per page\n       */\n    NgbPagination.prototype._applyPagination = /**\n       * Paginates page numbers based on maxSize items per page\n       */\n    function () {\n        var page = Math.ceil(this.page / this.maxSize) - 1;\n        var start = page * this.maxSize;\n        var end = start + this.maxSize;\n        return [start, end];\n    };\n    NgbPagination.prototype._setPageInRange = function (newPageNo) {\n        var prevPageNo = this.page;\n        this.page = getValueInRange(newPageNo, this.pageCount, 1);\n        if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n            this.pageChange.emit(this.page);\n        }\n    };\n    NgbPagination.prototype._updatePages = function (newPage) {\n        this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n        if (!isNumber(this.pageCount)) {\n            this.pageCount = 0;\n        }\n        // fill-in model needed to render pages\n        this.pages.length = 0;\n        for (var i = 1; i <= this.pageCount; i++) {\n            this.pages.push(i);\n        }\n        // set page within 1..max range\n        this._setPageInRange(newPage);\n        // apply maxSize if necessary\n        if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n            var start = 0;\n            var end = this.pageCount;\n            // either paginating or rotating page numbers\n            if (this.rotate) {\n                _a = this._applyRotation(), start = _a[0], end = _a[1];\n            }\n            else {\n                _b = this._applyPagination(), start = _b[0], end = _b[1];\n            }\n            this.pages = this.pages.slice(start, end);\n            // adding ellipses\n            this._applyEllipses(start, end);\n        }\n        var _a, _b;\n    };\n    NgbPagination.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-pagination',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'role': 'navigation' },\n                    template: \"\\n    <ul [class]=\\\"'pagination' + (size ? ' pagination-' + size : '')\\\">\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"!hasPrevious() || disabled\\\">\\n        <a aria-label=\\\"First\\\" class=\\\"page-link\\\" href (click)=\\\"!!selectPage(1)\\\" [attr.tabindex]=\\\"(hasPrevious() ? null : '-1')\\\">\\n          <span aria-hidden=\\\"true\\\">&laquo;&laquo;</span>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"!hasPrevious() || disabled\\\">\\n        <a aria-label=\\\"Previous\\\" class=\\\"page-link\\\" href (click)=\\\"!!selectPage(page-1)\\\" [attr.tabindex]=\\\"(hasPrevious() ? null : '-1')\\\">\\n          <span aria-hidden=\\\"true\\\">&laquo;</span>\\n        </a>\\n      </li>\\n      <li *ngFor=\\\"let pageNumber of pages\\\" class=\\\"page-item\\\" [class.active]=\\\"pageNumber === page\\\"\\n        [class.disabled]=\\\"isEllipsis(pageNumber) || disabled\\\">\\n        <a *ngIf=\\\"isEllipsis(pageNumber)\\\" class=\\\"page-link\\\">...</a>\\n        <a *ngIf=\\\"!isEllipsis(pageNumber)\\\" class=\\\"page-link\\\" href (click)=\\\"!!selectPage(pageNumber)\\\">\\n          {{pageNumber}}\\n          <span *ngIf=\\\"pageNumber === page\\\" class=\\\"sr-only\\\">(current)</span>\\n        </a>\\n      </li>\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"!hasNext() || disabled\\\">\\n        <a aria-label=\\\"Next\\\" class=\\\"page-link\\\" href (click)=\\\"!!selectPage(page+1)\\\" [attr.tabindex]=\\\"(hasNext() ? null : '-1')\\\">\\n          <span aria-hidden=\\\"true\\\">&raquo;</span>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"!hasNext() || disabled\\\">\\n        <a aria-label=\\\"Last\\\" class=\\\"page-link\\\" href (click)=\\\"!!selectPage(pageCount)\\\" [attr.tabindex]=\\\"(hasNext() ? null : '-1')\\\">\\n          <span aria-hidden=\\\"true\\\">&raquo;&raquo;</span>\\n        </a>\\n      </li>\\n    </ul>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbPagination.ctorParameters = function () { return [\n        { type: NgbPaginationConfig, },\n    ]; };\n    NgbPagination.propDecorators = {\n        \"disabled\": [{ type: Input },],\n        \"boundaryLinks\": [{ type: Input },],\n        \"directionLinks\": [{ type: Input },],\n        \"ellipses\": [{ type: Input },],\n        \"rotate\": [{ type: Input },],\n        \"collectionSize\": [{ type: Input },],\n        \"maxSize\": [{ type: Input },],\n        \"page\": [{ type: Input },],\n        \"pageSize\": [{ type: Input },],\n        \"pageChange\": [{ type: Output },],\n        \"size\": [{ type: Input },],\n    };\n    return NgbPagination;\n}());\nexport { NgbPagination };\n//# sourceMappingURL=pagination.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/pagination/pagination.js\n// module id = 292\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { NgbPopover, NgbPopoverWindow } from './popover';\nimport { NgbPopoverConfig } from './popover-config';\nexport { NgbPopover } from './popover';\nexport { NgbPopoverConfig } from './popover-config';\nvar NgbPopoverModule = (function () {\n    function NgbPopoverModule() {\n    }\n    NgbPopoverModule.forRoot = function () { return { ngModule: NgbPopoverModule, providers: [NgbPopoverConfig] }; };\n    NgbPopoverModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbPopover, NgbPopoverWindow], exports: [NgbPopover], entryComponents: [NgbPopoverWindow] },] },\n    ];\n    /** @nocollapse */\n    NgbPopoverModule.ctorParameters = function () { return []; };\n    return NgbPopoverModule;\n}());\nexport { NgbPopoverModule };\n//# sourceMappingURL=popover.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/popover/popover.module.js\n// module id = 293\n// module chunks = 1","import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, Injector, Renderer2, ElementRef, ViewContainerRef, ComponentFactoryResolver, NgZone } from '@angular/core';\nimport { listenToTriggers } from '../util/triggers';\nimport { positionElements } from '../util/positioning';\nimport { PopupService } from '../util/popup';\nimport { NgbPopoverConfig } from './popover-config';\nvar nextId = 0;\nvar NgbPopoverWindow = (function () {\n    function NgbPopoverWindow(_element, _renderer) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this.placement = 'top';\n    }\n    NgbPopoverWindow.prototype.applyPlacement = function (_placement) {\n        // remove the current placement classes\n        this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n        this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n        // set the new placement classes\n        this.placement = _placement;\n        // apply the new placement\n        this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n        this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n    };\n    NgbPopoverWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-popover-window',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        '[class]': '\"popover bs-popover-\" + placement.split(\"-\")[0]+\" bs-popover-\" + placement',\n                        'role': 'tooltip',\n                        '[id]': 'id'\n                    },\n                    template: \"\\n    <div class=\\\"arrow\\\"></div>\\n    <h3 class=\\\"popover-header\\\">{{title}}</h3><div class=\\\"popover-body\\\"><ng-content></ng-content></div>\",\n                    styles: [\"\\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\\n      left: 50%;\\n      margin-left: -5px;\\n    }\\n\\n    :host.bs-popover-top-left .arrow, :host.bs-popover-bottom-left .arrow {\\n      left: 2em;\\n    }\\n\\n    :host.bs-popover-top-right .arrow, :host.bs-popover-bottom-right .arrow {\\n      left: auto;\\n      right: 2em;\\n    }\\n\\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\\n      top: 50%;\\n      margin-top: -5px;\\n    }\\n    \\n    :host.bs-popover-left-top .arrow, :host.bs-popover-right-top .arrow {\\n      top: 0.7em;\\n    }\\n\\n    :host.bs-popover-left-bottom .arrow, :host.bs-popover-right-bottom .arrow {\\n      top: auto;\\n      bottom: 0.7em;\\n    }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbPopoverWindow.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n    ]; };\n    NgbPopoverWindow.propDecorators = {\n        \"placement\": [{ type: Input },],\n        \"title\": [{ type: Input },],\n        \"id\": [{ type: Input },],\n    };\n    return NgbPopoverWindow;\n}());\nexport { NgbPopoverWindow };\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\nvar NgbPopover = (function () {\n    function NgbPopover(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, ngZone) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        /**\n           * Emits an event when the popover is shown\n           */\n        this.shown = new EventEmitter();\n        /**\n           * Emits an event when the popover is hidden\n           */\n        this.hidden = new EventEmitter();\n        this._ngbPopoverWindowId = \"ngb-popover-\" + nextId++;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disablePopover = config.disablePopover;\n        this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n        this._zoneSubscription = ngZone.onStable.subscribe(function () {\n            if (_this._windowRef) {\n                _this._windowRef.instance.applyPlacement(positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body'));\n            }\n        });\n    }\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of the popover.\n     * The context is an optional value to be injected into the popover template when it is created.\n     */\n    /**\n       * Opens an element’s popover. This is considered a “manual” triggering of the popover.\n       * The context is an optional value to be injected into the popover template when it is created.\n       */\n    NgbPopover.prototype.open = /**\n       * Opens an element’s popover. This is considered a “manual” triggering of the popover.\n       * The context is an optional value to be injected into the popover template when it is created.\n       */\n    function (context) {\n        if (!this._windowRef && !this.disablePopover) {\n            this._windowRef = this._popupService.open(this.ngbPopover, context);\n            this._windowRef.instance.title = this.popoverTitle;\n            this._windowRef.instance.id = this._ngbPopoverWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // apply styling to set basic css-classes on target element, before going for positioning\n            this._windowRef.changeDetectorRef.detectChanges();\n            this._windowRef.changeDetectorRef.markForCheck();\n            // position popover along the element\n            this._windowRef.instance.applyPlacement(positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body'));\n            this.shown.emit();\n        }\n    };\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of the popover.\n     */\n    /**\n       * Closes an element’s popover. This is considered a “manual” triggering of the popover.\n       */\n    NgbPopover.prototype.close = /**\n       * Closes an element’s popover. This is considered a “manual” triggering of the popover.\n       */\n    function () {\n        if (this._windowRef) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n        }\n    };\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of the popover.\n     */\n    /**\n       * Toggles an element’s popover. This is considered a “manual” triggering of the popover.\n       */\n    NgbPopover.prototype.toggle = /**\n       * Toggles an element’s popover. This is considered a “manual” triggering of the popover.\n       */\n    function () {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Returns whether or not the popover is currently being shown\n     */\n    /**\n       * Returns whether or not the popover is currently being shown\n       */\n    NgbPopover.prototype.isOpen = /**\n       * Returns whether or not the popover is currently being shown\n       */\n    function () { return this._windowRef != null; };\n    NgbPopover.prototype.ngOnInit = function () {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this), this.toggle.bind(this));\n    };\n    NgbPopover.prototype.ngOnDestroy = function () {\n        this.close();\n        this._unregisterListenersFn();\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbPopover.decorators = [\n        { type: Directive, args: [{ selector: '[ngbPopover]', exportAs: 'ngbPopover' },] },\n    ];\n    /** @nocollapse */\n    NgbPopover.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: Injector, },\n        { type: ComponentFactoryResolver, },\n        { type: ViewContainerRef, },\n        { type: NgbPopoverConfig, },\n        { type: NgZone, },\n    ]; };\n    NgbPopover.propDecorators = {\n        \"ngbPopover\": [{ type: Input },],\n        \"popoverTitle\": [{ type: Input },],\n        \"placement\": [{ type: Input },],\n        \"triggers\": [{ type: Input },],\n        \"container\": [{ type: Input },],\n        \"disablePopover\": [{ type: Input },],\n        \"shown\": [{ type: Output },],\n        \"hidden\": [{ type: Output },],\n    };\n    return NgbPopover;\n}());\nexport { NgbPopover };\n//# sourceMappingURL=popover.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/popover/popover.js\n// module id = 294\n// module chunks = 1","var Trigger = (function () {\n    function Trigger(open, close) {\n        this.open = open;\n        this.close = close;\n        if (!close) {\n            this.close = open;\n        }\n    }\n    Trigger.prototype.isManual = function () { return this.open === 'manual' || this.close === 'manual'; };\n    return Trigger;\n}());\nexport { Trigger };\nvar DEFAULT_ALIASES = {\n    'hover': ['mouseenter', 'mouseleave']\n};\nexport function parseTriggers(triggers, aliases) {\n    if (aliases === void 0) { aliases = DEFAULT_ALIASES; }\n    var trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    var parsedTriggers = trimmedTriggers.split(/\\s+/).map(function (trigger) { return trigger.split(':'); }).map(function (triggerPair) {\n        var alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    });\n    var manualTriggers = parsedTriggers.filter(function (triggerPair) { return triggerPair.isManual(); });\n    if (manualTriggers.length > 1) {\n        throw 'Triggers parse error: only one manual trigger is allowed';\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n    }\n    return parsedTriggers;\n}\nvar noopFn = function () { };\nvar ɵ0 = noopFn;\nexport function listenToTriggers(renderer, nativeElement, triggers, openFn, closeFn, toggleFn) {\n    var parsedTriggers = parseTriggers(triggers);\n    var listeners = [];\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return noopFn;\n    }\n    parsedTriggers.forEach(function (trigger) {\n        if (trigger.open === trigger.close) {\n            listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n        }\n        else {\n            listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n        }\n    });\n    return function () { listeners.forEach(function (unsubscribeFn) { return unsubscribeFn(); }); };\n}\nexport { ɵ0 };\n//# sourceMappingURL=triggers.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/util/triggers.js\n// module id = 295\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbProgressbar } from './progressbar';\nimport { NgbProgressbarConfig } from './progressbar-config';\nexport { NgbProgressbar } from './progressbar';\nexport { NgbProgressbarConfig } from './progressbar-config';\nvar NgbProgressbarModule = (function () {\n    function NgbProgressbarModule() {\n    }\n    NgbProgressbarModule.forRoot = function () { return { ngModule: NgbProgressbarModule, providers: [NgbProgressbarConfig] }; };\n    NgbProgressbarModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule] },] },\n    ];\n    /** @nocollapse */\n    NgbProgressbarModule.ctorParameters = function () { return []; };\n    return NgbProgressbarModule;\n}());\nexport { NgbProgressbarModule };\n//# sourceMappingURL=progressbar.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.js\n// module id = 296\n// module chunks = 1","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { getValueInRange } from '../util/util';\nimport { NgbProgressbarConfig } from './progressbar-config';\n/**\n * Directive that can be used to provide feedback on the progress of a workflow or an action.\n */\nvar NgbProgressbar = (function () {\n    function NgbProgressbar(config) {\n        /**\n           * Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value.\n           */\n        this.value = 0;\n        this.max = config.max;\n        this.animated = config.animated;\n        this.striped = config.striped;\n        this.type = config.type;\n        this.showValue = config.showValue;\n        this.height = config.height;\n    }\n    NgbProgressbar.prototype.getValue = function () { return getValueInRange(this.value, this.max); };\n    NgbProgressbar.prototype.getPercentValue = function () { return 100 * this.getValue() / this.max; };\n    NgbProgressbar.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-progressbar',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: \"\\n    <div class=\\\"progress\\\" [style.height]=\\\"height\\\">\\n      <div class=\\\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\\n    ' progress-bar-striped' : ''}}\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"getPercentValue()\\\"\\n    [attr.aria-valuenow]=\\\"getValue()\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"max\\\">\\n        <span *ngIf=\\\"showValue\\\">{{getPercentValue()}}%</span><ng-content></ng-content>\\n      </div>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbProgressbar.ctorParameters = function () { return [\n        { type: NgbProgressbarConfig, },\n    ]; };\n    NgbProgressbar.propDecorators = {\n        \"max\": [{ type: Input },],\n        \"animated\": [{ type: Input },],\n        \"striped\": [{ type: Input },],\n        \"showValue\": [{ type: Input },],\n        \"type\": [{ type: Input },],\n        \"value\": [{ type: Input },],\n        \"height\": [{ type: Input },],\n    };\n    return NgbProgressbar;\n}());\nexport { NgbProgressbar };\n//# sourceMappingURL=progressbar.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.js\n// module id = 297\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbRatingConfig } from './rating-config';\nimport { NgbRating } from './rating';\nexport { NgbRating } from './rating';\nexport { NgbRatingConfig } from './rating-config';\nvar NgbRatingModule = (function () {\n    function NgbRatingModule() {\n    }\n    NgbRatingModule.forRoot = function () { return { ngModule: NgbRatingModule, providers: [NgbRatingConfig] }; };\n    NgbRatingModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule] },] },\n    ];\n    /** @nocollapse */\n    NgbRatingModule.ctorParameters = function () { return []; };\n    return NgbRatingModule;\n}());\nexport { NgbRatingModule };\n//# sourceMappingURL=rating.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/rating/rating.module.js\n// module id = 298\n// module chunks = 1","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter, TemplateRef, ContentChild, forwardRef, ChangeDetectorRef } from '@angular/core';\nimport { NgbRatingConfig } from './rating-config';\nimport { toString, getValueInRange } from '../util/util';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar Key;\n(function (Key) {\n    Key[Key[\"End\"] = 35] = \"End\";\n    Key[Key[\"Home\"] = 36] = \"Home\";\n    Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\nvar NGB_RATING_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NgbRating; }),\n    multi: true\n};\n/**\n * Rating directive that will take care of visualising a star rating bar.\n */\nvar NgbRating = (function () {\n    function NgbRating(config, _changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.contexts = [];\n        this.disabled = false;\n        /**\n           * An event fired when a user is hovering over a given rating.\n           * Event's payload equals to the rating being hovered over.\n           */\n        this.hover = new EventEmitter();\n        /**\n           * An event fired when a user stops hovering over a given rating.\n           * Event's payload equals to the rating of the last item being hovered over.\n           */\n        this.leave = new EventEmitter();\n        /**\n           * An event fired when a user selects a new rating.\n           * Event's payload equals to the newly selected rating.\n           */\n        this.rateChange = new EventEmitter(true);\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this.max = config.max;\n        this.readonly = config.readonly;\n    }\n    NgbRating.prototype.ariaValueText = function () { return this.nextRate + \" out of \" + this.max; };\n    NgbRating.prototype.enter = function (value) {\n        if (!this.readonly && !this.disabled) {\n            this._updateState(value);\n        }\n        this.hover.emit(value);\n    };\n    NgbRating.prototype.handleBlur = function () { this.onTouched(); };\n    NgbRating.prototype.handleClick = function (value) { this.update(this.resettable && this.rate === value ? 0 : value); };\n    NgbRating.prototype.handleKeyDown = function (event) {\n        if (Key[toString(event.which)]) {\n            event.preventDefault();\n            switch (event.which) {\n                case Key.ArrowDown:\n                case Key.ArrowLeft:\n                    this.update(this.rate - 1);\n                    break;\n                case Key.ArrowUp:\n                case Key.ArrowRight:\n                    this.update(this.rate + 1);\n                    break;\n                case Key.Home:\n                    this.update(0);\n                    break;\n                case Key.End:\n                    this.update(this.max);\n                    break;\n            }\n        }\n    };\n    NgbRating.prototype.ngOnChanges = function (changes) {\n        if (changes['rate']) {\n            this.update(this.rate);\n        }\n    };\n    NgbRating.prototype.ngOnInit = function () {\n        this.contexts = Array.from({ length: this.max }, function (v, k) { return ({ fill: 0, index: k }); });\n        this._updateState(this.rate);\n    };\n    NgbRating.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbRating.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbRating.prototype.reset = function () {\n        this.leave.emit(this.nextRate);\n        this._updateState(this.rate);\n    };\n    NgbRating.prototype.setDisabledState = function (isDisabled) { this.disabled = isDisabled; };\n    NgbRating.prototype.update = function (value, internalChange) {\n        if (internalChange === void 0) { internalChange = true; }\n        var newRate = getValueInRange(value, this.max, 0);\n        if (!this.readonly && !this.disabled && this.rate !== newRate) {\n            this.rate = newRate;\n            this.rateChange.emit(this.rate);\n        }\n        if (internalChange) {\n            this.onChange(this.rate);\n            this.onTouched();\n        }\n        this._updateState(this.rate);\n    };\n    NgbRating.prototype.writeValue = function (value) {\n        this.update(value, false);\n        this._changeDetectorRef.markForCheck();\n    };\n    NgbRating.prototype._getFillValue = function (index) {\n        var diff = this.nextRate - index;\n        if (diff >= 1) {\n            return 100;\n        }\n        if (diff < 1 && diff > 0) {\n            return Number.parseInt((diff * 100).toFixed(2));\n        }\n        return 0;\n    };\n    NgbRating.prototype._updateState = function (nextValue) {\n        var _this = this;\n        this.nextRate = nextValue;\n        this.contexts.forEach(function (context, index) { return context.fill = _this._getFillValue(index); });\n    };\n    NgbRating.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-rating',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'class': 'd-inline-flex',\n                        'tabindex': '0',\n                        'role': 'slider',\n                        'aria-valuemin': '0',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuenow]': 'nextRate',\n                        '[attr.aria-valuetext]': 'ariaValueText()',\n                        '[attr.aria-disabled]': 'readonly ? true : null',\n                        '(blur)': 'handleBlur()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '(mouseleave)': 'reset()'\n                    },\n                    template: \"\\n    <ng-template #t let-fill=\\\"fill\\\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"contexts\\\" let-index=\\\"index\\\">\\n      <span class=\\\"sr-only\\\">({{ index < nextRate ? '*' : ' ' }})</span>\\n      <span (mouseenter)=\\\"enter(index + 1)\\\" (click)=\\\"handleClick(index + 1)\\\" [style.cursor]=\\\"readonly || disabled ? 'default' : 'pointer'\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"starTemplate || t\\\" [ngTemplateOutletContext]=\\\"contexts[index]\\\"></ng-template>\\n      </span>\\n    </ng-template>\\n  \",\n                    providers: [NGB_RATING_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbRating.ctorParameters = function () { return [\n        { type: NgbRatingConfig, },\n        { type: ChangeDetectorRef, },\n    ]; };\n    NgbRating.propDecorators = {\n        \"max\": [{ type: Input },],\n        \"rate\": [{ type: Input },],\n        \"readonly\": [{ type: Input },],\n        \"resettable\": [{ type: Input },],\n        \"starTemplate\": [{ type: Input }, { type: ContentChild, args: [TemplateRef,] },],\n        \"hover\": [{ type: Output },],\n        \"leave\": [{ type: Output },],\n        \"rateChange\": [{ type: Output },],\n    };\n    return NgbRating;\n}());\nexport { NgbRating };\n//# sourceMappingURL=rating.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/rating/rating.js\n// module id = 299\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbTabset, NgbTab, NgbTabContent, NgbTabTitle } from './tabset';\nimport { NgbTabsetConfig } from './tabset-config';\nexport { NgbTabset, NgbTab, NgbTabContent, NgbTabTitle } from './tabset';\nexport { NgbTabsetConfig } from './tabset-config';\nvar NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\nvar NgbTabsetModule = (function () {\n    function NgbTabsetModule() {\n    }\n    NgbTabsetModule.forRoot = function () { return { ngModule: NgbTabsetModule, providers: [NgbTabsetConfig] }; };\n    NgbTabsetModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule] },] },\n    ];\n    /** @nocollapse */\n    NgbTabsetModule.ctorParameters = function () { return []; };\n    return NgbTabsetModule;\n}());\nexport { NgbTabsetModule };\n//# sourceMappingURL=tabset.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/tabset/tabset.module.js\n// module id = 300\n// module chunks = 1","import { Component, Input, ContentChildren, QueryList, Directive, TemplateRef, Output, EventEmitter } from '@angular/core';\nimport { NgbTabsetConfig } from './tabset-config';\nvar nextId = 0;\n/**\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\n */\nvar NgbTabTitle = (function () {\n    function NgbTabTitle(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbTabTitle.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbTabTitle]' },] },\n    ];\n    /** @nocollapse */\n    NgbTabTitle.ctorParameters = function () { return [\n        { type: TemplateRef, },\n    ]; };\n    return NgbTabTitle;\n}());\nexport { NgbTabTitle };\n/**\n * This directive must be used to wrap content to be displayed in a tab.\n */\nvar NgbTabContent = (function () {\n    function NgbTabContent(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbTabContent.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbTabContent]' },] },\n    ];\n    /** @nocollapse */\n    NgbTabContent.ctorParameters = function () { return [\n        { type: TemplateRef, },\n    ]; };\n    return NgbTabContent;\n}());\nexport { NgbTabContent };\n/**\n * A directive representing an individual tab.\n */\nvar NgbTab = (function () {\n    function NgbTab() {\n        /**\n           * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\n           */\n        this.id = \"ngb-tab-\" + nextId++;\n        /**\n           * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\n           */\n        this.disabled = false;\n    }\n    NgbTab.prototype.ngAfterContentChecked = function () {\n        // We are using @ContentChildren instead of @ContantChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    };\n    NgbTab.decorators = [\n        { type: Directive, args: [{ selector: 'ngb-tab' },] },\n    ];\n    /** @nocollapse */\n    NgbTab.ctorParameters = function () { return []; };\n    NgbTab.propDecorators = {\n        \"id\": [{ type: Input },],\n        \"title\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"titleTpls\": [{ type: ContentChildren, args: [NgbTabTitle, { descendants: false },] },],\n        \"contentTpls\": [{ type: ContentChildren, args: [NgbTabContent, { descendants: false },] },],\n    };\n    return NgbTab;\n}());\nexport { NgbTab };\n/**\n * A component that makes it easy to create tabbed interface.\n */\nvar NgbTabset = (function () {\n    function NgbTabset(config) {\n        /**\n           * Whether the closed tabs should be hidden without destroying them\n           */\n        this.destroyOnHide = true;\n        /**\n           * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\n           */\n        this.tabChange = new EventEmitter();\n        this.type = config.type;\n        this.justify = config.justify;\n        this.orientation = config.orientation;\n    }\n    Object.defineProperty(NgbTabset.prototype, \"justify\", {\n        set: /**\n           * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or\n           * 'justified'\n           * The default value is 'start'.\n           */\n        function (className) {\n            if (className === 'fill' || className === 'justified') {\n                this.justifyClass = \"nav-\" + className;\n            }\n            else {\n                this.justifyClass = \"justify-content-\" + className;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Selects the tab with the given id and shows its associated pane.\n     * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n     */\n    /**\n       * Selects the tab with the given id and shows its associated pane.\n       * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n       */\n    NgbTabset.prototype.select = /**\n       * Selects the tab with the given id and shows its associated pane.\n       * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n       */\n    function (tabId) {\n        var selectedTab = this._getTabById(tabId);\n        if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n            var defaultPrevented_1 = false;\n            this.tabChange.emit({ activeId: this.activeId, nextId: selectedTab.id, preventDefault: function () { defaultPrevented_1 = true; } });\n            if (!defaultPrevented_1) {\n                this.activeId = selectedTab.id;\n            }\n        }\n    };\n    NgbTabset.prototype.ngAfterContentChecked = function () {\n        // auto-correct activeId that might have been set incorrectly as input\n        var activeTab = this._getTabById(this.activeId);\n        this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n    };\n    NgbTabset.prototype._getTabById = function (id) {\n        var tabsWithId = this.tabs.filter(function (tab) { return tab.id === id; });\n        return tabsWithId.length ? tabsWithId[0] : null;\n    };\n    NgbTabset.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-tabset',\n                    exportAs: 'ngbTabset',\n                    template: \"\\n    <ul [class]=\\\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\\\" role=\\\"tablist\\\">\\n      <li class=\\\"nav-item\\\" *ngFor=\\\"let tab of tabs\\\">\\n        <a [id]=\\\"tab.id\\\" class=\\\"nav-link\\\" [class.active]=\\\"tab.id === activeId\\\" [class.disabled]=\\\"tab.disabled\\\"\\n          href (click)=\\\"!!select(tab.id)\\\" role=\\\"tab\\\" [attr.tabindex]=\\\"(tab.disabled ? '-1': undefined)\\\"\\n          [attr.aria-controls]=\\\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\\\"\\n          [attr.aria-expanded]=\\\"tab.id === activeId\\\" [attr.aria-disabled]=\\\"tab.disabled\\\">\\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\\\"tab.titleTpl?.templateRef\\\"></ng-template>\\n        </a>\\n      </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n      <ng-template ngFor let-tab [ngForOf]=\\\"tabs\\\">\\n        <div\\n          class=\\\"tab-pane {{tab.id === activeId ? 'active' : null}}\\\"\\n          *ngIf=\\\"!destroyOnHide || tab.id === activeId\\\"\\n          role=\\\"tabpanel\\\"\\n          [attr.aria-labelledby]=\\\"tab.id\\\" id=\\\"{{tab.id}}-panel\\\"\\n          [attr.aria-expanded]=\\\"tab.id === activeId\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tab.contentTpl?.templateRef\\\"></ng-template>\\n        </div>\\n      </ng-template>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTabset.ctorParameters = function () { return [\n        { type: NgbTabsetConfig, },\n    ]; };\n    NgbTabset.propDecorators = {\n        \"tabs\": [{ type: ContentChildren, args: [NgbTab,] },],\n        \"activeId\": [{ type: Input },],\n        \"destroyOnHide\": [{ type: Input },],\n        \"justify\": [{ type: Input },],\n        \"orientation\": [{ type: Input },],\n        \"type\": [{ type: Input },],\n        \"tabChange\": [{ type: Output },],\n    };\n    return NgbTabset;\n}());\nexport { NgbTabset };\n//# sourceMappingURL=tabset.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/tabset/tabset.js\n// module id = 301\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbTimepicker } from './timepicker';\nimport { NgbTimepickerConfig } from './timepicker-config';\nexport { NgbTimepicker } from './timepicker';\nexport { NgbTimepickerConfig } from './timepicker-config';\nvar NgbTimepickerModule = (function () {\n    function NgbTimepickerModule() {\n    }\n    NgbTimepickerModule.forRoot = function () { return { ngModule: NgbTimepickerModule, providers: [NgbTimepickerConfig] }; };\n    NgbTimepickerModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule] },] },\n    ];\n    /** @nocollapse */\n    NgbTimepickerModule.ctorParameters = function () { return []; };\n    return NgbTimepickerModule;\n}());\nexport { NgbTimepickerModule };\n//# sourceMappingURL=timepicker.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.js\n// module id = 302\n// module chunks = 1","import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { isNumber, padNumber, toInteger } from '../util/util';\nimport { NgbTime } from './ngb-time';\nimport { NgbTimepickerConfig } from './timepicker-config';\nvar NGB_TIMEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NgbTimepicker; }),\n    multi: true\n};\n/**\n * A lightweight & configurable timepicker directive.\n */\nvar NgbTimepicker = (function () {\n    function NgbTimepicker(config) {\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this.meridian = config.meridian;\n        this.spinners = config.spinners;\n        this.seconds = config.seconds;\n        this.hourStep = config.hourStep;\n        this.minuteStep = config.minuteStep;\n        this.secondStep = config.secondStep;\n        this.disabled = config.disabled;\n        this.readonlyInputs = config.readonlyInputs;\n        this.size = config.size;\n    }\n    NgbTimepicker.prototype.writeValue = function (value) {\n        this.model = value ? new NgbTime(value.hour, value.minute, value.second) : new NgbTime();\n        if (!this.seconds && (!value || !isNumber(value.second))) {\n            this.model.second = 0;\n        }\n    };\n    NgbTimepicker.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbTimepicker.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbTimepicker.prototype.setDisabledState = function (isDisabled) { this.disabled = isDisabled; };\n    NgbTimepicker.prototype.changeHour = function (step) {\n        this.model.changeHour(step);\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.changeMinute = function (step) {\n        this.model.changeMinute(step);\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.changeSecond = function (step) {\n        this.model.changeSecond(step);\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.updateHour = function (newVal) {\n        var isPM = this.model.hour >= 12;\n        var enteredHour = toInteger(newVal);\n        if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n            this.model.updateHour(enteredHour + 12);\n        }\n        else {\n            this.model.updateHour(enteredHour);\n        }\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.updateMinute = function (newVal) {\n        this.model.updateMinute(toInteger(newVal));\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.updateSecond = function (newVal) {\n        this.model.updateSecond(toInteger(newVal));\n        this.propagateModelChange();\n    };\n    NgbTimepicker.prototype.toggleMeridian = function () {\n        if (this.meridian) {\n            this.changeHour(12);\n        }\n    };\n    NgbTimepicker.prototype.formatHour = function (value) {\n        if (isNumber(value)) {\n            if (this.meridian) {\n                return padNumber(value % 12 === 0 ? 12 : value % 12);\n            }\n            else {\n                return padNumber(value % 24);\n            }\n        }\n        else {\n            return padNumber(NaN);\n        }\n    };\n    NgbTimepicker.prototype.formatMinSec = function (value) { return padNumber(value); };\n    NgbTimepicker.prototype.setFormControlSize = function () { return { 'form-control-sm': this.size === 'small', 'form-control-lg': this.size === 'large' }; };\n    NgbTimepicker.prototype.setButtonSize = function () { return { 'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large' }; };\n    NgbTimepicker.prototype.ngOnChanges = function (changes) {\n        if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n            this.model.second = 0;\n            this.propagateModelChange(false);\n        }\n    };\n    NgbTimepicker.prototype.propagateModelChange = function (touched) {\n        if (touched === void 0) { touched = true; }\n        if (touched) {\n            this.onTouched();\n        }\n        if (this.model.isValid(this.seconds)) {\n            this.onChange({ hour: this.model.hour, minute: this.model.minute, second: this.model.second });\n        }\n        else {\n            this.onChange(null);\n        }\n    };\n    NgbTimepicker.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-timepicker',\n                    styles: [\"\\n    .ngb-tp {\\n      display: -ms-flexbox;\\n      display: flex;\\n      -ms-flex-align: center;\\n      align-items: center;\\n    }\\n\\n    .ngb-tp-hour, .ngb-tp-minute, .ngb-tp-second, .ngb-tp-meridian {\\n      display: -ms-flexbox;\\n      display: flex;\\n      -ms-flex-direction: column;\\n      flex-direction: column;\\n      -ms-flex-align: center;\\n      align-items: center;\\n      -ms-flex-pack: distribute;\\n      justify-content: space-around;\\n    }\\n\\n    .ngb-tp-spacer {\\n      width: 1em;\\n      text-align: center;\\n    }\\n\\n    .chevron::before {\\n      border-style: solid;\\n      border-width: 0.29em 0.29em 0 0;\\n      content: '';\\n      display: inline-block;\\n      height: 0.69em;\\n      left: 0.05em;\\n      position: relative;\\n      top: 0.15em;\\n      transform: rotate(-45deg);\\n      -webkit-transform: rotate(-45deg);\\n      -ms-transform: rotate(-45deg);\\n      vertical-align: middle;\\n      width: 0.71em;\\n    }\\n\\n    .chevron.bottom:before {\\n      top: -.3em;\\n      -webkit-transform: rotate(135deg);\\n      -ms-transform: rotate(135deg);\\n      transform: rotate(135deg);\\n    }\\n\\n    input {\\n      text-align: center;\\n      display: inline-block;\\n      width: auto;\\n    }\\n  \"],\n                    template: \"\\n    <fieldset [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n      <div class=\\\"ngb-tp\\\">\\n        <div class=\\\"ngb-tp-hour\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeHour(hourStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron\\\"></span>\\n            <span class=\\\"sr-only\\\">Increment hours</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"setFormControlSize()\\\" maxlength=\\\"2\\\" size=\\\"2\\\" placeholder=\\\"HH\\\"\\n            [value]=\\\"formatHour(model?.hour)\\\" (change)=\\\"updateHour($event.target.value)\\\"\\n            [readonly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Hours\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeHour(-hourStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\">Decrement hours</span>\\n          </button>\\n        </div>\\n        <div class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div class=\\\"ngb-tp-minute\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeMinute(minuteStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron\\\"></span>\\n            <span class=\\\"sr-only\\\">Increment minutes</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"setFormControlSize()\\\" maxlength=\\\"2\\\" size=\\\"2\\\" placeholder=\\\"MM\\\"\\n            [value]=\\\"formatMinSec(model?.minute)\\\" (change)=\\\"updateMinute($event.target.value)\\\"\\n            [readonly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Minutes\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeMinute(-minuteStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\">Decrement minutes</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-second\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeSecond(secondStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron\\\"></span>\\n            <span class=\\\"sr-only\\\">Increment seconds</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"setFormControlSize()\\\" maxlength=\\\"2\\\" size=\\\"2\\\" placeholder=\\\"SS\\\"\\n            [value]=\\\"formatMinSec(model?.second)\\\" (change)=\\\"updateSecond($event.target.value)\\\"\\n            [readonly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Seconds\\\">\\n          <button *ngIf=\\\"spinners\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\" [ngClass]=\\\"setButtonSize()\\\" (click)=\\\"changeSecond(-secondStep)\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\">Decrement seconds</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-spacer\\\"></div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-meridian\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" [ngClass]=\\\"setButtonSize()\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\"\\n            (click)=\\\"toggleMeridian()\\\">{{model?.hour >= 12 ? 'PM' : 'AM'}}</button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  \",\n                    providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTimepicker.ctorParameters = function () { return [\n        { type: NgbTimepickerConfig, },\n    ]; };\n    NgbTimepicker.propDecorators = {\n        \"meridian\": [{ type: Input },],\n        \"spinners\": [{ type: Input },],\n        \"seconds\": [{ type: Input },],\n        \"hourStep\": [{ type: Input },],\n        \"minuteStep\": [{ type: Input },],\n        \"secondStep\": [{ type: Input },],\n        \"readonlyInputs\": [{ type: Input },],\n        \"size\": [{ type: Input },],\n    };\n    return NgbTimepicker;\n}());\nexport { NgbTimepicker };\n//# sourceMappingURL=timepicker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.js\n// module id = 303\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { NgbTooltip, NgbTooltipWindow } from './tooltip';\nimport { NgbTooltipConfig } from './tooltip-config';\nexport { NgbTooltipConfig } from './tooltip-config';\nexport { NgbTooltip } from './tooltip';\nvar NgbTooltipModule = (function () {\n    function NgbTooltipModule() {\n    }\n    NgbTooltipModule.forRoot = function () { return { ngModule: NgbTooltipModule, providers: [NgbTooltipConfig] }; };\n    NgbTooltipModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow] },] },\n    ];\n    /** @nocollapse */\n    NgbTooltipModule.ctorParameters = function () { return []; };\n    return NgbTooltipModule;\n}());\nexport { NgbTooltipModule };\n//# sourceMappingURL=tooltip.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.js\n// module id = 304\n// module chunks = 1","import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, Injector, Renderer2, ElementRef, ViewContainerRef, ComponentFactoryResolver, NgZone } from '@angular/core';\nimport { listenToTriggers } from '../util/triggers';\nimport { positionElements } from '../util/positioning';\nimport { PopupService } from '../util/popup';\nimport { NgbTooltipConfig } from './tooltip-config';\nvar nextId = 0;\nvar NgbTooltipWindow = (function () {\n    function NgbTooltipWindow(_element, _renderer) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this.placement = 'top';\n    }\n    NgbTooltipWindow.prototype.applyPlacement = function (_placement) {\n        // remove the current placement classes\n        this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n        this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n        // set the new placement classes\n        this.placement = _placement;\n        // apply the new placement\n        this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n        this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n    };\n    NgbTooltipWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-tooltip-window',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        '[class]': '\"tooltip show bs-tooltip-\" + placement.split(\"-\")[0]+\" bs-tooltip-\" + placement',\n                        'role': 'tooltip',\n                        '[id]': 'id'\n                    },\n                    template: \"<div class=\\\"arrow\\\"></div><div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\",\n                    styles: [\"\\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\\n      left: calc(50% - 0.4rem);\\n    }\\n\\n    :host.bs-tooltip-top-left .arrow, :host.bs-tooltip-bottom-left .arrow {\\n      left: 1em;\\n    }\\n\\n    :host.bs-tooltip-top-right .arrow, :host.bs-tooltip-bottom-right .arrow {\\n      left: auto;\\n      right: 0.8rem;\\n    }\\n\\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\\n      top: calc(50% - 0.4rem);\\n    }\\n    \\n    :host.bs-tooltip-left-top .arrow, :host.bs-tooltip-right-top .arrow {\\n      top: 0.4rem;\\n    }\\n\\n    :host.bs-tooltip-left-bottom .arrow, :host.bs-tooltip-right-bottom .arrow {\\n      top: auto;\\n      bottom: 0.4rem;\\n    }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTooltipWindow.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n    ]; };\n    NgbTooltipWindow.propDecorators = {\n        \"placement\": [{ type: Input },],\n        \"id\": [{ type: Input },],\n    };\n    return NgbTooltipWindow;\n}());\nexport { NgbTooltipWindow };\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\nvar NgbTooltip = (function () {\n    function NgbTooltip(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, ngZone) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        /**\n           * Emits an event when the tooltip is shown\n           */\n        this.shown = new EventEmitter();\n        /**\n           * Emits an event when the tooltip is hidden\n           */\n        this.hidden = new EventEmitter();\n        this._ngbTooltipWindowId = \"ngb-tooltip-\" + nextId++;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disableTooltip = config.disableTooltip;\n        this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n        this._zoneSubscription = ngZone.onStable.subscribe(function () {\n            if (_this._windowRef) {\n                _this._windowRef.instance.applyPlacement(positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body'));\n            }\n        });\n    }\n    Object.defineProperty(NgbTooltip.prototype, \"ngbTooltip\", {\n        get: function () { return this._ngbTooltip; },\n        set: /**\n           * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n           */\n        function (value) {\n            this._ngbTooltip = value;\n            if (!value && this._windowRef) {\n                this.close();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     * The context is an optional value to be injected into the tooltip template when it is created.\n     */\n    /**\n       * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       * The context is an optional value to be injected into the tooltip template when it is created.\n       */\n    NgbTooltip.prototype.open = /**\n       * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       * The context is an optional value to be injected into the tooltip template when it is created.\n       */\n    function (context) {\n        if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n            this._windowRef = this._popupService.open(this._ngbTooltip, context);\n            this._windowRef.instance.id = this._ngbTooltipWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement;\n            // apply styling to set basic css-classes on target element, before going for positioning\n            this._windowRef.changeDetectorRef.detectChanges();\n            this._windowRef.changeDetectorRef.markForCheck();\n            // position tooltip along the element\n            this._windowRef.instance.applyPlacement(positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body'));\n            this.shown.emit();\n        }\n    };\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     */\n    /**\n       * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       */\n    NgbTooltip.prototype.close = /**\n       * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       */\n    function () {\n        if (this._windowRef != null) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n        }\n    };\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     */\n    /**\n       * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       */\n    NgbTooltip.prototype.toggle = /**\n       * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n       */\n    function () {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     */\n    /**\n       * Returns whether or not the tooltip is currently being shown\n       */\n    NgbTooltip.prototype.isOpen = /**\n       * Returns whether or not the tooltip is currently being shown\n       */\n    function () { return this._windowRef != null; };\n    NgbTooltip.prototype.ngOnInit = function () {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this), this.toggle.bind(this));\n    };\n    NgbTooltip.prototype.ngOnDestroy = function () {\n        this.close();\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbTooltip.decorators = [\n        { type: Directive, args: [{ selector: '[ngbTooltip]', exportAs: 'ngbTooltip' },] },\n    ];\n    /** @nocollapse */\n    NgbTooltip.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: Injector, },\n        { type: ComponentFactoryResolver, },\n        { type: ViewContainerRef, },\n        { type: NgbTooltipConfig, },\n        { type: NgZone, },\n    ]; };\n    NgbTooltip.propDecorators = {\n        \"placement\": [{ type: Input },],\n        \"triggers\": [{ type: Input },],\n        \"container\": [{ type: Input },],\n        \"disableTooltip\": [{ type: Input },],\n        \"shown\": [{ type: Output },],\n        \"hidden\": [{ type: Output },],\n        \"ngbTooltip\": [{ type: Input },],\n    };\n    return NgbTooltip;\n}());\nexport { NgbTooltip };\n//# sourceMappingURL=tooltip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.js\n// module id = 305\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbHighlight } from './highlight';\nimport { NgbTypeaheadWindow } from './typeahead-window';\nimport { NgbTypeahead } from './typeahead';\nimport { NgbTypeaheadConfig } from './typeahead-config';\nexport { NgbHighlight } from './highlight';\nexport { NgbTypeaheadWindow } from './typeahead-window';\nexport { NgbTypeaheadConfig } from './typeahead-config';\nexport { NgbTypeahead } from './typeahead';\nvar NgbTypeaheadModule = (function () {\n    function NgbTypeaheadModule() {\n    }\n    NgbTypeaheadModule.forRoot = function () { return { ngModule: NgbTypeaheadModule, providers: [NgbTypeaheadConfig] }; };\n    NgbTypeaheadModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n                    exports: [NgbTypeahead, NgbHighlight],\n                    imports: [CommonModule],\n                    entryComponents: [NgbTypeaheadWindow]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTypeaheadModule.ctorParameters = function () { return []; };\n    return NgbTypeaheadModule;\n}());\nexport { NgbTypeaheadModule };\n//# sourceMappingURL=typeahead.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.js\n// module id = 306\n// module chunks = 1","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { regExpEscape, toString } from '../util/util';\nvar NgbHighlight = (function () {\n    function NgbHighlight() {\n        this.highlightClass = 'ngb-highlight';\n    }\n    NgbHighlight.prototype.ngOnChanges = function (changes) {\n        var resultStr = toString(this.result);\n        var resultLC = resultStr.toLowerCase();\n        var termLC = toString(this.term).toLowerCase();\n        var currentIdx = 0;\n        if (termLC.length > 0) {\n            this.parts = resultLC.split(new RegExp(\"(\" + regExpEscape(termLC) + \")\")).map(function (part) {\n                var originalPart = resultStr.substr(currentIdx, part.length);\n                currentIdx += part.length;\n                return originalPart;\n            });\n        }\n        else {\n            this.parts = [resultStr];\n        }\n    };\n    NgbHighlight.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-highlight',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: \"<ng-template ngFor [ngForOf]=\\\"parts\\\" let-part let-isOdd=\\\"odd\\\">\" +\n                        \"<span *ngIf=\\\"isOdd\\\" class=\\\"{{highlightClass}}\\\">{{part}}</span><ng-template [ngIf]=\\\"!isOdd\\\">{{part}}</ng-template>\" +\n                        \"</ng-template>\",\n                    // template needs to be formatted in a certain way so we don't add empty text nodes\n                    styles: [\"\\n    .ngb-highlight {\\n      font-weight: bold;\\n    }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbHighlight.ctorParameters = function () { return []; };\n    NgbHighlight.propDecorators = {\n        \"highlightClass\": [{ type: Input },],\n        \"result\": [{ type: Input },],\n        \"term\": [{ type: Input },],\n    };\n    return NgbHighlight;\n}());\nexport { NgbHighlight };\n//# sourceMappingURL=highlight.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/highlight.js\n// module id = 307\n// module chunks = 1","import { ComponentFactoryResolver, Directive, ElementRef, EventEmitter, forwardRef, Injector, Input, NgZone, Output, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { letProto } from 'rxjs/operator/let';\nimport { _do } from 'rxjs/operator/do';\nimport { switchMap } from 'rxjs/operator/switchMap';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { positionElements } from '../util/positioning';\nimport { NgbTypeaheadWindow } from './typeahead-window';\nimport { PopupService } from '../util/popup';\nimport { toString, isDefined } from '../util/util';\nimport { NgbTypeaheadConfig } from './typeahead-config';\nvar Key;\n(function (Key) {\n    Key[Key[\"Tab\"] = 9] = \"Tab\";\n    Key[Key[\"Enter\"] = 13] = \"Enter\";\n    Key[Key[\"Escape\"] = 27] = \"Escape\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\nvar NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NgbTypeahead; }),\n    multi: true\n};\nvar nextWindowId = 0;\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\nvar NgbTypeahead = (function () {\n    function NgbTypeahead(_elementRef, _viewContainerRef, _renderer, _injector, componentFactoryResolver, config, ngZone) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._injector = _injector;\n        /** Placement of a typeahead accepts:\n           *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n           *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n           * and array of above values.\n          */\n        this.placement = 'bottom-left';\n        /**\n           * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n           */\n        this.selectItem = new EventEmitter();\n        this.popupId = \"ngb-typeahead-\" + nextWindowId++;\n        this._onTouched = function () { };\n        this._onChange = function (_) { };\n        this.container = config.container;\n        this.editable = config.editable;\n        this.focusFirst = config.focusFirst;\n        this.showHint = config.showHint;\n        this.placement = config.placement;\n        this._valueChanges = fromEvent(_elementRef.nativeElement, 'input', function ($event) { return $event.target.value; });\n        this._resubscribeTypeahead = new BehaviorSubject(null);\n        this._popupService = new PopupService(NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n        this._zoneSubscription = ngZone.onStable.subscribe(function () {\n            if (_this.isPopupOpen()) {\n                positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body');\n            }\n        });\n    }\n    NgbTypeahead.prototype.ngOnInit = function () {\n        var _this = this;\n        var inputValues$ = _do.call(this._valueChanges, function (value) {\n            _this._inputValueBackup = value;\n            if (_this.editable) {\n                _this._onChange(value);\n            }\n        });\n        var results$ = letProto.call(inputValues$, this.ngbTypeahead);\n        var processedResults$ = _do.call(results$, function () {\n            if (!_this.editable) {\n                _this._onChange(undefined);\n            }\n        });\n        var userInput$ = switchMap.call(this._resubscribeTypeahead, function () { return processedResults$; });\n        this._subscription = this._subscribeToUserInput(userInput$);\n    };\n    NgbTypeahead.prototype.ngOnDestroy = function () {\n        this._closePopup();\n        this._unsubscribeFromUserInput();\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbTypeahead.prototype.registerOnChange = function (fn) { this._onChange = fn; };\n    NgbTypeahead.prototype.registerOnTouched = function (fn) { this._onTouched = fn; };\n    NgbTypeahead.prototype.writeValue = function (value) { this._writeInputValue(this._formatItemForInput(value)); };\n    NgbTypeahead.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    NgbTypeahead.prototype.onDocumentClick = function (event) {\n        if (event.target !== this._elementRef.nativeElement) {\n            this.dismissPopup();\n        }\n    };\n    /**\n     * Dismisses typeahead popup window\n     */\n    /**\n       * Dismisses typeahead popup window\n       */\n    NgbTypeahead.prototype.dismissPopup = /**\n       * Dismisses typeahead popup window\n       */\n    function () {\n        if (this.isPopupOpen()) {\n            this._closePopup();\n            this._writeInputValue(this._inputValueBackup);\n        }\n    };\n    /**\n     * Returns true if the typeahead popup window is displayed\n     */\n    /**\n       * Returns true if the typeahead popup window is displayed\n       */\n    NgbTypeahead.prototype.isPopupOpen = /**\n       * Returns true if the typeahead popup window is displayed\n       */\n    function () { return this._windowRef != null; };\n    NgbTypeahead.prototype.handleBlur = function () {\n        this._resubscribeTypeahead.next(null);\n        this._onTouched();\n    };\n    NgbTypeahead.prototype.handleKeyDown = function (event) {\n        if (!this.isPopupOpen()) {\n            return;\n        }\n        if (Key[toString(event.which)]) {\n            switch (event.which) {\n                case Key.ArrowDown:\n                    event.preventDefault();\n                    this._windowRef.instance.next();\n                    this._showHint();\n                    break;\n                case Key.ArrowUp:\n                    event.preventDefault();\n                    this._windowRef.instance.prev();\n                    this._showHint();\n                    break;\n                case Key.Enter:\n                case Key.Tab:\n                    var result = this._windowRef.instance.getActive();\n                    if (isDefined(result)) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        this._selectResult(result);\n                    }\n                    this._closePopup();\n                    break;\n                case Key.Escape:\n                    event.preventDefault();\n                    this._resubscribeTypeahead.next(null);\n                    this.dismissPopup();\n                    break;\n            }\n        }\n    };\n    NgbTypeahead.prototype._openPopup = function () {\n        var _this = this;\n        if (!this.isPopupOpen()) {\n            this._inputValueBackup = this._elementRef.nativeElement.value;\n            this._windowRef = this._popupService.open();\n            this._windowRef.instance.id = this.popupId;\n            this._windowRef.instance.selectEvent.subscribe(function (result) { return _this._selectResultClosePopup(result); });\n            this._windowRef.instance.activeChangeEvent.subscribe(function (activeId) { return _this.activeDescendant = activeId; });\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n        }\n    };\n    NgbTypeahead.prototype._closePopup = function () {\n        this._popupService.close();\n        this._windowRef = null;\n        this.activeDescendant = undefined;\n    };\n    NgbTypeahead.prototype._selectResult = function (result) {\n        var defaultPrevented = false;\n        this.selectItem.emit({ item: result, preventDefault: function () { defaultPrevented = true; } });\n        this._resubscribeTypeahead.next(null);\n        if (!defaultPrevented) {\n            this.writeValue(result);\n            this._onChange(result);\n        }\n    };\n    NgbTypeahead.prototype._selectResultClosePopup = function (result) {\n        this._selectResult(result);\n        this._closePopup();\n    };\n    NgbTypeahead.prototype._showHint = function () {\n        if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n            var userInputLowerCase = this._inputValueBackup.toLowerCase();\n            var formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n            if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n                this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n                this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n            }\n            else {\n                this.writeValue(this._windowRef.instance.getActive());\n            }\n        }\n    };\n    NgbTypeahead.prototype._formatItemForInput = function (item) {\n        return item && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    };\n    NgbTypeahead.prototype._writeInputValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n    };\n    NgbTypeahead.prototype._subscribeToUserInput = function (userInput$) {\n        var _this = this;\n        return userInput$.subscribe(function (results) {\n            if (!results || results.length === 0) {\n                _this._closePopup();\n            }\n            else {\n                _this._openPopup();\n                _this._windowRef.instance.focusFirst = _this.focusFirst;\n                _this._windowRef.instance.results = results;\n                _this._windowRef.instance.term = _this._elementRef.nativeElement.value;\n                if (_this.resultFormatter) {\n                    _this._windowRef.instance.formatter = _this.resultFormatter;\n                }\n                if (_this.resultTemplate) {\n                    _this._windowRef.instance.resultTemplate = _this.resultTemplate;\n                }\n                _this._windowRef.instance.resetActive();\n                // The observable stream we are subscribing to might have async steps\n                // and if a component containing typeahead is using the OnPush strategy\n                // the change detection turn wouldn't be invoked automatically.\n                // The observable stream we are subscribing to might have async steps\n                // and if a component containing typeahead is using the OnPush strategy\n                // the change detection turn wouldn't be invoked automatically.\n                _this._windowRef.changeDetectorRef.detectChanges();\n                _this._showHint();\n            }\n        });\n    };\n    NgbTypeahead.prototype._unsubscribeFromUserInput = function () {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._subscription = null;\n    };\n    NgbTypeahead.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[ngbTypeahead]',\n                    exportAs: 'ngbTypeahead',\n                    host: {\n                        '(blur)': 'handleBlur()',\n                        '[class.open]': 'isPopupOpen()',\n                        '(document:click)': 'onDocumentClick($event)',\n                        '(keydown)': 'handleKeyDown($event)',\n                        'autocomplete': 'off',\n                        'autocapitalize': 'off',\n                        'autocorrect': 'off',\n                        'role': 'combobox',\n                        'aria-multiline': 'false',\n                        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n                        '[attr.aria-activedescendant]': 'activeDescendant',\n                        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n                        '[attr.aria-expanded]': 'isPopupOpen()'\n                    },\n                    providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTypeahead.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: ViewContainerRef, },\n        { type: Renderer2, },\n        { type: Injector, },\n        { type: ComponentFactoryResolver, },\n        { type: NgbTypeaheadConfig, },\n        { type: NgZone, },\n    ]; };\n    NgbTypeahead.propDecorators = {\n        \"container\": [{ type: Input },],\n        \"editable\": [{ type: Input },],\n        \"focusFirst\": [{ type: Input },],\n        \"inputFormatter\": [{ type: Input },],\n        \"ngbTypeahead\": [{ type: Input },],\n        \"resultFormatter\": [{ type: Input },],\n        \"resultTemplate\": [{ type: Input },],\n        \"showHint\": [{ type: Input },],\n        \"placement\": [{ type: Input },],\n        \"selectItem\": [{ type: Output },],\n    };\n    return NgbTypeahead;\n}());\nexport { NgbTypeahead };\n//# sourceMappingURL=typeahead.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.js\n// module id = 308\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { NgbDate } from './ngb-date';\nimport { Injectable } from '@angular/core';\nimport { isInteger } from '../util/util';\nfunction fromJSDate(jsDate) {\n    return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n    var jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\nvar NgbCalendar = (function () {\n    function NgbCalendar() {\n    }\n    NgbCalendar.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbCalendar.ctorParameters = function () { return []; };\n    return NgbCalendar;\n}());\nexport { NgbCalendar };\nvar NgbCalendarGregorian = (function (_super) {\n    __extends(NgbCalendarGregorian, _super);\n    function NgbCalendarGregorian() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NgbCalendarGregorian.prototype.getDaysPerWeek = function () { return 7; };\n    NgbCalendarGregorian.prototype.getMonths = function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; };\n    NgbCalendarGregorian.prototype.getWeeksPerMonth = function () { return 6; };\n    NgbCalendarGregorian.prototype.getNext = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        var jsDate = toJSDate(date);\n        switch (period) {\n            case 'y':\n                return new NgbDate(date.year + number, 1, 1);\n            case 'm':\n                jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                break;\n            default:\n                return date;\n        }\n        return fromJSDate(jsDate);\n    };\n    NgbCalendarGregorian.prototype.getPrev = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    NgbCalendarGregorian.prototype.getWeekday = function (date) {\n        var jsDate = toJSDate(date);\n        var day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    NgbCalendarGregorian.prototype.getWeekNumber = function (week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        var date = week[thursdayIndex];\n        var jsDate = toJSDate(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        var time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    };\n    NgbCalendarGregorian.prototype.getToday = function () { return fromJSDate(new Date()); };\n    NgbCalendarGregorian.prototype.isValid = function (date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        var jsDate = toJSDate(date);\n        return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day;\n    };\n    NgbCalendarGregorian.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbCalendarGregorian.ctorParameters = function () { return []; };\n    return NgbCalendarGregorian;\n}(NgbCalendar));\nexport { NgbCalendarGregorian };\n//# sourceMappingURL=ngb-calendar.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.js\n// module id = 33\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\nvar WEEKDAYS_SHORT = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\nvar MONTHS_SHORT = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar MONTHS_FULL = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November',\n    'December'\n];\n/**\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\n */\nvar NgbDatepickerI18n = (function () {\n    function NgbDatepickerI18n() {\n    }\n    NgbDatepickerI18n.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDatepickerI18n.ctorParameters = function () { return []; };\n    return NgbDatepickerI18n;\n}());\nexport { NgbDatepickerI18n };\nvar NgbDatepickerI18nDefault = (function (_super) {\n    __extends(NgbDatepickerI18nDefault, _super);\n    function NgbDatepickerI18nDefault() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NgbDatepickerI18nDefault.prototype.getWeekdayShortName = function (weekday) { return WEEKDAYS_SHORT[weekday - 1]; };\n    NgbDatepickerI18nDefault.prototype.getMonthShortName = function (month) { return MONTHS_SHORT[month - 1]; };\n    NgbDatepickerI18nDefault.prototype.getMonthFullName = function (month) { return MONTHS_FULL[month - 1]; };\n    NgbDatepickerI18nDefault.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDatepickerI18nDefault.ctorParameters = function () { return []; };\n    return NgbDatepickerI18nDefault;\n}(NgbDatepickerI18n));\nexport { NgbDatepickerI18nDefault };\n//# sourceMappingURL=datepicker-i18n.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.js\n// module id = 34\n// module chunks = 1","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nvar \n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nPositioning = (function () {\n    function Positioning() {\n    }\n    Positioning.prototype.getAllStyles = function (element) { return window.getComputedStyle(element); };\n    Positioning.prototype.getStyle = function (element, prop) { return this.getAllStyles(element)[prop]; };\n    Positioning.prototype.isStaticPositioned = function (element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    };\n    Positioning.prototype.offsetParent = function (element) {\n        var offsetParentEl = element.offsetParent || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = offsetParentEl.offsetParent;\n        }\n        return offsetParentEl || document.documentElement;\n    };\n    Positioning.prototype.position = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elPosition;\n        var parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n        }\n        else {\n            var offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    };\n    Positioning.prototype.offset = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elBcr = element.getBoundingClientRect();\n        var viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        var elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    };\n    Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\n        var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        var targetElStyles = this.getAllStyles(targetElement);\n        var targetElBCR = targetElement.getBoundingClientRect();\n        var placementPrimary = placement.split('-')[0] || 'top';\n        var placementSecondary = placement.split('-')[1] || 'center';\n        var targetElPosition = {\n            'height': targetElBCR.height || targetElement.offsetHeight,\n            'width': targetElBCR.width || targetElement.offsetWidth,\n            'top': 0,\n            'bottom': targetElBCR.height || targetElement.offsetHeight,\n            'left': 0,\n            'right': targetElBCR.width || targetElement.offsetWidth\n        };\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.top =\n                    hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height;\n                break;\n            case 'left':\n                targetElPosition.left =\n                    hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width;\n                break;\n        }\n        switch (placementSecondary) {\n            case 'top':\n                targetElPosition.top = hostElPosition.top;\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n                break;\n            case 'left':\n                targetElPosition.left = hostElPosition.left;\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n                break;\n            case 'center':\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n                    targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n                }\n                else {\n                    targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n                }\n                break;\n        }\n        targetElPosition.top = Math.round(targetElPosition.top);\n        targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        targetElPosition.left = Math.round(targetElPosition.left);\n        targetElPosition.right = Math.round(targetElPosition.right);\n        return targetElPosition;\n    };\n    // get the availble placements of the target element in the viewport dependeing on the host element\n    // get the availble placements of the target element in the viewport dependeing on the host element\n    Positioning.prototype.getAvailablePlacements = \n    // get the availble placements of the target element in the viewport dependeing on the host element\n    function (hostElement, targetElement) {\n        var availablePlacements = [];\n        var hostElemClientRect = hostElement.getBoundingClientRect();\n        var targetElemClientRect = targetElement.getBoundingClientRect();\n        var html = document.documentElement;\n        // left: check if target width can be placed between host left and viewport start and also height of target is\n        // inside viewport\n        if (targetElemClientRect.width < hostElemClientRect.left) {\n            // check for left only\n            if ((hostElemClientRect.top + hostElemClientRect.height / 2 - targetElement.offsetHeight / 2) > 0) {\n                availablePlacements.splice(availablePlacements.length, 1, 'left');\n            }\n            // check for left-top and left-bottom\n            this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);\n        }\n        // top: target height is less than host top\n        if (targetElemClientRect.height < hostElemClientRect.top) {\n            availablePlacements.splice(availablePlacements.length, 1, 'top');\n            this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);\n        }\n        // right: check if target width can be placed between host right and viewport end and also height of target is\n        // inside viewport\n        if ((window.innerWidth || html.clientWidth) - hostElemClientRect.right > targetElemClientRect.width) {\n            // check for right only\n            if ((hostElemClientRect.top + hostElemClientRect.height / 2 - targetElement.offsetHeight / 2) > 0) {\n                availablePlacements.splice(availablePlacements.length, 1, 'right');\n            }\n            // check for right-top and right-bottom\n            this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);\n        }\n        // bottom: check if there is enough space between host bottom and viewport end for target height\n        if ((window.innerHeight || html.clientHeight) - hostElemClientRect.bottom > targetElemClientRect.height) {\n            availablePlacements.splice(availablePlacements.length, 1, 'bottom');\n            this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);\n        }\n        return availablePlacements;\n    };\n    /**\n     * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n     * primaryplacement: left|right\n     * availablePlacementArr: array in which available placemets to be set\n     */\n    /**\n       * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n       * primaryplacement: left|right\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    Positioning.prototype.setSecondaryPlacementForLeftRight = /**\n       * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n       * primaryplacement: left|right\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {\n        var html = document.documentElement;\n        // check for left-bottom\n        if (targetElemClientRect.height <= hostElemClientRect.bottom) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');\n        }\n        if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');\n        }\n    };\n    /**\n     * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n     * primaryplacement: top|bottom\n     * availablePlacementArr: array in which available placemets to be set\n     */\n    /**\n       * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n       * primaryplacement: top|bottom\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    Positioning.prototype.setSecondaryPlacementForTopBottom = /**\n       * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n       * primaryplacement: top|bottom\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {\n        var html = document.documentElement;\n        // check for left-bottom\n        if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');\n        }\n        if (targetElemClientRect.width <= hostElemClientRect.right) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');\n        }\n    };\n    return Positioning;\n}());\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport { Positioning };\nvar positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order 'top', 'bottom', 'left', 'right'.\n * */\nexport function positionElements(hostElement, targetElement, placement, appendToBody) {\n    var placementVals = Array.isArray(placement) ? placement : [placement];\n    // replace auto placement with other placements\n    var hasAuto = placementVals.findIndex(function (val) { return val === 'auto'; });\n    if (hasAuto >= 0) {\n        ['top', 'right', 'bottom', 'left'].forEach(function (obj) {\n            if (placementVals.find(function (val) { return val.search('^' + obj + '|^' + obj + '-') !== -1; }) == null) {\n                placementVals.splice(hasAuto++, 1, obj);\n            }\n        });\n    }\n    // coordinates where to position\n    var topVal = 0, leftVal = 0;\n    var appliedPlacement;\n    // get available placements\n    var availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);\n    var _loop_1 = function (item, index) {\n        // check if passed placement is present in the available placement or otherwise apply the last placement in the\n        // passed placement list\n        if ((availablePlacements.find(function (val) { return val === item; }) != null) || (placementVals.length === index + 1)) {\n            appliedPlacement = item;\n            var pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);\n            topVal = pos.top;\n            leftVal = pos.left;\n            return \"break\";\n        }\n    };\n    // iterate over all the passed placements\n    for (var _i = 0, _a = toItemIndexes(placementVals); _i < _a.length; _i++) {\n        var _b = _a[_i], item = _b.item, index = _b.index;\n        var state_1 = _loop_1(item, index);\n        if (state_1 === \"break\")\n            break;\n    }\n    targetElement.style.top = topVal + \"px\";\n    targetElement.style.left = leftVal + \"px\";\n    return appliedPlacement;\n}\n// function to get index and item of an array\nfunction toItemIndexes(a) {\n    return a.map(function (item, index) { return ({ item: item, index: index }); });\n}\n//# sourceMappingURL=positioning.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/util/positioning.js\n// module id = 54\n// module chunks = 1","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PasswordService } from './service/password.service';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    BrowserAnimationsModule,\r\n    NgbModule.forRoot()\r\n  ],\r\n  providers: [\r\n    PasswordService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/app.module.ts","/**\n * @license Angular v5.2.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Inject, Injectable, NgModule, NgZone, RendererFactory2, ViewEncapsulation } from '@angular/core';\nimport { BrowserModule, DOCUMENT, ɵDomRendererFactory2 } from '@angular/platform-browser';\nimport { __extends } from 'tslib';\nimport { AnimationBuilder, AnimationFactory, sequence } from '@angular/animations';\nimport { AnimationDriver, ɵAnimationEngine, ɵAnimationStyleNormalizer, ɵNoopAnimationDriver, ɵWebAnimationsDriver, ɵWebAnimationsStyleNormalizer, ɵsupportsWebAnimations } from '@angular/animations/browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar BrowserAnimationBuilder = /** @class */ (function (_super) {\n    __extends(BrowserAnimationBuilder, _super);\n    function BrowserAnimationBuilder(rootRenderer, doc) {\n        var _this = _super.call(this) || this;\n        _this._nextAnimationId = 0;\n        var /** @type {?} */ typeData = /** @type {?} */ ({\n            id: '0',\n            encapsulation: ViewEncapsulation.None,\n            styles: [],\n            data: { animation: [] }\n        });\n        _this._renderer = /** @type {?} */ (rootRenderer.createRenderer(doc.body, typeData));\n        return _this;\n    }\n    /**\n     * @param {?} animation\n     * @return {?}\n     */\n    BrowserAnimationBuilder.prototype.build = /**\n     * @param {?} animation\n     * @return {?}\n     */\n    function (animation) {\n        var /** @type {?} */ id = this._nextAnimationId.toString();\n        this._nextAnimationId++;\n        var /** @type {?} */ entry = Array.isArray(animation) ? sequence(animation) : animation;\n        issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n        return new BrowserAnimationFactory(id, this._renderer);\n    };\n    BrowserAnimationBuilder.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BrowserAnimationBuilder.ctorParameters = function () { return [\n        { type: RendererFactory2, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    return BrowserAnimationBuilder;\n}(AnimationBuilder));\nvar BrowserAnimationFactory = /** @class */ (function (_super) {\n    __extends(BrowserAnimationFactory, _super);\n    function BrowserAnimationFactory(_id, _renderer) {\n        var _this = _super.call(this) || this;\n        _this._id = _id;\n        _this._renderer = _renderer;\n        return _this;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    BrowserAnimationFactory.prototype.create = /**\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    function (element, options) {\n        return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n    };\n    return BrowserAnimationFactory;\n}(AnimationFactory));\nvar RendererAnimationPlayer = /** @class */ (function () {\n    function RendererAnimationPlayer(id, element, options, _renderer) {\n        this.id = id;\n        this.element = element;\n        this._renderer = _renderer;\n        this.parentPlayer = null;\n        this._started = false;\n        this.totalTime = 0;\n        this._command('create', options);\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype._listen = /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (eventName, callback) {\n        return this._renderer.listen(this.element, \"@@\" + this.id + \":\" + eventName, callback);\n    };\n    /**\n     * @param {?} command\n     * @param {...?} args\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype._command = /**\n     * @param {?} command\n     * @param {...?} args\n     * @return {?}\n     */\n    function (command) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._listen('done', fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._listen('start', fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._listen('destroy', fn); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () { this._command('init'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        this._command('play');\n        this._started = true;\n    };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () { this._command('pause'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () { this._command('restart'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () { this._command('finish'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._command('destroy'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () { this._command('reset'); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) { this._command('setPosition', p); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return 0; };\n    return RendererAnimationPlayer;\n}());\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} id\n * @param {?} command\n * @param {?} args\n * @return {?}\n */\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n    return renderer.setProperty(element, \"@@\" + id + \":\" + command, args);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ANIMATION_PREFIX = '@';\nvar DISABLE_ANIMATIONS_FLAG = '@.disabled';\nvar AnimationRendererFactory = /** @class */ (function () {\n    function AnimationRendererFactory(delegate, engine, _zone) {\n        this.delegate = delegate;\n        this.engine = engine;\n        this._zone = _zone;\n        this._currentId = 0;\n        this._microtaskId = 1;\n        this._animationCallbacksBuffer = [];\n        this._rendererCache = new Map();\n        this._cdRecurDepth = 0;\n        this.promise = Promise.resolve(0);\n        engine.onRemovalComplete = function (element, delegate) {\n            // Note: if an component element has a leave animation, and the component\n            // a host leave animation, the view engine will call `removeChild` for the parent\n            // component renderer as well as for the child component renderer.\n            // Therefore, we need to check if we already removed the element.\n            if (delegate && delegate.parentNode(element)) {\n                delegate.removeChild(element.parentNode, element);\n            }\n        };\n    }\n    /**\n     * @param {?} hostElement\n     * @param {?} type\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.createRenderer = /**\n     * @param {?} hostElement\n     * @param {?} type\n     * @return {?}\n     */\n    function (hostElement, type) {\n        var _this = this;\n        var /** @type {?} */ EMPTY_NAMESPACE_ID = '';\n        // cache the delegates to find out which cached delegate can\n        // be used by which cached renderer\n        var /** @type {?} */ delegate = this.delegate.createRenderer(hostElement, type);\n        if (!hostElement || !type || !type.data || !type.data['animation']) {\n            var /** @type {?} */ renderer = this._rendererCache.get(delegate);\n            if (!renderer) {\n                renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine);\n                // only cache this result when the base renderer is used\n                this._rendererCache.set(delegate, renderer);\n            }\n            return renderer;\n        }\n        var /** @type {?} */ componentId = type.id;\n        var /** @type {?} */ namespaceId = type.id + '-' + this._currentId;\n        this._currentId++;\n        this.engine.register(namespaceId, hostElement);\n        var /** @type {?} */ animationTriggers = /** @type {?} */ (type.data['animation']);\n        animationTriggers.forEach(function (trigger) {\n            return _this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger);\n        });\n        return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        this._cdRecurDepth++;\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype._scheduleCountTask = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // always use promise to schedule microtask instead of use Zone\n        this.promise.then(function () { _this._microtaskId++; });\n    };\n    /* @internal */\n    /**\n     * @param {?} count\n     * @param {?} fn\n     * @param {?} data\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.scheduleListenerCallback = /**\n     * @param {?} count\n     * @param {?} fn\n     * @param {?} data\n     * @return {?}\n     */\n    function (count, fn, data) {\n        var _this = this;\n        if (count >= 0 && count < this._microtaskId) {\n            this._zone.run(function () { return fn(data); });\n            return;\n        }\n        if (this._animationCallbacksBuffer.length == 0) {\n            Promise.resolve(null).then(function () {\n                _this._zone.run(function () {\n                    _this._animationCallbacksBuffer.forEach(function (tuple) {\n                        var fn = tuple[0], data = tuple[1];\n                        fn(data);\n                    });\n                    _this._animationCallbacksBuffer = [];\n                });\n            });\n        }\n        this._animationCallbacksBuffer.push([fn, data]);\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._cdRecurDepth--;\n        // this is to prevent animations from running twice when an inner\n        // component does CD when a parent component insted has inserted it\n        if (this._cdRecurDepth == 0) {\n            this._zone.runOutsideAngular(function () {\n                _this._scheduleCountTask();\n                _this.engine.flush(_this._microtaskId);\n            });\n        }\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () { return this.engine.whenRenderingDone(); };\n    AnimationRendererFactory.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    AnimationRendererFactory.ctorParameters = function () { return [\n        { type: RendererFactory2, },\n        { type: ɵAnimationEngine, },\n        { type: NgZone, },\n    ]; };\n    return AnimationRendererFactory;\n}());\nvar BaseAnimationRenderer = /** @class */ (function () {\n    function BaseAnimationRenderer(namespaceId, delegate, engine) {\n        this.namespaceId = namespaceId;\n        this.delegate = delegate;\n        this.engine = engine;\n        this.destroyNode = this.delegate.destroyNode ? function (n) { return ((delegate.destroyNode))(n); } : null;\n    }\n    Object.defineProperty(BaseAnimationRenderer.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        this.engine.destroy(this.namespaceId, this.delegate);\n        this.delegate.destroy();\n    };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        return this.delegate.createElement(name, namespace);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return this.delegate.createComment(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return this.delegate.createText(value); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        this.delegate.appendChild(parent, newChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, false);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        this.delegate.insertBefore(parent, newChild, refChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, true);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        this.engine.onRemove(this.namespaceId, oldChild, this.delegate);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) { return this.delegate.selectRootElement(selectorOrNode); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) { this.delegate.addClass(el, name); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) { this.delegate.removeClass(el, name); };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?=} flags\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?=} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?=} flags\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?=} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\n            this.disableAnimations(el, !!value);\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { this.delegate.setValue(node, value); };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.disableAnimations = /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    function (element, value) {\n        this.engine.disableAnimations(element, value);\n    };\n    return BaseAnimationRenderer;\n}());\nvar AnimationRenderer = /** @class */ (function (_super) {\n    __extends(AnimationRenderer, _super);\n    function AnimationRenderer(factory, namespaceId, delegate, engine) {\n        var _this = _super.call(this, namespaceId, delegate, engine) || this;\n        _this.factory = factory;\n        _this.namespaceId = namespaceId;\n        return _this;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationRenderer.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        if (name.charAt(0) == ANIMATION_PREFIX) {\n            if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\n                value = value === undefined ? true : !!value;\n                this.disableAnimations(el, /** @type {?} */ (value));\n            }\n            else {\n                this.engine.process(this.namespaceId, el, name.substr(1), value);\n            }\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationRenderer.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        var _this = this;\n        if (eventName.charAt(0) == ANIMATION_PREFIX) {\n            var /** @type {?} */ element = resolveElementFromTarget(target);\n            var /** @type {?} */ name_1 = eventName.substr(1);\n            var /** @type {?} */ phase = '';\n            // @listener.phase is for trigger animation callbacks\n            // @@listener is for animation builder callbacks\n            if (name_1.charAt(0) != ANIMATION_PREFIX) {\n                _a = parseTriggerCallbackName(name_1), name_1 = _a[0], phase = _a[1];\n            }\n            return this.engine.listen(this.namespaceId, element, name_1, phase, function (event) {\n                var /** @type {?} */ countId = (/** @type {?} */ (event))['_data'] || -1;\n                _this.factory.scheduleListenerCallback(countId, callback, event);\n            });\n        }\n        return this.delegate.listen(target, eventName, callback);\n        var _a;\n    };\n    return AnimationRenderer;\n}(BaseAnimationRenderer));\n/**\n * @param {?} target\n * @return {?}\n */\nfunction resolveElementFromTarget(target) {\n    switch (target) {\n        case 'body':\n            return document.body;\n        case 'document':\n            return document;\n        case 'window':\n            return window;\n        default:\n            return target;\n    }\n}\n/**\n * @param {?} triggerName\n * @return {?}\n */\nfunction parseTriggerCallbackName(triggerName) {\n    var /** @type {?} */ dotIndex = triggerName.indexOf('.');\n    var /** @type {?} */ trigger = triggerName.substring(0, dotIndex);\n    var /** @type {?} */ phase = triggerName.substr(dotIndex + 1);\n    return [trigger, phase];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InjectableAnimationEngine = /** @class */ (function (_super) {\n    __extends(InjectableAnimationEngine, _super);\n    function InjectableAnimationEngine(driver, normalizer) {\n        return _super.call(this, driver, normalizer) || this;\n    }\n    InjectableAnimationEngine.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    InjectableAnimationEngine.ctorParameters = function () { return [\n        { type: AnimationDriver, },\n        { type: ɵAnimationStyleNormalizer, },\n    ]; };\n    return InjectableAnimationEngine;\n}(ɵAnimationEngine));\n/**\n * @return {?}\n */\nfunction instantiateSupportedAnimationDriver() {\n    if (ɵsupportsWebAnimations()) {\n        return new ɵWebAnimationsDriver();\n    }\n    return new ɵNoopAnimationDriver();\n}\n/**\n * @return {?}\n */\nfunction instantiateDefaultStyleNormalizer() {\n    return new ɵWebAnimationsStyleNormalizer();\n}\n/**\n * @param {?} renderer\n * @param {?} engine\n * @param {?} zone\n * @return {?}\n */\nfunction instantiateRendererFactory(renderer, engine, zone) {\n    return new AnimationRendererFactory(renderer, engine, zone);\n}\nvar SHARED_ANIMATION_PROVIDERS = [\n    { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },\n    { provide: ɵAnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer },\n    { provide: ɵAnimationEngine, useClass: InjectableAnimationEngine }, {\n        provide: RendererFactory2,\n        useFactory: instantiateRendererFactory,\n        deps: [ɵDomRendererFactory2, ɵAnimationEngine, NgZone]\n    }\n];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nvar BROWSER_ANIMATIONS_PROVIDERS = [\n    { provide: AnimationDriver, useFactory: instantiateSupportedAnimationDriver }\n].concat(SHARED_ANIMATION_PROVIDERS);\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nvar BROWSER_NOOP_ANIMATIONS_PROVIDERS = [{ provide: AnimationDriver, useClass: ɵNoopAnimationDriver }].concat(SHARED_ANIMATION_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@experimental Animation support is experimental.\n */\nvar BrowserAnimationsModule = /** @class */ (function () {\n    function BrowserAnimationsModule() {\n    }\n    BrowserAnimationsModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [BrowserModule],\n                    providers: BROWSER_ANIMATIONS_PROVIDERS,\n                },] },\n    ];\n    /** @nocollapse */\n    BrowserAnimationsModule.ctorParameters = function () { return []; };\n    return BrowserAnimationsModule;\n}());\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationsModule = /** @class */ (function () {\n    function NoopAnimationsModule() {\n    }\n    NoopAnimationsModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [BrowserModule],\n                    providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n                },] },\n    ];\n    /** @nocollapse */\n    NoopAnimationsModule.ctorParameters = function () { return []; };\n    return NoopAnimationsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserAnimationsModule, NoopAnimationsModule, BrowserAnimationBuilder as ɵBrowserAnimationBuilder, BrowserAnimationFactory as ɵBrowserAnimationFactory, AnimationRenderer as ɵAnimationRenderer, AnimationRendererFactory as ɵAnimationRendererFactory, BaseAnimationRenderer as ɵa, BROWSER_ANIMATIONS_PROVIDERS as ɵf, BROWSER_NOOP_ANIMATIONS_PROVIDERS as ɵg, InjectableAnimationEngine as ɵb, instantiateDefaultStyleNormalizer as ɵd, instantiateRendererFactory as ɵe, instantiateSupportedAnimationDriver as ɵc };\n//# sourceMappingURL=animations.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/platform-browser/esm5/animations.js\n// module id = 646\n// module chunks = 1","/**\n * @license Angular v5.2.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { AUTO_STYLE, NoopAnimationPlayer, sequence, style, ɵAnimationGroupPlayer, ɵPRE_STYLE } from '@angular/animations';\nimport { __assign, __extends } from 'tslib';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} players\n * @return {?}\n */\nfunction optimizeGroupPlayer(players) {\n    switch (players.length) {\n        case 0:\n            return new NoopAnimationPlayer();\n        case 1:\n            return players[0];\n        default:\n            return new ɵAnimationGroupPlayer(players);\n    }\n}\n/**\n * @param {?} driver\n * @param {?} normalizer\n * @param {?} element\n * @param {?} keyframes\n * @param {?=} preStyles\n * @param {?=} postStyles\n * @return {?}\n */\nfunction normalizeKeyframes(driver, normalizer, element, keyframes, preStyles, postStyles) {\n    if (preStyles === void 0) { preStyles = {}; }\n    if (postStyles === void 0) { postStyles = {}; }\n    var /** @type {?} */ errors = [];\n    var /** @type {?} */ normalizedKeyframes = [];\n    var /** @type {?} */ previousOffset = -1;\n    var /** @type {?} */ previousKeyframe = null;\n    keyframes.forEach(function (kf) {\n        var /** @type {?} */ offset = /** @type {?} */ (kf['offset']);\n        var /** @type {?} */ isSameOffset = offset == previousOffset;\n        var /** @type {?} */ normalizedKeyframe = (isSameOffset && previousKeyframe) || {};\n        Object.keys(kf).forEach(function (prop) {\n            var /** @type {?} */ normalizedProp = prop;\n            var /** @type {?} */ normalizedValue = kf[prop];\n            if (prop !== 'offset') {\n                normalizedProp = normalizer.normalizePropertyName(normalizedProp, errors);\n                switch (normalizedValue) {\n                    case ɵPRE_STYLE:\n                        normalizedValue = preStyles[prop];\n                        break;\n                    case AUTO_STYLE:\n                        normalizedValue = postStyles[prop];\n                        break;\n                    default:\n                        normalizedValue =\n                            normalizer.normalizeStyleValue(prop, normalizedProp, normalizedValue, errors);\n                        break;\n                }\n            }\n            normalizedKeyframe[normalizedProp] = normalizedValue;\n        });\n        if (!isSameOffset) {\n            normalizedKeyframes.push(normalizedKeyframe);\n        }\n        previousKeyframe = normalizedKeyframe;\n        previousOffset = offset;\n    });\n    if (errors.length) {\n        var /** @type {?} */ LINE_START = '\\n - ';\n        throw new Error(\"Unable to animate due to the following errors:\" + LINE_START + errors.join(LINE_START));\n    }\n    return normalizedKeyframes;\n}\n/**\n * @param {?} player\n * @param {?} eventName\n * @param {?} event\n * @param {?} callback\n * @return {?}\n */\nfunction listenOnPlayer(player, eventName, event, callback) {\n    switch (eventName) {\n        case 'start':\n            player.onStart(function () { return callback(event && copyAnimationEvent(event, 'start', player.totalTime)); });\n            break;\n        case 'done':\n            player.onDone(function () { return callback(event && copyAnimationEvent(event, 'done', player.totalTime)); });\n            break;\n        case 'destroy':\n            player.onDestroy(function () { return callback(event && copyAnimationEvent(event, 'destroy', player.totalTime)); });\n            break;\n    }\n}\n/**\n * @param {?} e\n * @param {?=} phaseName\n * @param {?=} totalTime\n * @return {?}\n */\nfunction copyAnimationEvent(e, phaseName, totalTime) {\n    var /** @type {?} */ event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == undefined ? e.totalTime : totalTime);\n    var /** @type {?} */ data = (/** @type {?} */ (e))['_data'];\n    if (data != null) {\n        (/** @type {?} */ (event))['_data'] = data;\n    }\n    return event;\n}\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?=} phaseName\n * @param {?=} totalTime\n * @return {?}\n */\nfunction makeAnimationEvent(element, triggerName, fromState, toState, phaseName, totalTime) {\n    if (phaseName === void 0) { phaseName = ''; }\n    if (totalTime === void 0) { totalTime = 0; }\n    return { element: element, triggerName: triggerName, fromState: fromState, toState: toState, phaseName: phaseName, totalTime: totalTime };\n}\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} defaultValue\n * @return {?}\n */\nfunction getOrSetAsInMap(map, key, defaultValue) {\n    var /** @type {?} */ value;\n    if (map instanceof Map) {\n        value = map.get(key);\n        if (!value) {\n            map.set(key, value = defaultValue);\n        }\n    }\n    else {\n        value = map[key];\n        if (!value) {\n            value = map[key] = defaultValue;\n        }\n    }\n    return value;\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction parseTimelineCommand(command) {\n    var /** @type {?} */ separatorPos = command.indexOf(':');\n    var /** @type {?} */ id = command.substring(1, separatorPos);\n    var /** @type {?} */ action = command.substr(separatorPos + 1);\n    return [id, action];\n}\nvar _contains = function (elm1, elm2) { return false; };\nvar _matches = function (element, selector) {\n    return false;\n};\nvar _query = function (element, selector, multi) {\n    return [];\n};\nif (typeof Element != 'undefined') {\n    // this is well supported in all browsers\n    _contains = function (elm1, elm2) { return /** @type {?} */ (elm1.contains(elm2)); };\n    if (Element.prototype.matches) {\n        _matches = function (element, selector) { return element.matches(selector); };\n    }\n    else {\n        var /** @type {?} */ proto = /** @type {?} */ (Element.prototype);\n        var /** @type {?} */ fn_1 = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector ||\n            proto.oMatchesSelector || proto.webkitMatchesSelector;\n        if (fn_1) {\n            _matches = function (element, selector) { return fn_1.apply(element, [selector]); };\n        }\n    }\n    _query = function (element, selector, multi) {\n        var /** @type {?} */ results = [];\n        if (multi) {\n            results.push.apply(results, element.querySelectorAll(selector));\n        }\n        else {\n            var /** @type {?} */ elm = element.querySelector(selector);\n            if (elm) {\n                results.push(elm);\n            }\n        }\n        return results;\n    };\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction containsVendorPrefix(prop) {\n    // Webkit is the only real popular vendor prefix nowadays\n    // cc: http://shouldiprefix.com/\n    return prop.substring(1, 6) == 'ebkit'; // webkit or Webkit\n}\nvar _CACHED_BODY = null;\nvar _IS_WEBKIT = false;\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction validateStyleProperty(prop) {\n    if (!_CACHED_BODY) {\n        _CACHED_BODY = getBodyNode() || {};\n        _IS_WEBKIT = /** @type {?} */ ((_CACHED_BODY)).style ? ('WebkitAppearance' in /** @type {?} */ ((_CACHED_BODY)).style) : false;\n    }\n    var /** @type {?} */ result = true;\n    if (/** @type {?} */ ((_CACHED_BODY)).style && !containsVendorPrefix(prop)) {\n        result = prop in /** @type {?} */ ((_CACHED_BODY)).style;\n        if (!result && _IS_WEBKIT) {\n            var /** @type {?} */ camelProp = 'Webkit' + prop.charAt(0).toUpperCase() + prop.substr(1);\n            result = camelProp in /** @type {?} */ ((_CACHED_BODY)).style;\n        }\n    }\n    return result;\n}\n/**\n * @return {?}\n */\nfunction getBodyNode() {\n    if (typeof document != 'undefined') {\n        return document.body;\n    }\n    return null;\n}\nvar matchesElement = _matches;\nvar containsElement = _contains;\nvar invokeQuery = _query;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@experimental\n */\nvar NoopAnimationDriver = /** @class */ (function () {\n    function NoopAnimationDriver() {\n    }\n    /**\n     * @param {?} prop\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.validateStyleProperty = /**\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) { return validateStyleProperty(prop); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.matchesElement = /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.containsElement = /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    function (elm1, elm2) { return containsElement(elm1, elm2); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.query = /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.computeStyle = /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    function (element, prop, defaultValue) {\n        return defaultValue || '';\n    };\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.animate = /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        return new NoopAnimationPlayer();\n    };\n    return NoopAnimationDriver;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nvar AnimationDriver = /** @class */ (function () {\n    function AnimationDriver() {\n    }\n    AnimationDriver.NOOP = new NoopAnimationDriver();\n    return AnimationDriver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ONE_SECOND = 1000;\nvar SUBSTITUTION_EXPR_START = '{{';\nvar SUBSTITUTION_EXPR_END = '}}';\nvar ENTER_CLASSNAME = 'ng-enter';\nvar LEAVE_CLASSNAME = 'ng-leave';\n\n\nvar NG_TRIGGER_CLASSNAME = 'ng-trigger';\nvar NG_TRIGGER_SELECTOR = '.ng-trigger';\nvar NG_ANIMATING_CLASSNAME = 'ng-animating';\nvar NG_ANIMATING_SELECTOR = '.ng-animating';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction resolveTimingValue(value) {\n    if (typeof value == 'number')\n        return value;\n    var /** @type {?} */ matches = (/** @type {?} */ (value)).match(/^(-?[\\.\\d]+)(m?s)/);\n    if (!matches || matches.length < 2)\n        return 0;\n    return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\n/**\n * @param {?} value\n * @param {?} unit\n * @return {?}\n */\nfunction _convertTimeValueToMS(value, unit) {\n    switch (unit) {\n        case 's':\n            return value * ONE_SECOND;\n        default:\n            // ms or something else\n            return value;\n    }\n}\n/**\n * @param {?} timings\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nfunction resolveTiming(timings, errors, allowNegativeValues) {\n    return timings.hasOwnProperty('duration') ? /** @type {?} */ (timings) :\n        parseTimeExpression(/** @type {?} */ (timings), errors, allowNegativeValues);\n}\n/**\n * @param {?} exp\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nfunction parseTimeExpression(exp, errors, allowNegativeValues) {\n    var /** @type {?} */ regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n    var /** @type {?} */ duration;\n    var /** @type {?} */ delay = 0;\n    var /** @type {?} */ easing = '';\n    if (typeof exp === 'string') {\n        var /** @type {?} */ matches = exp.match(regex);\n        if (matches === null) {\n            errors.push(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n            return { duration: 0, delay: 0, easing: '' };\n        }\n        duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n        var /** @type {?} */ delayMatch = matches[3];\n        if (delayMatch != null) {\n            delay = _convertTimeValueToMS(Math.floor(parseFloat(delayMatch)), matches[4]);\n        }\n        var /** @type {?} */ easingVal = matches[5];\n        if (easingVal) {\n            easing = easingVal;\n        }\n    }\n    else {\n        duration = /** @type {?} */ (exp);\n    }\n    if (!allowNegativeValues) {\n        var /** @type {?} */ containsErrors = false;\n        var /** @type {?} */ startIndex = errors.length;\n        if (duration < 0) {\n            errors.push(\"Duration values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (delay < 0) {\n            errors.push(\"Delay values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (containsErrors) {\n            errors.splice(startIndex, 0, \"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n        }\n    }\n    return { duration: duration, delay: delay, easing: easing };\n}\n/**\n * @param {?} obj\n * @param {?=} destination\n * @return {?}\n */\nfunction copyObj(obj, destination) {\n    if (destination === void 0) { destination = {}; }\n    Object.keys(obj).forEach(function (prop) { destination[prop] = obj[prop]; });\n    return destination;\n}\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction normalizeStyles(styles) {\n    var /** @type {?} */ normalizedStyles = {};\n    if (Array.isArray(styles)) {\n        styles.forEach(function (data) { return copyStyles(data, false, normalizedStyles); });\n    }\n    else {\n        copyStyles(styles, false, normalizedStyles);\n    }\n    return normalizedStyles;\n}\n/**\n * @param {?} styles\n * @param {?} readPrototype\n * @param {?=} destination\n * @return {?}\n */\nfunction copyStyles(styles, readPrototype, destination) {\n    if (destination === void 0) { destination = {}; }\n    if (readPrototype) {\n        // we make use of a for-in loop so that the\n        // prototypically inherited properties are\n        // revealed from the backFill map\n        for (var /** @type {?} */ prop in styles) {\n            destination[prop] = styles[prop];\n        }\n    }\n    else {\n        copyObj(styles, destination);\n    }\n    return destination;\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nfunction setStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = styles[prop];\n        });\n    }\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nfunction eraseStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = '';\n        });\n    }\n}\n/**\n * @param {?} steps\n * @return {?}\n */\nfunction normalizeAnimationEntry(steps) {\n    if (Array.isArray(steps)) {\n        if (steps.length == 1)\n            return steps[0];\n        return sequence(steps);\n    }\n    return /** @type {?} */ (steps);\n}\n/**\n * @param {?} value\n * @param {?} options\n * @param {?} errors\n * @return {?}\n */\nfunction validateStyleParams(value, options, errors) {\n    var /** @type {?} */ params = options.params || {};\n    var /** @type {?} */ matches = extractStyleParams(value);\n    if (matches.length) {\n        matches.forEach(function (varName) {\n            if (!params.hasOwnProperty(varName)) {\n                errors.push(\"Unable to resolve the local animation param \" + varName + \" in the given list of values\");\n            }\n        });\n    }\n}\nvar PARAM_REGEX = new RegExp(SUBSTITUTION_EXPR_START + \"\\\\s*(.+?)\\\\s*\" + SUBSTITUTION_EXPR_END, 'g');\n/**\n * @param {?} value\n * @return {?}\n */\nfunction extractStyleParams(value) {\n    var /** @type {?} */ params = [];\n    if (typeof value === 'string') {\n        var /** @type {?} */ val = value.toString();\n        var /** @type {?} */ match = void 0;\n        while (match = PARAM_REGEX.exec(val)) {\n            params.push(/** @type {?} */ (match[1]));\n        }\n        PARAM_REGEX.lastIndex = 0;\n    }\n    return params;\n}\n/**\n * @param {?} value\n * @param {?} params\n * @param {?} errors\n * @return {?}\n */\nfunction interpolateParams(value, params, errors) {\n    var /** @type {?} */ original = value.toString();\n    var /** @type {?} */ str = original.replace(PARAM_REGEX, function (_, varName) {\n        var /** @type {?} */ localVal = params[varName];\n        // this means that the value was never overidden by the data passed in by the user\n        if (!params.hasOwnProperty(varName)) {\n            errors.push(\"Please provide a value for the animation param \" + varName);\n            localVal = '';\n        }\n        return localVal.toString();\n    });\n    // we do this to assert that numeric values stay as they are\n    return str == original ? value : str;\n}\n/**\n * @param {?} iterator\n * @return {?}\n */\nfunction iteratorToArray(iterator) {\n    var /** @type {?} */ arr = [];\n    var /** @type {?} */ item = iterator.next();\n    while (!item.done) {\n        arr.push(item.value);\n        item = iterator.next();\n    }\n    return arr;\n}\n/**\n * @param {?} source\n * @param {?} destination\n * @return {?}\n */\n\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} duration\n * @param {?} delay\n * @return {?}\n */\nfunction allowPreviousPlayerStylesMerge(duration, delay) {\n    return duration === 0 || delay === 0;\n}\n/**\n * @param {?} visitor\n * @param {?} node\n * @param {?} context\n * @return {?}\n */\nfunction visitDslNode(visitor, node, context) {\n    switch (node.type) {\n        case 7 /* Trigger */:\n            return visitor.visitTrigger(node, context);\n        case 0 /* State */:\n            return visitor.visitState(node, context);\n        case 1 /* Transition */:\n            return visitor.visitTransition(node, context);\n        case 2 /* Sequence */:\n            return visitor.visitSequence(node, context);\n        case 3 /* Group */:\n            return visitor.visitGroup(node, context);\n        case 4 /* Animate */:\n            return visitor.visitAnimate(node, context);\n        case 5 /* Keyframes */:\n            return visitor.visitKeyframes(node, context);\n        case 6 /* Style */:\n            return visitor.visitStyle(node, context);\n        case 8 /* Reference */:\n            return visitor.visitReference(node, context);\n        case 9 /* AnimateChild */:\n            return visitor.visitAnimateChild(node, context);\n        case 10 /* AnimateRef */:\n            return visitor.visitAnimateRef(node, context);\n        case 11 /* Query */:\n            return visitor.visitQuery(node, context);\n        case 12 /* Stagger */:\n            return visitor.visitStagger(node, context);\n        default:\n            throw new Error(\"Unable to resolve animation metadata node #\" + node.type);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANY_STATE = '*';\n/**\n * @param {?} transitionValue\n * @param {?} errors\n * @return {?}\n */\nfunction parseTransitionExpr(transitionValue, errors) {\n    var /** @type {?} */ expressions = [];\n    if (typeof transitionValue == 'string') {\n        (/** @type {?} */ (transitionValue))\n            .split(/\\s*,\\s*/)\n            .forEach(function (str) { return parseInnerTransitionStr(str, expressions, errors); });\n    }\n    else {\n        expressions.push(/** @type {?} */ (transitionValue));\n    }\n    return expressions;\n}\n/**\n * @param {?} eventStr\n * @param {?} expressions\n * @param {?} errors\n * @return {?}\n */\nfunction parseInnerTransitionStr(eventStr, expressions, errors) {\n    if (eventStr[0] == ':') {\n        var /** @type {?} */ result = parseAnimationAlias(eventStr, errors);\n        if (typeof result == 'function') {\n            expressions.push(result);\n            return;\n        }\n        eventStr = /** @type {?} */ (result);\n    }\n    var /** @type {?} */ match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n    if (match == null || match.length < 4) {\n        errors.push(\"The provided transition expression \\\"\" + eventStr + \"\\\" is not supported\");\n        return expressions;\n    }\n    var /** @type {?} */ fromState = match[1];\n    var /** @type {?} */ separator = match[2];\n    var /** @type {?} */ toState = match[3];\n    expressions.push(makeLambdaFromStates(fromState, toState));\n    var /** @type {?} */ isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n    if (separator[0] == '<' && !isFullAnyStateExpr) {\n        expressions.push(makeLambdaFromStates(toState, fromState));\n    }\n}\n/**\n * @param {?} alias\n * @param {?} errors\n * @return {?}\n */\nfunction parseAnimationAlias(alias, errors) {\n    switch (alias) {\n        case ':enter':\n            return 'void => *';\n        case ':leave':\n            return '* => void';\n        case ':increment':\n            return function (fromState, toState) { return parseFloat(toState) > parseFloat(fromState); };\n        case ':decrement':\n            return function (fromState, toState) { return parseFloat(toState) < parseFloat(fromState); };\n        default:\n            errors.push(\"The transition alias value \\\"\" + alias + \"\\\" is not supported\");\n            return '* => *';\n    }\n}\n// DO NOT REFACTOR ... keep the follow set instantiations\n// with the values intact (closure compiler for some reason\n// removes follow-up lines that add the values outside of\n// the constructor...\nvar TRUE_BOOLEAN_VALUES = new Set(['true', '1']);\nvar FALSE_BOOLEAN_VALUES = new Set(['false', '0']);\n/**\n * @param {?} lhs\n * @param {?} rhs\n * @return {?}\n */\nfunction makeLambdaFromStates(lhs, rhs) {\n    var /** @type {?} */ LHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(lhs) || FALSE_BOOLEAN_VALUES.has(lhs);\n    var /** @type {?} */ RHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(rhs) || FALSE_BOOLEAN_VALUES.has(rhs);\n    return function (fromState, toState) {\n        var /** @type {?} */ lhsMatch = lhs == ANY_STATE || lhs == fromState;\n        var /** @type {?} */ rhsMatch = rhs == ANY_STATE || rhs == toState;\n        if (!lhsMatch && LHS_MATCH_BOOLEAN && typeof fromState === 'boolean') {\n            lhsMatch = fromState ? TRUE_BOOLEAN_VALUES.has(lhs) : FALSE_BOOLEAN_VALUES.has(lhs);\n        }\n        if (!rhsMatch && RHS_MATCH_BOOLEAN && typeof toState === 'boolean') {\n            rhsMatch = toState ? TRUE_BOOLEAN_VALUES.has(rhs) : FALSE_BOOLEAN_VALUES.has(rhs);\n        }\n        return lhsMatch && rhsMatch;\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar SELF_TOKEN = ':self';\nvar SELF_TOKEN_REGEX = new RegExp(\"s*\" + SELF_TOKEN + \"s*,?\", 'g');\n/**\n * @param {?} driver\n * @param {?} metadata\n * @param {?} errors\n * @return {?}\n */\nfunction buildAnimationAst(driver, metadata, errors) {\n    return new AnimationAstBuilderVisitor(driver).build(metadata, errors);\n}\nvar ROOT_SELECTOR = '';\nvar AnimationAstBuilderVisitor = /** @class */ (function () {\n    function AnimationAstBuilderVisitor(_driver) {\n        this._driver = _driver;\n    }\n    /**\n     * @param {?} metadata\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.build = /**\n     * @param {?} metadata\n     * @param {?} errors\n     * @return {?}\n     */\n    function (metadata, errors) {\n        var /** @type {?} */ context = new AnimationAstBuilderContext(errors);\n        this._resetContextStyleTimingState(context);\n        return /** @type {?} */ (visitDslNode(this, normalizeAnimationEntry(metadata), context));\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._resetContextStyleTimingState = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        context.currentQuerySelector = ROOT_SELECTOR;\n        context.collectedStyles = {};\n        context.collectedStyles[ROOT_SELECTOR] = {};\n        context.currentTime = 0;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTrigger = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ queryCount = context.queryCount = 0;\n        var /** @type {?} */ depCount = context.depCount = 0;\n        var /** @type {?} */ states = [];\n        var /** @type {?} */ transitions = [];\n        if (metadata.name.charAt(0) == '@') {\n            context.errors.push('animation triggers cannot be prefixed with an `@` sign (e.g. trigger(\\'@foo\\', [...]))');\n        }\n        metadata.definitions.forEach(function (def) {\n            _this._resetContextStyleTimingState(context);\n            if (def.type == 0 /* State */) {\n                var /** @type {?} */ stateDef_1 = /** @type {?} */ (def);\n                var /** @type {?} */ name_1 = stateDef_1.name;\n                name_1.split(/\\s*,\\s*/).forEach(function (n) {\n                    stateDef_1.name = n;\n                    states.push(_this.visitState(stateDef_1, context));\n                });\n                stateDef_1.name = name_1;\n            }\n            else if (def.type == 1 /* Transition */) {\n                var /** @type {?} */ transition = _this.visitTransition(/** @type {?} */ (def), context);\n                queryCount += transition.queryCount;\n                depCount += transition.depCount;\n                transitions.push(transition);\n            }\n            else {\n                context.errors.push('only state() and transition() definitions can sit inside of a trigger()');\n            }\n        });\n        return {\n            type: 7 /* Trigger */,\n            name: metadata.name, states: states, transitions: transitions, queryCount: queryCount, depCount: depCount,\n            options: null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitState = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ styleAst = this.visitStyle(metadata.styles, context);\n        var /** @type {?} */ astParams = (metadata.options && metadata.options.params) || null;\n        if (styleAst.containsDynamicStyles) {\n            var /** @type {?} */ missingSubs_1 = new Set();\n            var /** @type {?} */ params_1 = astParams || {};\n            styleAst.styles.forEach(function (value) {\n                if (isObject(value)) {\n                    var /** @type {?} */ stylesObj_1 = /** @type {?} */ (value);\n                    Object.keys(stylesObj_1).forEach(function (prop) {\n                        extractStyleParams(stylesObj_1[prop]).forEach(function (sub) {\n                            if (!params_1.hasOwnProperty(sub)) {\n                                missingSubs_1.add(sub);\n                            }\n                        });\n                    });\n                }\n            });\n            if (missingSubs_1.size) {\n                var /** @type {?} */ missingSubsArr = iteratorToArray(missingSubs_1.values());\n                context.errors.push(\"state(\\\"\" + metadata.name + \"\\\", ...) must define default values for all the following style substitutions: \" + missingSubsArr.join(', '));\n            }\n        }\n        return {\n            type: 0 /* State */,\n            name: metadata.name,\n            style: styleAst,\n            options: astParams ? { params: astParams } : null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTransition = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        context.queryCount = 0;\n        context.depCount = 0;\n        var /** @type {?} */ animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        var /** @type {?} */ matchers = parseTransitionExpr(metadata.expr, context.errors);\n        return {\n            type: 1 /* Transition */,\n            matchers: matchers,\n            animation: animation,\n            queryCount: context.queryCount,\n            depCount: context.depCount,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitSequence = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        return {\n            type: 2 /* Sequence */,\n            steps: metadata.steps.map(function (s) { return visitDslNode(_this, s, context); }),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitGroup = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ furthestTime = 0;\n        var /** @type {?} */ steps = metadata.steps.map(function (step) {\n            context.currentTime = currentTime;\n            var /** @type {?} */ innerAst = visitDslNode(_this, step, context);\n            furthestTime = Math.max(furthestTime, context.currentTime);\n            return innerAst;\n        });\n        context.currentTime = furthestTime;\n        return {\n            type: 3 /* Group */,\n            steps: steps,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimate = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ timingAst = constructTimingAst(metadata.timings, context.errors);\n        context.currentAnimateTimings = timingAst;\n        var /** @type {?} */ styleAst;\n        var /** @type {?} */ styleMetadata = metadata.styles ? metadata.styles : style({});\n        if (styleMetadata.type == 5 /* Keyframes */) {\n            styleAst = this.visitKeyframes(/** @type {?} */ (styleMetadata), context);\n        }\n        else {\n            var /** @type {?} */ styleMetadata_1 = /** @type {?} */ (metadata.styles);\n            var /** @type {?} */ isEmpty = false;\n            if (!styleMetadata_1) {\n                isEmpty = true;\n                var /** @type {?} */ newStyleData = {};\n                if (timingAst.easing) {\n                    newStyleData['easing'] = timingAst.easing;\n                }\n                styleMetadata_1 = style(newStyleData);\n            }\n            context.currentTime += timingAst.duration + timingAst.delay;\n            var /** @type {?} */ _styleAst = this.visitStyle(styleMetadata_1, context);\n            _styleAst.isEmptyStep = isEmpty;\n            styleAst = _styleAst;\n        }\n        context.currentAnimateTimings = null;\n        return {\n            type: 4 /* Animate */,\n            timings: timingAst,\n            style: styleAst,\n            options: null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStyle = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ ast = this._makeStyleAst(metadata, context);\n        this._validateStyleAst(ast, context);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._makeStyleAst = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ styles = [];\n        if (Array.isArray(metadata.styles)) {\n            (/** @type {?} */ (metadata.styles)).forEach(function (styleTuple) {\n                if (typeof styleTuple == 'string') {\n                    if (styleTuple == AUTO_STYLE) {\n                        styles.push(/** @type {?} */ (styleTuple));\n                    }\n                    else {\n                        context.errors.push(\"The provided style string value \" + styleTuple + \" is not allowed.\");\n                    }\n                }\n                else {\n                    styles.push(/** @type {?} */ (styleTuple));\n                }\n            });\n        }\n        else {\n            styles.push(metadata.styles);\n        }\n        var /** @type {?} */ containsDynamicStyles = false;\n        var /** @type {?} */ collectedEasing = null;\n        styles.forEach(function (styleData) {\n            if (isObject(styleData)) {\n                var /** @type {?} */ styleMap = /** @type {?} */ (styleData);\n                var /** @type {?} */ easing = styleMap['easing'];\n                if (easing) {\n                    collectedEasing = /** @type {?} */ (easing);\n                    delete styleMap['easing'];\n                }\n                if (!containsDynamicStyles) {\n                    for (var /** @type {?} */ prop in styleMap) {\n                        var /** @type {?} */ value = styleMap[prop];\n                        if (value.toString().indexOf(SUBSTITUTION_EXPR_START) >= 0) {\n                            containsDynamicStyles = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            type: 6 /* Style */,\n            styles: styles,\n            easing: collectedEasing,\n            offset: metadata.offset, containsDynamicStyles: containsDynamicStyles,\n            options: null\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._validateStyleAst = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ timings = context.currentAnimateTimings;\n        var /** @type {?} */ endTime = context.currentTime;\n        var /** @type {?} */ startTime = context.currentTime;\n        if (timings && startTime > 0) {\n            startTime -= timings.duration + timings.delay;\n        }\n        ast.styles.forEach(function (tuple) {\n            if (typeof tuple == 'string')\n                return;\n            Object.keys(tuple).forEach(function (prop) {\n                if (!_this._driver.validateStyleProperty(prop)) {\n                    context.errors.push(\"The provided animation property \\\"\" + prop + \"\\\" is not a supported CSS property for animations\");\n                    return;\n                }\n                var /** @type {?} */ collectedStyles = context.collectedStyles[/** @type {?} */ ((context.currentQuerySelector))];\n                var /** @type {?} */ collectedEntry = collectedStyles[prop];\n                var /** @type {?} */ updateCollectedStyle = true;\n                if (collectedEntry) {\n                    if (startTime != endTime && startTime >= collectedEntry.startTime &&\n                        endTime <= collectedEntry.endTime) {\n                        context.errors.push(\"The CSS property \\\"\" + prop + \"\\\" that exists between the times of \\\"\" + collectedEntry.startTime + \"ms\\\" and \\\"\" + collectedEntry.endTime + \"ms\\\" is also being animated in a parallel animation between the times of \\\"\" + startTime + \"ms\\\" and \\\"\" + endTime + \"ms\\\"\");\n                        updateCollectedStyle = false;\n                    }\n                    // we always choose the smaller start time value since we\n                    // want to have a record of the entire animation window where\n                    // the style property is being animated in between\n                    startTime = collectedEntry.startTime;\n                }\n                if (updateCollectedStyle) {\n                    collectedStyles[prop] = { startTime: startTime, endTime: endTime };\n                }\n                if (context.options) {\n                    validateStyleParams(tuple[prop], context.options, context.errors);\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitKeyframes = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ ast = { type: 5 /* Keyframes */, styles: [], options: null };\n        if (!context.currentAnimateTimings) {\n            context.errors.push(\"keyframes() must be placed inside of a call to animate()\");\n            return ast;\n        }\n        var /** @type {?} */ MAX_KEYFRAME_OFFSET = 1;\n        var /** @type {?} */ totalKeyframesWithOffsets = 0;\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offsetsOutOfOrder = false;\n        var /** @type {?} */ keyframesOutOfRange = false;\n        var /** @type {?} */ previousOffset = 0;\n        var /** @type {?} */ keyframes = metadata.steps.map(function (styles) {\n            var /** @type {?} */ style$$1 = _this._makeStyleAst(styles, context);\n            var /** @type {?} */ offsetVal = style$$1.offset != null ? style$$1.offset : consumeOffset(style$$1.styles);\n            var /** @type {?} */ offset = 0;\n            if (offsetVal != null) {\n                totalKeyframesWithOffsets++;\n                offset = style$$1.offset = offsetVal;\n            }\n            keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n            offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n            previousOffset = offset;\n            offsets.push(offset);\n            return style$$1;\n        });\n        if (keyframesOutOfRange) {\n            context.errors.push(\"Please ensure that all keyframe offsets are between 0 and 1\");\n        }\n        if (offsetsOutOfOrder) {\n            context.errors.push(\"Please ensure that all keyframe offsets are in order\");\n        }\n        var /** @type {?} */ length = metadata.steps.length;\n        var /** @type {?} */ generatedOffset = 0;\n        if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n            context.errors.push(\"Not all style() steps within the declared keyframes() contain offsets\");\n        }\n        else if (totalKeyframesWithOffsets == 0) {\n            generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n        }\n        var /** @type {?} */ limit = length - 1;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ currentAnimateTimings = /** @type {?} */ ((context.currentAnimateTimings));\n        var /** @type {?} */ animateDuration = currentAnimateTimings.duration;\n        keyframes.forEach(function (kf, i) {\n            var /** @type {?} */ offset = generatedOffset > 0 ? (i == limit ? 1 : (generatedOffset * i)) : offsets[i];\n            var /** @type {?} */ durationUpToThisFrame = offset * animateDuration;\n            context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n            currentAnimateTimings.duration = durationUpToThisFrame;\n            _this._validateStyleAst(kf, context);\n            kf.offset = offset;\n            ast.styles.push(kf);\n        });\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitReference = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        return {\n            type: 8 /* Reference */,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateChild = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        context.depCount++;\n        return {\n            type: 9 /* AnimateChild */,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateRef = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        return {\n            type: 10 /* AnimateRef */,\n            animation: this.visitReference(metadata.animation, context),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitQuery = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ parentSelector = /** @type {?} */ ((context.currentQuerySelector));\n        var /** @type {?} */ options = /** @type {?} */ ((metadata.options || {}));\n        context.queryCount++;\n        context.currentQuery = metadata;\n        var _a = normalizeSelector(metadata.selector), selector = _a[0], includeSelf = _a[1];\n        context.currentQuerySelector =\n            parentSelector.length ? (parentSelector + ' ' + selector) : selector;\n        getOrSetAsInMap(context.collectedStyles, context.currentQuerySelector, {});\n        var /** @type {?} */ animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        context.currentQuery = null;\n        context.currentQuerySelector = parentSelector;\n        return {\n            type: 11 /* Query */,\n            selector: selector,\n            limit: options.limit || 0,\n            optional: !!options.optional, includeSelf: includeSelf, animation: animation,\n            originalSelector: metadata.selector,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStagger = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        if (!context.currentQuery) {\n            context.errors.push(\"stagger() can only be used inside of query()\");\n        }\n        var /** @type {?} */ timings = metadata.timings === 'full' ?\n            { duration: 0, delay: 0, easing: 'full' } :\n            resolveTiming(metadata.timings, context.errors, true);\n        return {\n            type: 12 /* Stagger */,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context), timings: timings,\n            options: null\n        };\n    };\n    return AnimationAstBuilderVisitor;\n}());\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction normalizeSelector(selector) {\n    var /** @type {?} */ hasAmpersand = selector.split(/\\s*,\\s*/).find(function (token) { return token == SELF_TOKEN; }) ? true : false;\n    if (hasAmpersand) {\n        selector = selector.replace(SELF_TOKEN_REGEX, '');\n    }\n    // the :enter and :leave selectors are filled in at runtime during timeline building\n    selector = selector.replace(/@\\*/g, NG_TRIGGER_SELECTOR)\n        .replace(/@\\w+/g, function (match) { return NG_TRIGGER_SELECTOR + '-' + match.substr(1); })\n        .replace(/:animating/g, NG_ANIMATING_SELECTOR);\n    return [selector, hasAmpersand];\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction normalizeParams(obj) {\n    return obj ? copyObj(obj) : null;\n}\nvar AnimationAstBuilderContext = /** @class */ (function () {\n    function AnimationAstBuilderContext(errors) {\n        this.errors = errors;\n        this.queryCount = 0;\n        this.depCount = 0;\n        this.currentTransition = null;\n        this.currentQuery = null;\n        this.currentQuerySelector = null;\n        this.currentAnimateTimings = null;\n        this.currentTime = 0;\n        this.collectedStyles = {};\n        this.options = null;\n    }\n    return AnimationAstBuilderContext;\n}());\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction consumeOffset(styles) {\n    if (typeof styles == 'string')\n        return null;\n    var /** @type {?} */ offset = null;\n    if (Array.isArray(styles)) {\n        styles.forEach(function (styleTuple) {\n            if (isObject(styleTuple) && styleTuple.hasOwnProperty('offset')) {\n                var /** @type {?} */ obj = /** @type {?} */ (styleTuple);\n                offset = parseFloat(/** @type {?} */ (obj['offset']));\n                delete obj['offset'];\n            }\n        });\n    }\n    else if (isObject(styles) && styles.hasOwnProperty('offset')) {\n        var /** @type {?} */ obj = /** @type {?} */ (styles);\n        offset = parseFloat(/** @type {?} */ (obj['offset']));\n        delete obj['offset'];\n    }\n    return offset;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isObject(value) {\n    return !Array.isArray(value) && typeof value == 'object';\n}\n/**\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nfunction constructTimingAst(value, errors) {\n    var /** @type {?} */ timings = null;\n    if (value.hasOwnProperty('duration')) {\n        timings = /** @type {?} */ (value);\n    }\n    else if (typeof value == 'number') {\n        var /** @type {?} */ duration = resolveTiming(/** @type {?} */ (value), errors).duration;\n        return makeTimingAst(/** @type {?} */ (duration), 0, '');\n    }\n    var /** @type {?} */ strValue = /** @type {?} */ (value);\n    var /** @type {?} */ isDynamic = strValue.split(/\\s+/).some(function (v) { return v.charAt(0) == '{' && v.charAt(1) == '{'; });\n    if (isDynamic) {\n        var /** @type {?} */ ast = /** @type {?} */ (makeTimingAst(0, 0, ''));\n        ast.dynamic = true;\n        ast.strValue = strValue;\n        return /** @type {?} */ (ast);\n    }\n    timings = timings || resolveTiming(strValue, errors);\n    return makeTimingAst(timings.duration, timings.delay, timings.easing);\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction normalizeAnimationOptions(options) {\n    if (options) {\n        options = copyObj(options);\n        if (options['params']) {\n            options['params'] = /** @type {?} */ ((normalizeParams(options['params'])));\n        }\n    }\n    else {\n        options = {};\n    }\n    return options;\n}\n/**\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @return {?}\n */\nfunction makeTimingAst(duration, delay, easing) {\n    return { duration: duration, delay: delay, easing: easing };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?} duration\n * @param {?} delay\n * @param {?=} easing\n * @param {?=} subTimeline\n * @return {?}\n */\nfunction createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay, easing, subTimeline) {\n    if (easing === void 0) { easing = null; }\n    if (subTimeline === void 0) { subTimeline = false; }\n    return {\n        type: 1 /* TimelineAnimation */,\n        element: element,\n        keyframes: keyframes,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps,\n        duration: duration,\n        delay: delay,\n        totalTime: duration + delay, easing: easing, subTimeline: subTimeline\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ElementInstructionMap = /** @class */ (function () {\n    function ElementInstructionMap() {\n        this._map = new Map();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.consume = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ instructions = this._map.get(element);\n        if (instructions) {\n            this._map.delete(element);\n        }\n        else {\n            instructions = [];\n        }\n        return instructions;\n    };\n    /**\n     * @param {?} element\n     * @param {?} instructions\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.append = /**\n     * @param {?} element\n     * @param {?} instructions\n     * @return {?}\n     */\n    function (element, instructions) {\n        var /** @type {?} */ existingInstructions = this._map.get(element);\n        if (!existingInstructions) {\n            this._map.set(element, existingInstructions = []);\n        }\n        existingInstructions.push.apply(existingInstructions, instructions);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.has = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { return this._map.has(element); };\n    /**\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this._map.clear(); };\n    return ElementInstructionMap;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ONE_FRAME_IN_MILLISECONDS = 1;\nvar ENTER_TOKEN = ':enter';\nvar ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nvar LEAVE_TOKEN = ':leave';\nvar LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\n/**\n * @param {?} driver\n * @param {?} rootElement\n * @param {?} ast\n * @param {?} enterClassName\n * @param {?} leaveClassName\n * @param {?=} startingStyles\n * @param {?=} finalStyles\n * @param {?=} options\n * @param {?=} subInstructions\n * @param {?=} errors\n * @return {?}\n */\nfunction buildAnimationTimelines(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors) {\n    if (startingStyles === void 0) { startingStyles = {}; }\n    if (finalStyles === void 0) { finalStyles = {}; }\n    if (errors === void 0) { errors = []; }\n    return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors);\n}\nvar AnimationTimelineBuilderVisitor = /** @class */ (function () {\n    function AnimationTimelineBuilderVisitor() {\n    }\n    /**\n     * @param {?} driver\n     * @param {?} rootElement\n     * @param {?} ast\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?} startingStyles\n     * @param {?} finalStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @param {?=} errors\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.buildKeyframes = /**\n     * @param {?} driver\n     * @param {?} rootElement\n     * @param {?} ast\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?} startingStyles\n     * @param {?} finalStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @param {?=} errors\n     * @return {?}\n     */\n    function (driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors) {\n        if (errors === void 0) { errors = []; }\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ context = new AnimationTimelineContext(driver, rootElement, subInstructions, enterClassName, leaveClassName, errors, []);\n        context.options = options;\n        context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n        visitDslNode(this, ast, context);\n        // this checks to see if an actual animation happened\n        var /** @type {?} */ timelines = context.timelines.filter(function (timeline) { return timeline.containsAnimation(); });\n        if (timelines.length && Object.keys(finalStyles).length) {\n            var /** @type {?} */ tl = timelines[timelines.length - 1];\n            if (!tl.allowOnlyTimelineStyles()) {\n                tl.setStyles([finalStyles], null, context.errors, options);\n            }\n        }\n        return timelines.length ? timelines.map(function (timeline) { return timeline.buildKeyframes(); }) :\n            [createTimelineInstruction(rootElement, [], [], [], 0, 0, '', false)];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTrigger = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitState = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTransition = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateChild = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ elementInstructions = context.subInstructions.consume(context.element);\n        if (elementInstructions) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n            var /** @type {?} */ endTime = this._visitSubInstructions(elementInstructions, innerContext, /** @type {?} */ (innerContext.options));\n            if (startTime != endTime) {\n                // we do this on the upper context because we created a sub context for\n                // the sub child animations\n                context.transformIntoNewTimeline(endTime);\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateRef = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n        innerContext.transformIntoNewTimeline();\n        this.visitReference(ast.animation, innerContext);\n        context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} instructions\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype._visitSubInstructions = /**\n     * @param {?} instructions\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    function (instructions, context, options) {\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ furthestTime = startTime;\n        // this is a special-case for when a user wants to skip a sub\n        // animation from being fired entirely.\n        var /** @type {?} */ duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n        var /** @type {?} */ delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n        if (duration !== 0) {\n            instructions.forEach(function (instruction) {\n                var /** @type {?} */ instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay);\n                furthestTime =\n                    Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n            });\n        }\n        return furthestTime;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        context.updateOptions(ast.options, true);\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitSequence = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ subContextCount = context.subContextCount;\n        var /** @type {?} */ ctx = context;\n        var /** @type {?} */ options = ast.options;\n        if (options && (options.params || options.delay)) {\n            ctx = context.createSubContext(options);\n            ctx.transformIntoNewTimeline();\n            if (options.delay != null) {\n                if (ctx.previousNode.type == 6 /* Style */) {\n                    ctx.currentTimeline.snapshotCurrentStyles();\n                    ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n                }\n                var /** @type {?} */ delay = resolveTimingValue(options.delay);\n                ctx.delayNextStep(delay);\n            }\n        }\n        if (ast.steps.length) {\n            ast.steps.forEach(function (s) { return visitDslNode(_this, s, ctx); });\n            // this is here just incase the inner steps only contain or end with a style() call\n            ctx.currentTimeline.applyStylesToKeyframe();\n            // this means that some animation function within the sequence\n            // ended up creating a sub timeline (which means the current\n            // timeline cannot overlap with the contents of the sequence)\n            if (ctx.subContextCount > subContextCount) {\n                ctx.transformIntoNewTimeline();\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitGroup = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ innerTimelines = [];\n        var /** @type {?} */ furthestTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n        ast.steps.forEach(function (s) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            visitDslNode(_this, s, innerContext);\n            furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n            innerTimelines.push(innerContext.currentTimeline);\n        });\n        // this operation is run after the AST loop because otherwise\n        // if the parent timeline's collected styles were updated then\n        // it would pass in invalid data into the new-to-be forked items\n        innerTimelines.forEach(function (timeline) { return context.currentTimeline.mergeTimelineCollectedStyles(timeline); });\n        context.transformIntoNewTimeline(furthestTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype._visitTiming = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if ((/** @type {?} */ (ast)).dynamic) {\n            var /** @type {?} */ strValue = (/** @type {?} */ (ast)).strValue;\n            var /** @type {?} */ timingValue = context.params ? interpolateParams(strValue, context.params, context.errors) : strValue;\n            return resolveTiming(timingValue, context.errors);\n        }\n        else {\n            return { duration: ast.duration, delay: ast.delay, easing: ast.easing };\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ timings = context.currentAnimateTimings = this._visitTiming(ast.timings, context);\n        var /** @type {?} */ timeline = context.currentTimeline;\n        if (timings.delay) {\n            context.incrementTime(timings.delay);\n            timeline.snapshotCurrentStyles();\n        }\n        var /** @type {?} */ style$$1 = ast.style;\n        if (style$$1.type == 5 /* Keyframes */) {\n            this.visitKeyframes(style$$1, context);\n        }\n        else {\n            context.incrementTime(timings.duration);\n            this.visitStyle(/** @type {?} */ (style$$1), context);\n            timeline.applyStylesToKeyframe();\n        }\n        context.currentAnimateTimings = null;\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStyle = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ timeline = context.currentTimeline;\n        var /** @type {?} */ timings = /** @type {?} */ ((context.currentAnimateTimings));\n        // this is a special case for when a style() call\n        // directly follows  an animate() call (but not inside of an animate() call)\n        if (!timings && timeline.getCurrentStyleProperties().length) {\n            timeline.forwardFrame();\n        }\n        var /** @type {?} */ easing = (timings && timings.easing) || ast.easing;\n        if (ast.isEmptyStep) {\n            timeline.applyEmptyStep(easing);\n        }\n        else {\n            timeline.setStyles(ast.styles, easing, context.errors, context.options);\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitKeyframes = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ currentAnimateTimings = /** @type {?} */ ((context.currentAnimateTimings));\n        var /** @type {?} */ startTime = (/** @type {?} */ ((context.currentTimeline))).duration;\n        var /** @type {?} */ duration = currentAnimateTimings.duration;\n        var /** @type {?} */ innerContext = context.createSubContext();\n        var /** @type {?} */ innerTimeline = innerContext.currentTimeline;\n        innerTimeline.easing = currentAnimateTimings.easing;\n        ast.styles.forEach(function (step) {\n            var /** @type {?} */ offset = step.offset || 0;\n            innerTimeline.forwardTime(offset * duration);\n            innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n            innerTimeline.applyStylesToKeyframe();\n        });\n        // this will ensure that the parent timeline gets all the styles from\n        // the child even if the new timeline below is not used\n        context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n        // we do this because the window between this timeline and the sub timeline\n        // should ensure that the styles within are exactly the same as they were before\n        context.transformIntoNewTimeline(startTime + duration);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitQuery = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        // in the event that the first step before this is a style step we need\n        // to ensure the styles are applied before the children are animated\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ options = /** @type {?} */ ((ast.options || {}));\n        var /** @type {?} */ delay = options.delay ? resolveTimingValue(options.delay) : 0;\n        if (delay && (context.previousNode.type === 6 /* Style */ ||\n            (startTime == 0 && context.currentTimeline.getCurrentStyleProperties().length))) {\n            context.currentTimeline.snapshotCurrentStyles();\n            context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        }\n        var /** @type {?} */ furthestTime = startTime;\n        var /** @type {?} */ elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);\n        context.currentQueryTotal = elms.length;\n        var /** @type {?} */ sameElementTimeline = null;\n        elms.forEach(function (element, i) {\n            context.currentQueryIndex = i;\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options, element);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            if (element === context.element) {\n                sameElementTimeline = innerContext.currentTimeline;\n            }\n            visitDslNode(_this, ast.animation, innerContext);\n            // this is here just incase the inner steps only contain or end\n            // with a style() call (which is here to signal that this is a preparatory\n            // call to style an element before it is animated again)\n            innerContext.currentTimeline.applyStylesToKeyframe();\n            var /** @type {?} */ endTime = innerContext.currentTimeline.currentTime;\n            furthestTime = Math.max(furthestTime, endTime);\n        });\n        context.currentQueryIndex = 0;\n        context.currentQueryTotal = 0;\n        context.transformIntoNewTimeline(furthestTime);\n        if (sameElementTimeline) {\n            context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n            context.currentTimeline.snapshotCurrentStyles();\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStagger = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ parentContext = /** @type {?} */ ((context.parentContext));\n        var /** @type {?} */ tl = context.currentTimeline;\n        var /** @type {?} */ timings = ast.timings;\n        var /** @type {?} */ duration = Math.abs(timings.duration);\n        var /** @type {?} */ maxTime = duration * (context.currentQueryTotal - 1);\n        var /** @type {?} */ delay = duration * context.currentQueryIndex;\n        var /** @type {?} */ staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n        switch (staggerTransformer) {\n            case 'reverse':\n                delay = maxTime - delay;\n                break;\n            case 'full':\n                delay = parentContext.currentStaggerTime;\n                break;\n        }\n        var /** @type {?} */ timeline = context.currentTimeline;\n        if (delay) {\n            timeline.delayNextStep(delay);\n        }\n        var /** @type {?} */ startingTime = timeline.currentTime;\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n        // time = duration + delay\n        // the reason why this computation is so complex is because\n        // the inner timeline may either have a delay value or a stretched\n        // keyframe depending on if a subtimeline is not used or is used.\n        parentContext.currentStaggerTime =\n            (tl.currentTime - startingTime) + (tl.startTime - parentContext.currentTimeline.startTime);\n    };\n    return AnimationTimelineBuilderVisitor;\n}());\nvar DEFAULT_NOOP_PREVIOUS_NODE = /** @type {?} */ ({});\nvar AnimationTimelineContext = /** @class */ (function () {\n    function AnimationTimelineContext(_driver, element, subInstructions, _enterClassName, _leaveClassName, errors, timelines, initialTimeline) {\n        this._driver = _driver;\n        this.element = element;\n        this.subInstructions = subInstructions;\n        this._enterClassName = _enterClassName;\n        this._leaveClassName = _leaveClassName;\n        this.errors = errors;\n        this.timelines = timelines;\n        this.parentContext = null;\n        this.currentAnimateTimings = null;\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.subContextCount = 0;\n        this.options = {};\n        this.currentQueryIndex = 0;\n        this.currentQueryTotal = 0;\n        this.currentStaggerTime = 0;\n        this.currentTimeline = initialTimeline || new TimelineBuilder(this._driver, element, 0);\n        timelines.push(this.currentTimeline);\n    }\n    Object.defineProperty(AnimationTimelineContext.prototype, \"params\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.options.params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @param {?=} skipIfExists\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.updateOptions = /**\n     * @param {?} options\n     * @param {?=} skipIfExists\n     * @return {?}\n     */\n    function (options, skipIfExists) {\n        var _this = this;\n        if (!options)\n            return;\n        var /** @type {?} */ newOptions = /** @type {?} */ (options);\n        var /** @type {?} */ optionsToUpdate = this.options;\n        // NOTE: this will get patched up when other animation methods support duration overrides\n        if (newOptions.duration != null) {\n            (/** @type {?} */ (optionsToUpdate)).duration = resolveTimingValue(newOptions.duration);\n        }\n        if (newOptions.delay != null) {\n            optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n        }\n        var /** @type {?} */ newParams = newOptions.params;\n        if (newParams) {\n            var /** @type {?} */ paramsToUpdate_1 = /** @type {?} */ ((optionsToUpdate.params));\n            if (!paramsToUpdate_1) {\n                paramsToUpdate_1 = this.options.params = {};\n            }\n            Object.keys(newParams).forEach(function (name) {\n                if (!skipIfExists || !paramsToUpdate_1.hasOwnProperty(name)) {\n                    paramsToUpdate_1[name] = interpolateParams(newParams[name], paramsToUpdate_1, _this.errors);\n                }\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype._copyOptions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ options = {};\n        if (this.options) {\n            var /** @type {?} */ oldParams_1 = this.options.params;\n            if (oldParams_1) {\n                var /** @type {?} */ params_1 = options['params'] = {};\n                Object.keys(oldParams_1).forEach(function (name) { params_1[name] = oldParams_1[name]; });\n            }\n        }\n        return options;\n    };\n    /**\n     * @param {?=} options\n     * @param {?=} element\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.createSubContext = /**\n     * @param {?=} options\n     * @param {?=} element\n     * @param {?=} newTime\n     * @return {?}\n     */\n    function (options, element, newTime) {\n        if (options === void 0) { options = null; }\n        var /** @type {?} */ target = element || this.element;\n        var /** @type {?} */ context = new AnimationTimelineContext(this._driver, target, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n        context.previousNode = this.previousNode;\n        context.currentAnimateTimings = this.currentAnimateTimings;\n        context.options = this._copyOptions();\n        context.updateOptions(options);\n        context.currentQueryIndex = this.currentQueryIndex;\n        context.currentQueryTotal = this.currentQueryTotal;\n        context.parentContext = this;\n        this.subContextCount++;\n        return context;\n    };\n    /**\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.transformIntoNewTimeline = /**\n     * @param {?=} newTime\n     * @return {?}\n     */\n    function (newTime) {\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n        this.timelines.push(this.currentTimeline);\n        return this.currentTimeline;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} duration\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.appendInstructionToTimeline = /**\n     * @param {?} instruction\n     * @param {?} duration\n     * @param {?} delay\n     * @return {?}\n     */\n    function (instruction, duration, delay) {\n        var /** @type {?} */ updatedTimings = {\n            duration: duration != null ? duration : instruction.duration,\n            delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n            easing: ''\n        };\n        var /** @type {?} */ builder = new SubTimelineBuilder(this._driver, instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n        this.timelines.push(builder);\n        return updatedTimings;\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.incrementTime = /**\n     * @param {?} time\n     * @return {?}\n     */\n    function (time) {\n        this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n    };\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.delayNextStep = /**\n     * @param {?} delay\n     * @return {?}\n     */\n    function (delay) {\n        // negative delays are not yet supported\n        if (delay > 0) {\n            this.currentTimeline.delayNextStep(delay);\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} originalSelector\n     * @param {?} limit\n     * @param {?} includeSelf\n     * @param {?} optional\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.invokeQuery = /**\n     * @param {?} selector\n     * @param {?} originalSelector\n     * @param {?} limit\n     * @param {?} includeSelf\n     * @param {?} optional\n     * @param {?} errors\n     * @return {?}\n     */\n    function (selector, originalSelector, limit, includeSelf, optional, errors) {\n        var /** @type {?} */ results = [];\n        if (includeSelf) {\n            results.push(this.element);\n        }\n        if (selector.length > 0) {\n            // if :self is only used then the selector is empty\n            selector = selector.replace(ENTER_TOKEN_REGEX, '.' + this._enterClassName);\n            selector = selector.replace(LEAVE_TOKEN_REGEX, '.' + this._leaveClassName);\n            var /** @type {?} */ multi = limit != 1;\n            var /** @type {?} */ elements = this._driver.query(this.element, selector, multi);\n            if (limit !== 0) {\n                elements = limit < 0 ? elements.slice(elements.length + limit, elements.length) :\n                    elements.slice(0, limit);\n            }\n            results.push.apply(results, elements);\n        }\n        if (!optional && results.length == 0) {\n            errors.push(\"`query(\\\"\" + originalSelector + \"\\\")` returned zero elements. (Use `query(\\\"\" + originalSelector + \"\\\", { optional: true })` if you wish to allow this.)\");\n        }\n        return results;\n    };\n    return AnimationTimelineContext;\n}());\nvar TimelineBuilder = /** @class */ (function () {\n    function TimelineBuilder(_driver, element, startTime, _elementTimelineStylesLookup) {\n        this._driver = _driver;\n        this.element = element;\n        this.startTime = startTime;\n        this._elementTimelineStylesLookup = _elementTimelineStylesLookup;\n        this.duration = 0;\n        this._previousKeyframe = {};\n        this._currentKeyframe = {};\n        this._keyframes = new Map();\n        this._styleSummary = {};\n        this._pendingStyles = {};\n        this._backFill = {};\n        this._currentEmptyStepKeyframe = null;\n        if (!this._elementTimelineStylesLookup) {\n            this._elementTimelineStylesLookup = new Map();\n        }\n        this._localTimelineStyles = Object.create(this._backFill, {});\n        this._globalTimelineStyles = /** @type {?} */ ((this._elementTimelineStylesLookup.get(element)));\n        if (!this._globalTimelineStyles) {\n            this._globalTimelineStyles = this._localTimelineStyles;\n            this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n        }\n        this._loadKeyframe();\n    }\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.containsAnimation = /**\n     * @return {?}\n     */\n    function () {\n        switch (this._keyframes.size) {\n            case 0:\n                return false;\n            case 1:\n                return this.getCurrentStyleProperties().length > 0;\n            default:\n                return true;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getCurrentStyleProperties = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._currentKeyframe); };\n    Object.defineProperty(TimelineBuilder.prototype, \"currentTime\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.startTime + this.duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    TimelineBuilder.prototype.delayNextStep = /**\n     * @param {?} delay\n     * @return {?}\n     */\n    function (delay) {\n        // in the event that a style() step is placed right before a stagger()\n        // and that style() step is the very first style() value in the animation\n        // then we need to make a copy of the keyframe [0, copy, 1] so that the delay\n        // properly applies the style() values to work with the stagger...\n        var /** @type {?} */ hasPreStyleStep = this._keyframes.size == 1 && Object.keys(this._pendingStyles).length;\n        if (this.duration || hasPreStyleStep) {\n            this.forwardTime(this.currentTime + delay);\n            if (hasPreStyleStep) {\n                this.snapshotCurrentStyles();\n            }\n        }\n        else {\n            this.startTime += delay;\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?=} currentTime\n     * @return {?}\n     */\n    TimelineBuilder.prototype.fork = /**\n     * @param {?} element\n     * @param {?=} currentTime\n     * @return {?}\n     */\n    function (element, currentTime) {\n        this.applyStylesToKeyframe();\n        return new TimelineBuilder(this._driver, element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype._loadKeyframe = /**\n     * @return {?}\n     */\n    function () {\n        if (this._currentKeyframe) {\n            this._previousKeyframe = this._currentKeyframe;\n        }\n        this._currentKeyframe = /** @type {?} */ ((this._keyframes.get(this.duration)));\n        if (!this._currentKeyframe) {\n            this._currentKeyframe = Object.create(this._backFill, {});\n            this._keyframes.set(this.duration, this._currentKeyframe);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardFrame = /**\n     * @return {?}\n     */\n    function () {\n        this.duration += ONE_FRAME_IN_MILLISECONDS;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardTime = /**\n     * @param {?} time\n     * @return {?}\n     */\n    function (time) {\n        this.applyStylesToKeyframe();\n        this.duration = time;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    TimelineBuilder.prototype._updateStyle = /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    function (prop, value) {\n        this._localTimelineStyles[prop] = value;\n        this._globalTimelineStyles[prop] = value;\n        this._styleSummary[prop] = { time: this.currentTime, value: value };\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.allowOnlyTimelineStyles = /**\n     * @return {?}\n     */\n    function () { return this._currentEmptyStepKeyframe !== this._currentKeyframe; };\n    /**\n     * @param {?} easing\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyEmptyStep = /**\n     * @param {?} easing\n     * @return {?}\n     */\n    function (easing) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        // special case for animate(duration):\n        // all missing styles are filled with a `*` value then\n        // if any destination styles are filled in later on the same\n        // keyframe then they will override the overridden styles\n        // We use `_globalTimelineStyles` here because there may be\n        // styles in previous keyframes that are not present in this timeline\n        Object.keys(this._globalTimelineStyles).forEach(function (prop) {\n            _this._backFill[prop] = _this._globalTimelineStyles[prop] || AUTO_STYLE;\n            _this._currentKeyframe[prop] = AUTO_STYLE;\n        });\n        this._currentEmptyStepKeyframe = this._currentKeyframe;\n    };\n    /**\n     * @param {?} input\n     * @param {?} easing\n     * @param {?} errors\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineBuilder.prototype.setStyles = /**\n     * @param {?} input\n     * @param {?} easing\n     * @param {?} errors\n     * @param {?=} options\n     * @return {?}\n     */\n    function (input, easing, errors, options) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        var /** @type {?} */ params = (options && options.params) || {};\n        var /** @type {?} */ styles = flattenStyles(input, this._globalTimelineStyles);\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ val = interpolateParams(styles[prop], params, errors);\n            _this._pendingStyles[prop] = val;\n            if (!_this._localTimelineStyles.hasOwnProperty(prop)) {\n                _this._backFill[prop] = _this._globalTimelineStyles.hasOwnProperty(prop) ?\n                    _this._globalTimelineStyles[prop] :\n                    AUTO_STYLE;\n            }\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyStylesToKeyframe = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ styles = this._pendingStyles;\n        var /** @type {?} */ props = Object.keys(styles);\n        if (props.length == 0)\n            return;\n        this._pendingStyles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ val = styles[prop];\n            _this._currentKeyframe[prop] = val;\n        });\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            if (!_this._currentKeyframe.hasOwnProperty(prop)) {\n                _this._currentKeyframe[prop] = _this._localTimelineStyles[prop];\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.snapshotCurrentStyles = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            var /** @type {?} */ val = _this._localTimelineStyles[prop];\n            _this._pendingStyles[prop] = val;\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getFinalKeyframe = /**\n     * @return {?}\n     */\n    function () { return this._keyframes.get(this.duration); };\n    Object.defineProperty(TimelineBuilder.prototype, \"properties\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ properties = [];\n            for (var /** @type {?} */ prop in this._currentKeyframe) {\n                properties.push(prop);\n            }\n            return properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} timeline\n     * @return {?}\n     */\n    TimelineBuilder.prototype.mergeTimelineCollectedStyles = /**\n     * @param {?} timeline\n     * @return {?}\n     */\n    function (timeline) {\n        var _this = this;\n        Object.keys(timeline._styleSummary).forEach(function (prop) {\n            var /** @type {?} */ details0 = _this._styleSummary[prop];\n            var /** @type {?} */ details1 = timeline._styleSummary[prop];\n            if (!details0 || details1.time > details0.time) {\n                _this._updateStyle(prop, details1.value);\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.buildKeyframes = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.applyStylesToKeyframe();\n        var /** @type {?} */ preStyleProps = new Set();\n        var /** @type {?} */ postStyleProps = new Set();\n        var /** @type {?} */ isEmpty = this._keyframes.size === 1 && this.duration === 0;\n        var /** @type {?} */ finalKeyframes = [];\n        this._keyframes.forEach(function (keyframe, time) {\n            var /** @type {?} */ finalKeyframe = copyStyles(keyframe, true);\n            Object.keys(finalKeyframe).forEach(function (prop) {\n                var /** @type {?} */ value = finalKeyframe[prop];\n                if (value == ɵPRE_STYLE) {\n                    preStyleProps.add(prop);\n                }\n                else if (value == AUTO_STYLE) {\n                    postStyleProps.add(prop);\n                }\n            });\n            if (!isEmpty) {\n                finalKeyframe['offset'] = time / _this.duration;\n            }\n            finalKeyframes.push(finalKeyframe);\n        });\n        var /** @type {?} */ preProps = preStyleProps.size ? iteratorToArray(preStyleProps.values()) : [];\n        var /** @type {?} */ postProps = postStyleProps.size ? iteratorToArray(postStyleProps.values()) : [];\n        // special case for a 0-second animation (which is designed just to place styles onscreen)\n        if (isEmpty) {\n            var /** @type {?} */ kf0 = finalKeyframes[0];\n            var /** @type {?} */ kf1 = copyObj(kf0);\n            kf0['offset'] = 0;\n            kf1['offset'] = 1;\n            finalKeyframes = [kf0, kf1];\n        }\n        return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);\n    };\n    return TimelineBuilder;\n}());\nvar SubTimelineBuilder = /** @class */ (function (_super) {\n    __extends(SubTimelineBuilder, _super);\n    function SubTimelineBuilder(driver, element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe) {\n        if (_stretchStartingKeyframe === void 0) { _stretchStartingKeyframe = false; }\n        var _this = _super.call(this, driver, element, timings.delay) || this;\n        _this.element = element;\n        _this.keyframes = keyframes;\n        _this.preStyleProps = preStyleProps;\n        _this.postStyleProps = postStyleProps;\n        _this._stretchStartingKeyframe = _stretchStartingKeyframe;\n        _this.timings = { duration: timings.duration, delay: timings.delay, easing: timings.easing };\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.containsAnimation = /**\n     * @return {?}\n     */\n    function () { return this.keyframes.length > 1; };\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.buildKeyframes = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keyframes = this.keyframes;\n        var _a = this.timings, delay = _a.delay, duration = _a.duration, easing = _a.easing;\n        if (this._stretchStartingKeyframe && delay) {\n            var /** @type {?} */ newKeyframes = [];\n            var /** @type {?} */ totalTime = duration + delay;\n            var /** @type {?} */ startingGap = delay / totalTime;\n            // the original starting keyframe now starts once the delay is done\n            var /** @type {?} */ newFirstKeyframe = copyStyles(keyframes[0], false);\n            newFirstKeyframe['offset'] = 0;\n            newKeyframes.push(newFirstKeyframe);\n            var /** @type {?} */ oldFirstKeyframe = copyStyles(keyframes[0], false);\n            oldFirstKeyframe['offset'] = roundOffset(startingGap);\n            newKeyframes.push(oldFirstKeyframe);\n            /*\n                    When the keyframe is stretched then it means that the delay before the animation\n                    starts is gone. Instead the first keyframe is placed at the start of the animation\n                    and it is then copied to where it starts when the original delay is over. This basically\n                    means nothing animates during that delay, but the styles are still renderered. For this\n                    to work the original offset values that exist in the original keyframes must be \"warped\"\n                    so that they can take the new keyframe + delay into account.\n            \n                    delay=1000, duration=1000, keyframes = 0 .5 1\n            \n                    turns into\n            \n                    delay=0, duration=2000, keyframes = 0 .33 .66 1\n                   */\n            // offsets between 1 ... n -1 are all warped by the keyframe stretch\n            var /** @type {?} */ limit = keyframes.length - 1;\n            for (var /** @type {?} */ i = 1; i <= limit; i++) {\n                var /** @type {?} */ kf = copyStyles(keyframes[i], false);\n                var /** @type {?} */ oldOffset = /** @type {?} */ (kf['offset']);\n                var /** @type {?} */ timeAtKeyframe = delay + oldOffset * duration;\n                kf['offset'] = roundOffset(timeAtKeyframe / totalTime);\n                newKeyframes.push(kf);\n            }\n            // the new starting keyframe should be added at the start\n            duration = totalTime;\n            delay = 0;\n            easing = '';\n            keyframes = newKeyframes;\n        }\n        return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing, true);\n    };\n    return SubTimelineBuilder;\n}(TimelineBuilder));\n/**\n * @param {?} offset\n * @param {?=} decimalPoints\n * @return {?}\n */\nfunction roundOffset(offset, decimalPoints) {\n    if (decimalPoints === void 0) { decimalPoints = 3; }\n    var /** @type {?} */ mult = Math.pow(10, decimalPoints - 1);\n    return Math.round(offset * mult) / mult;\n}\n/**\n * @param {?} input\n * @param {?} allStyles\n * @return {?}\n */\nfunction flattenStyles(input, allStyles) {\n    var /** @type {?} */ styles = {};\n    var /** @type {?} */ allProperties;\n    input.forEach(function (token) {\n        if (token === '*') {\n            allProperties = allProperties || Object.keys(allStyles);\n            allProperties.forEach(function (prop) { styles[prop] = AUTO_STYLE; });\n        }\n        else {\n            copyStyles(/** @type {?} */ (token), false, styles);\n        }\n    });\n    return styles;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Animation = /** @class */ (function () {\n    function Animation(_driver, input) {\n        this._driver = _driver;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = buildAnimationAst(_driver, input, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation validation failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        this._animationAst = ast;\n    }\n    /**\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} destinationStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    Animation.prototype.buildTimelines = /**\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} destinationStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    function (element, startingStyles, destinationStyles, options, subInstructions) {\n        var /** @type {?} */ start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) : /** @type {?} */ (startingStyles);\n        var /** @type {?} */ dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) : /** @type {?} */ (destinationStyles);\n        var /** @type {?} */ errors = [];\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ result = buildAnimationTimelines(this._driver, element, this._animationAst, ENTER_CLASSNAME, LEAVE_CLASSNAME, start, dest, options, subInstructions, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation building failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        return result;\n    };\n    return Animation;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationStyleNormalizer = /** @class */ (function () {\n    function AnimationStyleNormalizer() {\n    }\n    return AnimationStyleNormalizer;\n}());\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationStyleNormalizer = /** @class */ (function () {\n    function NoopAnimationStyleNormalizer() {\n    }\n    /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    NoopAnimationStyleNormalizer.prototype.normalizePropertyName = /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    function (propertyName, errors) { return propertyName; };\n    /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    NoopAnimationStyleNormalizer.prototype.normalizeStyleValue = /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    function (userProvidedProperty, normalizedProperty, value, errors) {\n        return /** @type {?} */ (value);\n    };\n    return NoopAnimationStyleNormalizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar WebAnimationsStyleNormalizer = /** @class */ (function (_super) {\n    __extends(WebAnimationsStyleNormalizer, _super);\n    function WebAnimationsStyleNormalizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizePropertyName = /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    function (propertyName, errors) {\n        return dashCaseToCamelCase(propertyName);\n    };\n    /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizeStyleValue = /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    function (userProvidedProperty, normalizedProperty, value, errors) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = value.toString().trim();\n        if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n            if (typeof value === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errors.push(\"Please provide a CSS unit value for \" + userProvidedProperty + \":\" + value);\n                }\n            }\n        }\n        return strVal + unit;\n    };\n    return WebAnimationsStyleNormalizer;\n}(AnimationStyleNormalizer));\nvar DIMENSIONAL_PROP_MAP = makeBooleanMap('width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'\n    .split(','));\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction makeBooleanMap(keys) {\n    var /** @type {?} */ map = {};\n    keys.forEach(function (key) { return map[key] = true; });\n    return map;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?} isRemovalTransition\n * @param {?} fromStyles\n * @param {?} toStyles\n * @param {?} timelines\n * @param {?} queriedElements\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?=} errors\n * @return {?}\n */\nfunction createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps, errors) {\n    return {\n        type: 0 /* TransitionAnimation */,\n        element: element,\n        triggerName: triggerName,\n        isRemovalTransition: isRemovalTransition,\n        fromState: fromState,\n        fromStyles: fromStyles,\n        toState: toState,\n        toStyles: toStyles,\n        timelines: timelines,\n        queriedElements: queriedElements,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps,\n        errors: errors\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_OBJECT = {};\nvar AnimationTransitionFactory = /** @class */ (function () {\n    function AnimationTransitionFactory(_triggerName, ast, _stateStyles) {\n        this._triggerName = _triggerName;\n        this.ast = ast;\n        this._stateStyles = _stateStyles;\n    }\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.match = /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    function (currentState, nextState) {\n        return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState);\n    };\n    /**\n     * @param {?} stateName\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.buildStyles = /**\n     * @param {?} stateName\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    function (stateName, params, errors) {\n        var /** @type {?} */ backupStateStyler = this._stateStyles['*'];\n        var /** @type {?} */ stateStyler = this._stateStyles[stateName];\n        var /** @type {?} */ backupStyles = backupStateStyler ? backupStateStyler.buildStyles(params, errors) : {};\n        return stateStyler ? stateStyler.buildStyles(params, errors) : backupStyles;\n    };\n    /**\n     * @param {?} driver\n     * @param {?} element\n     * @param {?} currentState\n     * @param {?} nextState\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?=} currentOptions\n     * @param {?=} nextOptions\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.build = /**\n     * @param {?} driver\n     * @param {?} element\n     * @param {?} currentState\n     * @param {?} nextState\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?=} currentOptions\n     * @param {?=} nextOptions\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    function (driver, element, currentState, nextState, enterClassName, leaveClassName, currentOptions, nextOptions, subInstructions) {\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ transitionAnimationParams = this.ast.options && this.ast.options.params || EMPTY_OBJECT;\n        var /** @type {?} */ currentAnimationParams = currentOptions && currentOptions.params || EMPTY_OBJECT;\n        var /** @type {?} */ currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);\n        var /** @type {?} */ nextAnimationParams = nextOptions && nextOptions.params || EMPTY_OBJECT;\n        var /** @type {?} */ nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);\n        var /** @type {?} */ queriedElements = new Set();\n        var /** @type {?} */ preStyleMap = new Map();\n        var /** @type {?} */ postStyleMap = new Map();\n        var /** @type {?} */ isRemoval = nextState === 'void';\n        var /** @type {?} */ animationOptions = { params: __assign({}, transitionAnimationParams, nextAnimationParams) };\n        var /** @type {?} */ timelines = buildAnimationTimelines(driver, element, this.ast.animation, enterClassName, leaveClassName, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);\n        if (errors.length) {\n            return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, [], [], preStyleMap, postStyleMap, errors);\n        }\n        timelines.forEach(function (tl) {\n            var /** @type {?} */ elm = tl.element;\n            var /** @type {?} */ preProps = getOrSetAsInMap(preStyleMap, elm, {});\n            tl.preStyleProps.forEach(function (prop) { return preProps[prop] = true; });\n            var /** @type {?} */ postProps = getOrSetAsInMap(postStyleMap, elm, {});\n            tl.postStyleProps.forEach(function (prop) { return postProps[prop] = true; });\n            if (elm !== element) {\n                queriedElements.add(elm);\n            }\n        });\n        var /** @type {?} */ queriedElementsList = iteratorToArray(queriedElements.values());\n        return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, timelines, queriedElementsList, preStyleMap, postStyleMap);\n    };\n    return AnimationTransitionFactory;\n}());\n/**\n * @param {?} matchFns\n * @param {?} currentState\n * @param {?} nextState\n * @return {?}\n */\nfunction oneOrMoreTransitionsMatch(matchFns, currentState, nextState) {\n    return matchFns.some(function (fn) { return fn(currentState, nextState); });\n}\nvar AnimationStateStyles = /** @class */ (function () {\n    function AnimationStateStyles(styles, defaultParams) {\n        this.styles = styles;\n        this.defaultParams = defaultParams;\n    }\n    /**\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationStateStyles.prototype.buildStyles = /**\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    function (params, errors) {\n        var /** @type {?} */ finalStyles = {};\n        var /** @type {?} */ combinedParams = copyObj(this.defaultParams);\n        Object.keys(params).forEach(function (key) {\n            var /** @type {?} */ value = params[key];\n            if (value != null) {\n                combinedParams[key] = value;\n            }\n        });\n        this.styles.styles.forEach(function (value) {\n            if (typeof value !== 'string') {\n                var /** @type {?} */ styleObj_1 = /** @type {?} */ (value);\n                Object.keys(styleObj_1).forEach(function (prop) {\n                    var /** @type {?} */ val = styleObj_1[prop];\n                    if (val.length > 1) {\n                        val = interpolateParams(val, combinedParams, errors);\n                    }\n                    finalStyles[prop] = val;\n                });\n            }\n        });\n        return finalStyles;\n    };\n    return AnimationStateStyles;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} ast\n * @return {?}\n */\nfunction buildTrigger(name, ast) {\n    return new AnimationTrigger(name, ast);\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AnimationTrigger = /** @class */ (function () {\n    function AnimationTrigger(name, ast) {\n        var _this = this;\n        this.name = name;\n        this.ast = ast;\n        this.transitionFactories = [];\n        this.states = {};\n        ast.states.forEach(function (ast) {\n            var /** @type {?} */ defaultParams = (ast.options && ast.options.params) || {};\n            _this.states[ast.name] = new AnimationStateStyles(ast.style, defaultParams);\n        });\n        balanceProperties(this.states, 'true', '1');\n        balanceProperties(this.states, 'false', '0');\n        ast.transitions.forEach(function (ast) {\n            _this.transitionFactories.push(new AnimationTransitionFactory(name, ast, _this.states));\n        });\n        this.fallbackTransition = createFallbackTransition(name, this.states);\n    }\n    Object.defineProperty(AnimationTrigger.prototype, \"containsQueries\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.ast.queryCount > 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTrigger.prototype.matchTransition = /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    function (currentState, nextState) {\n        var /** @type {?} */ entry = this.transitionFactories.find(function (f) { return f.match(currentState, nextState); });\n        return entry || null;\n    };\n    /**\n     * @param {?} currentState\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTrigger.prototype.matchStyles = /**\n     * @param {?} currentState\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    function (currentState, params, errors) {\n        return this.fallbackTransition.buildStyles(currentState, params, errors);\n    };\n    return AnimationTrigger;\n}());\n/**\n * @param {?} triggerName\n * @param {?} states\n * @return {?}\n */\nfunction createFallbackTransition(triggerName, states) {\n    var /** @type {?} */ matchers = [function (fromState, toState) { return true; }];\n    var /** @type {?} */ animation = { type: 2 /* Sequence */, steps: [], options: null };\n    var /** @type {?} */ transition = {\n        type: 1 /* Transition */,\n        animation: animation,\n        matchers: matchers,\n        options: null,\n        queryCount: 0,\n        depCount: 0\n    };\n    return new AnimationTransitionFactory(triggerName, transition, states);\n}\n/**\n * @param {?} obj\n * @param {?} key1\n * @param {?} key2\n * @return {?}\n */\nfunction balanceProperties(obj, key1, key2) {\n    if (obj.hasOwnProperty(key1)) {\n        if (!obj.hasOwnProperty(key2)) {\n            obj[key2] = obj[key1];\n        }\n    }\n    else if (obj.hasOwnProperty(key2)) {\n        obj[key1] = obj[key2];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\nvar TimelineAnimationEngine = /** @class */ (function () {\n    function TimelineAnimationEngine(_driver, _normalizer) {\n        this._driver = _driver;\n        this._normalizer = _normalizer;\n        this._animations = {};\n        this._playersById = {};\n        this.players = [];\n    }\n    /**\n     * @param {?} id\n     * @param {?} metadata\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.register = /**\n     * @param {?} id\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (id, metadata) {\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = buildAnimationAst(this._driver, metadata, errors);\n        if (errors.length) {\n            throw new Error(\"Unable to build the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        else {\n            this._animations[id] = ast;\n        }\n    };\n    /**\n     * @param {?} i\n     * @param {?} preStyles\n     * @param {?=} postStyles\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._buildPlayer = /**\n     * @param {?} i\n     * @param {?} preStyles\n     * @param {?=} postStyles\n     * @return {?}\n     */\n    function (i, preStyles, postStyles) {\n        var /** @type {?} */ element = i.element;\n        var /** @type {?} */ keyframes = normalizeKeyframes(this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n        return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, []);\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.create = /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    function (id, element, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = this._animations[id];\n        var /** @type {?} */ instructions;\n        var /** @type {?} */ autoStylesMap = new Map();\n        if (ast) {\n            instructions = buildAnimationTimelines(this._driver, element, ast, ENTER_CLASSNAME, LEAVE_CLASSNAME, {}, {}, options, EMPTY_INSTRUCTION_MAP, errors);\n            instructions.forEach(function (inst) {\n                var /** @type {?} */ styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n                inst.postStyleProps.forEach(function (prop) { return styles[prop] = null; });\n            });\n        }\n        else {\n            errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n            instructions = [];\n        }\n        if (errors.length) {\n            throw new Error(\"Unable to create the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        autoStylesMap.forEach(function (styles, element) {\n            Object.keys(styles).forEach(function (prop) { styles[prop] = _this._driver.computeStyle(element, prop, AUTO_STYLE); });\n        });\n        var /** @type {?} */ players = instructions.map(function (i) {\n            var /** @type {?} */ styles = autoStylesMap.get(i.element);\n            return _this._buildPlayer(i, {}, styles);\n        });\n        var /** @type {?} */ player = optimizeGroupPlayer(players);\n        this._playersById[id] = player;\n        player.onDestroy(function () { return _this.destroy(id); });\n        this.players.push(player);\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.destroy = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        var /** @type {?} */ player = this._getPlayer(id);\n        player.destroy();\n        delete this._playersById[id];\n        var /** @type {?} */ index = this.players.indexOf(player);\n        if (index >= 0) {\n            this.players.splice(index, 1);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._getPlayer = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        var /** @type {?} */ player = this._playersById[id];\n        if (!player) {\n            throw new Error(\"Unable to find the timeline player referenced by \" + id);\n        }\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.listen = /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (id, element, eventName, callback) {\n        // triggerName, fromState, toState are all ignored for timeline animations\n        var /** @type {?} */ baseEvent = makeAnimationEvent(element, '', '', '');\n        listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n        return function () { };\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} command\n     * @param {?} args\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.command = /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} command\n     * @param {?} args\n     * @return {?}\n     */\n    function (id, element, command, args) {\n        if (command == 'register') {\n            this.register(id, /** @type {?} */ (args[0]));\n            return;\n        }\n        if (command == 'create') {\n            var /** @type {?} */ options = /** @type {?} */ ((args[0] || {}));\n            this.create(id, element, options);\n            return;\n        }\n        var /** @type {?} */ player = this._getPlayer(id);\n        switch (command) {\n            case 'play':\n                player.play();\n                break;\n            case 'pause':\n                player.pause();\n                break;\n            case 'reset':\n                player.reset();\n                break;\n            case 'restart':\n                player.restart();\n                break;\n            case 'finish':\n                player.finish();\n                break;\n            case 'init':\n                player.init();\n                break;\n            case 'setPosition':\n                player.setPosition(parseFloat(/** @type {?} */ (args[0])));\n                break;\n            case 'destroy':\n                this.destroy(id);\n                break;\n        }\n    };\n    return TimelineAnimationEngine;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUEUED_CLASSNAME = 'ng-animate-queued';\nvar QUEUED_SELECTOR = '.ng-animate-queued';\nvar DISABLED_CLASSNAME = 'ng-animate-disabled';\nvar DISABLED_SELECTOR = '.ng-animate-disabled';\nvar STAR_CLASSNAME = 'ng-star-inserted';\nvar STAR_SELECTOR = '.ng-star-inserted';\nvar EMPTY_PLAYER_ARRAY = [];\nvar NULL_REMOVAL_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: false\n};\nvar NULL_REMOVED_QUERIED_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: true\n};\n/**\n * @record\n */\n\nvar REMOVAL_FLAG = '__ng_removed';\n/**\n * @record\n */\n\nvar StateValue = /** @class */ (function () {\n    function StateValue(input, namespaceId) {\n        if (namespaceId === void 0) { namespaceId = ''; }\n        this.namespaceId = namespaceId;\n        var /** @type {?} */ isObj = input && input.hasOwnProperty('value');\n        var /** @type {?} */ value = isObj ? input['value'] : input;\n        this.value = normalizeTriggerValue(value);\n        if (isObj) {\n            var /** @type {?} */ options = copyObj(/** @type {?} */ (input));\n            delete options['value'];\n            this.options = /** @type {?} */ (options);\n        }\n        else {\n            this.options = {};\n        }\n        if (!this.options.params) {\n            this.options.params = {};\n        }\n    }\n    Object.defineProperty(StateValue.prototype, \"params\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this.options.params); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    StateValue.prototype.absorbOptions = /**\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        var /** @type {?} */ newParams = options.params;\n        if (newParams) {\n            var /** @type {?} */ oldParams_1 = /** @type {?} */ ((this.options.params));\n            Object.keys(newParams).forEach(function (prop) {\n                if (oldParams_1[prop] == null) {\n                    oldParams_1[prop] = newParams[prop];\n                }\n            });\n        }\n    };\n    return StateValue;\n}());\nvar VOID_VALUE = 'void';\nvar DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\nvar DELETED_STATE_VALUE = new StateValue('DELETED');\nvar AnimationTransitionNamespace = /** @class */ (function () {\n    function AnimationTransitionNamespace(id, hostElement, _engine) {\n        this.id = id;\n        this.hostElement = hostElement;\n        this._engine = _engine;\n        this.players = [];\n        this._triggers = {};\n        this._queue = [];\n        this._elementListeners = new Map();\n        this._hostClassName = 'ng-tns-' + id;\n        addClass(hostElement, this._hostClassName);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.listen = /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    function (element, name, phase, callback) {\n        var _this = this;\n        if (!this._triggers.hasOwnProperty(name)) {\n            throw new Error(\"Unable to listen on the animation trigger event \\\"\" + phase + \"\\\" because the animation trigger \\\"\" + name + \"\\\" doesn't exist!\");\n        }\n        if (phase == null || phase.length == 0) {\n            throw new Error(\"Unable to listen on the animation trigger \\\"\" + name + \"\\\" because the provided event is undefined!\");\n        }\n        if (!isTriggerEventValid(phase)) {\n            throw new Error(\"The provided animation trigger event \\\"\" + phase + \"\\\" for the animation trigger \\\"\" + name + \"\\\" is not supported!\");\n        }\n        var /** @type {?} */ listeners = getOrSetAsInMap(this._elementListeners, element, []);\n        var /** @type {?} */ data = { name: name, phase: phase, callback: callback };\n        listeners.push(data);\n        var /** @type {?} */ triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n        if (!triggersWithStates.hasOwnProperty(name)) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n            triggersWithStates[name] = DEFAULT_STATE_VALUE;\n        }\n        return function () {\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            _this._engine.afterFlush(function () {\n                var /** @type {?} */ index = listeners.indexOf(data);\n                if (index >= 0) {\n                    listeners.splice(index, 1);\n                }\n                if (!_this._triggers[name]) {\n                    delete triggersWithStates[name];\n                }\n            });\n        };\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.register = /**\n     * @param {?} name\n     * @param {?} ast\n     * @return {?}\n     */\n    function (name, ast) {\n        if (this._triggers[name]) {\n            // throw\n            return false;\n        }\n        else {\n            this._triggers[name] = ast;\n            return true;\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._getTrigger = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ trigger = this._triggers[name];\n        if (!trigger) {\n            throw new Error(\"The provided animation trigger \\\"\" + name + \"\\\" has not been registered!\");\n        }\n        return trigger;\n    };\n    /**\n     * @param {?} element\n     * @param {?} triggerName\n     * @param {?} value\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.trigger = /**\n     * @param {?} element\n     * @param {?} triggerName\n     * @param {?} value\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    function (element, triggerName, value, defaultToFallback) {\n        var _this = this;\n        if (defaultToFallback === void 0) { defaultToFallback = true; }\n        var /** @type {?} */ trigger = this._getTrigger(triggerName);\n        var /** @type {?} */ player = new TransitionAnimationPlayer(this.id, triggerName, element);\n        var /** @type {?} */ triggersWithStates = this._engine.statesByElement.get(element);\n        if (!triggersWithStates) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n            this._engine.statesByElement.set(element, triggersWithStates = {});\n        }\n        var /** @type {?} */ fromState = triggersWithStates[triggerName];\n        var /** @type {?} */ toState = new StateValue(value, this.id);\n        var /** @type {?} */ isObj = value && value.hasOwnProperty('value');\n        if (!isObj && fromState) {\n            toState.absorbOptions(fromState.options);\n        }\n        triggersWithStates[triggerName] = toState;\n        if (!fromState) {\n            fromState = DEFAULT_STATE_VALUE;\n        }\n        else if (fromState === DELETED_STATE_VALUE) {\n            return player;\n        }\n        var /** @type {?} */ isRemoval = toState.value === VOID_VALUE;\n        // normally this isn't reached by here, however, if an object expression\n        // is passed in then it may be a new object each time. Comparing the value\n        // is important since that will stay the same despite there being a new object.\n        // The removal arc here is special cased because the same element is triggered\n        // twice in the event that it contains animations on the outer/inner portions\n        // of the host container\n        if (!isRemoval && fromState.value === toState.value) {\n            // this means that despite the value not changing, some inner params\n            // have changed which means that the animation final styles need to be applied\n            if (!objEquals(fromState.params, toState.params)) {\n                var /** @type {?} */ errors = [];\n                var /** @type {?} */ fromStyles_1 = trigger.matchStyles(fromState.value, fromState.params, errors);\n                var /** @type {?} */ toStyles_1 = trigger.matchStyles(toState.value, toState.params, errors);\n                if (errors.length) {\n                    this._engine.reportError(errors);\n                }\n                else {\n                    this._engine.afterFlush(function () {\n                        eraseStyles(element, fromStyles_1);\n                        setStyles(element, toStyles_1);\n                    });\n                }\n            }\n            return;\n        }\n        var /** @type {?} */ playersOnElement = getOrSetAsInMap(this._engine.playersByElement, element, []);\n        playersOnElement.forEach(function (player) {\n            // only remove the player if it is queued on the EXACT same trigger/namespace\n            // we only also deal with queued players here because if the animation has\n            // started then we want to keep the player alive until the flush happens\n            // (which is where the previousPlayers are passed into the new palyer)\n            if (player.namespaceId == _this.id && player.triggerName == triggerName && player.queued) {\n                player.destroy();\n            }\n        });\n        var /** @type {?} */ transition = trigger.matchTransition(fromState.value, toState.value);\n        var /** @type {?} */ isFallbackTransition = false;\n        if (!transition) {\n            if (!defaultToFallback)\n                return;\n            transition = trigger.fallbackTransition;\n            isFallbackTransition = true;\n        }\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({ element: element, triggerName: triggerName, transition: transition, fromState: fromState, toState: toState, player: player, isFallbackTransition: isFallbackTransition });\n        if (!isFallbackTransition) {\n            addClass(element, QUEUED_CLASSNAME);\n            player.onStart(function () { removeClass(element, QUEUED_CLASSNAME); });\n        }\n        player.onDone(function () {\n            var /** @type {?} */ index = _this.players.indexOf(player);\n            if (index >= 0) {\n                _this.players.splice(index, 1);\n            }\n            var /** @type {?} */ players = _this._engine.playersByElement.get(element);\n            if (players) {\n                var /** @type {?} */ index_1 = players.indexOf(player);\n                if (index_1 >= 0) {\n                    players.splice(index_1, 1);\n                }\n            }\n        });\n        this.players.push(player);\n        playersOnElement.push(player);\n        return player;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.deregister = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var _this = this;\n        delete this._triggers[name];\n        this._engine.statesByElement.forEach(function (stateMap, element) { delete stateMap[name]; });\n        this._elementListeners.forEach(function (listeners, element) {\n            _this._elementListeners.set(element, listeners.filter(function (entry) { return entry.name != name; }));\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.clearElementCache = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        this._engine.statesByElement.delete(element);\n        this._elementListeners.delete(element);\n        var /** @type {?} */ elementPlayers = this._engine.playersByElement.get(element);\n        if (elementPlayers) {\n            elementPlayers.forEach(function (player) { return player.destroy(); });\n            this._engine.playersByElement.delete(element);\n        }\n    };\n    /**\n     * @param {?} rootElement\n     * @param {?} context\n     * @param {?=} animate\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._signalRemovalForInnerTriggers = /**\n     * @param {?} rootElement\n     * @param {?} context\n     * @param {?=} animate\n     * @return {?}\n     */\n    function (rootElement, context, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = false; }\n        // emulate a leave animation for all inner nodes within this node.\n        // If there are no animations found for any of the nodes then clear the cache\n        // for the element.\n        this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true).forEach(function (elm) {\n            // this means that an inner remove() operation has already kicked off\n            // the animation on this element...\n            if (elm[REMOVAL_FLAG])\n                return;\n            var /** @type {?} */ namespaces = _this._engine.fetchNamespacesByElement(elm);\n            if (namespaces.size) {\n                namespaces.forEach(function (ns) { return ns.triggerLeaveAnimation(elm, context, false, true); });\n            }\n            else {\n                _this.clearElementCache(elm);\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} destroyAfterComplete\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.triggerLeaveAnimation = /**\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} destroyAfterComplete\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    function (element, context, destroyAfterComplete, defaultToFallback) {\n        var _this = this;\n        var /** @type {?} */ triggerStates = this._engine.statesByElement.get(element);\n        if (triggerStates) {\n            var /** @type {?} */ players_1 = [];\n            Object.keys(triggerStates).forEach(function (triggerName) {\n                // this check is here in the event that an element is removed\n                // twice (both on the host level and the component level)\n                if (_this._triggers[triggerName]) {\n                    var /** @type {?} */ player = _this.trigger(element, triggerName, VOID_VALUE, defaultToFallback);\n                    if (player) {\n                        players_1.push(player);\n                    }\n                }\n            });\n            if (players_1.length) {\n                this._engine.markElementAsRemoved(this.id, element, true, context);\n                if (destroyAfterComplete) {\n                    optimizeGroupPlayer(players_1).onDone(function () { return _this._engine.processLeaveNode(element); });\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.prepareLeaveAnimationListeners = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        var /** @type {?} */ listeners = this._elementListeners.get(element);\n        if (listeners) {\n            var /** @type {?} */ visitedTriggers_1 = new Set();\n            listeners.forEach(function (listener) {\n                var /** @type {?} */ triggerName = listener.name;\n                if (visitedTriggers_1.has(triggerName))\n                    return;\n                visitedTriggers_1.add(triggerName);\n                var /** @type {?} */ trigger = _this._triggers[triggerName];\n                var /** @type {?} */ transition = trigger.fallbackTransition;\n                var /** @type {?} */ elementStates = /** @type {?} */ ((_this._engine.statesByElement.get(element)));\n                var /** @type {?} */ fromState = elementStates[triggerName] || DEFAULT_STATE_VALUE;\n                var /** @type {?} */ toState = new StateValue(VOID_VALUE);\n                var /** @type {?} */ player = new TransitionAnimationPlayer(_this.id, triggerName, element);\n                _this._engine.totalQueuedPlayers++;\n                _this._queue.push({\n                    element: element,\n                    triggerName: triggerName,\n                    transition: transition,\n                    fromState: fromState,\n                    toState: toState,\n                    player: player,\n                    isFallbackTransition: true\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.removeNode = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        var _this = this;\n        var /** @type {?} */ engine = this._engine;\n        if (element.childElementCount) {\n            this._signalRemovalForInnerTriggers(element, context, true);\n        }\n        // this means that a * => VOID animation was detected and kicked off\n        if (this.triggerLeaveAnimation(element, context, true))\n            return;\n        // find the player that is animating and make sure that the\n        // removal is delayed until that player has completed\n        var /** @type {?} */ containsPotentialParentTransition = false;\n        if (engine.totalAnimations) {\n            var /** @type {?} */ currentPlayers = engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n            // when this `if statement` does not continue forward it means that\n            // a previous animation query has selected the current element and\n            // is animating it. In this situation want to continue fowards and\n            // allow the element to be queued up for animation later.\n            if (currentPlayers && currentPlayers.length) {\n                containsPotentialParentTransition = true;\n            }\n            else {\n                var /** @type {?} */ parent_1 = element;\n                while (parent_1 = parent_1.parentNode) {\n                    var /** @type {?} */ triggers = engine.statesByElement.get(parent_1);\n                    if (triggers) {\n                        containsPotentialParentTransition = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // at this stage we know that the element will either get removed\n        // during flush or will be picked up by a parent query. Either way\n        // we need to fire the listeners for this element when it DOES get\n        // removed (once the query parent animation is done or after flush)\n        this.prepareLeaveAnimationListeners(element);\n        // whether or not a parent has an animation we need to delay the deferral of the leave\n        // operation until we have more information (which we do after flush() has been called)\n        if (containsPotentialParentTransition) {\n            engine.markElementAsRemoved(this.id, element, false, context);\n        }\n        else {\n            // we do this after the flush has occurred such\n            // that the callbacks can be fired\n            engine.afterFlush(function () { return _this.clearElementCache(element); });\n            engine.destroyInnerAnimations(element);\n            engine._onRemovalComplete(element, context);\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.insertNode = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) { addClass(element, this._hostClassName); };\n    /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.drainQueuedTransitions = /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    function (microtaskId) {\n        var _this = this;\n        var /** @type {?} */ instructions = [];\n        this._queue.forEach(function (entry) {\n            var /** @type {?} */ player = entry.player;\n            if (player.destroyed)\n                return;\n            var /** @type {?} */ element = entry.element;\n            var /** @type {?} */ listeners = _this._elementListeners.get(element);\n            if (listeners) {\n                listeners.forEach(function (listener) {\n                    if (listener.name == entry.triggerName) {\n                        var /** @type {?} */ baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);\n                        (/** @type {?} */ (baseEvent))['_data'] = microtaskId;\n                        listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n                    }\n                });\n            }\n            if (player.markedForDestroy) {\n                _this._engine.afterFlush(function () {\n                    // now we can destroy the element properly since the event listeners have\n                    // been bound to the player\n                    player.destroy();\n                });\n            }\n            else {\n                instructions.push(entry);\n            }\n        });\n        this._queue = [];\n        return instructions.sort(function (a, b) {\n            // if depCount == 0 them move to front\n            // otherwise if a contains b then move back\n            var /** @type {?} */ d0 = a.transition.ast.depCount;\n            var /** @type {?} */ d1 = b.transition.ast.depCount;\n            if (d0 == 0 || d1 == 0) {\n                return d0 - d1;\n            }\n            return _this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n        });\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.destroy = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        this.players.forEach(function (p) { return p.destroy(); });\n        this._signalRemovalForInnerTriggers(this.hostElement, context);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.elementContainsData = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ containsData = false;\n        if (this._elementListeners.has(element))\n            containsData = true;\n        containsData =\n            (this._queue.find(function (entry) { return entry.element === element; }) ? true : false) || containsData;\n        return containsData;\n    };\n    return AnimationTransitionNamespace;\n}());\n/**\n * @record\n */\n\nvar TransitionAnimationEngine = /** @class */ (function () {\n    function TransitionAnimationEngine(driver, _normalizer) {\n        this.driver = driver;\n        this._normalizer = _normalizer;\n        this.players = [];\n        this.newHostElements = new Map();\n        this.playersByElement = new Map();\n        this.playersByQueriedElement = new Map();\n        this.statesByElement = new Map();\n        this.disabledNodes = new Set();\n        this.totalAnimations = 0;\n        this.totalQueuedPlayers = 0;\n        this._namespaceLookup = {};\n        this._namespaceList = [];\n        this._flushFns = [];\n        this._whenQuietFns = [];\n        this.namespacesByHostElement = new Map();\n        this.collectedEnterElements = [];\n        this.collectedLeaveElements = [];\n        this.onRemovalComplete = function (element, context) { };\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._onRemovalComplete = /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) { this.onRemovalComplete(element, context); };\n    Object.defineProperty(TransitionAnimationEngine.prototype, \"queuedPlayers\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ players = [];\n            this._namespaceList.forEach(function (ns) {\n                ns.players.forEach(function (player) {\n                    if (player.queued) {\n                        players.push(player);\n                    }\n                });\n            });\n            return players;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.createNamespace = /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n        if (hostElement.parentNode) {\n            this._balanceNamespaceList(ns, hostElement);\n        }\n        else {\n            // defer this later until flush during when the host element has\n            // been inserted so that we know exactly where to place it in\n            // the namespace list\n            this.newHostElements.set(hostElement, ns);\n            // given that this host element is apart of the animation code, it\n            // may or may not be inserted by a parent node that is an of an\n            // animation renderer type. If this happens then we can still have\n            // access to this item when we query for :enter nodes. If the parent\n            // is a renderer then the set data-structure will normalize the entry\n            this.collectEnterElement(hostElement);\n        }\n        return this._namespaceLookup[namespaceId] = ns;\n    };\n    /**\n     * @param {?} ns\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._balanceNamespaceList = /**\n     * @param {?} ns\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (ns, hostElement) {\n        var /** @type {?} */ limit = this._namespaceList.length - 1;\n        if (limit >= 0) {\n            var /** @type {?} */ found = false;\n            for (var /** @type {?} */ i = limit; i >= 0; i--) {\n                var /** @type {?} */ nextNamespace = this._namespaceList[i];\n                if (this.driver.containsElement(nextNamespace.hostElement, hostElement)) {\n                    this._namespaceList.splice(i + 1, 0, ns);\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                this._namespaceList.splice(0, 0, ns);\n            }\n        }\n        else {\n            this._namespaceList.push(ns);\n        }\n        this.namespacesByHostElement.set(hostElement, ns);\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.register = /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (!ns) {\n            ns = this.createNamespace(namespaceId, hostElement);\n        }\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} name\n     * @param {?} trigger\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.registerTrigger = /**\n     * @param {?} namespaceId\n     * @param {?} name\n     * @param {?} trigger\n     * @return {?}\n     */\n    function (namespaceId, name, trigger) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (ns && ns.register(name, trigger)) {\n            this.totalAnimations++;\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroy = /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, context) {\n        var _this = this;\n        if (!namespaceId)\n            return;\n        var /** @type {?} */ ns = this._fetchNamespace(namespaceId);\n        this.afterFlush(function () {\n            _this.namespacesByHostElement.delete(ns.hostElement);\n            delete _this._namespaceLookup[namespaceId];\n            var /** @type {?} */ index = _this._namespaceList.indexOf(ns);\n            if (index >= 0) {\n                _this._namespaceList.splice(index, 1);\n            }\n        });\n        this.afterFlushAnimationsDone(function () { return ns.destroy(context); });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._fetchNamespace = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) { return this._namespaceLookup[id]; };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.fetchNamespacesByElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        // normally there should only be one namespace per element, however\n        // if @triggers are placed on both the component element and then\n        // its host element (within the component code) then there will be\n        // two namespaces returned. We use a set here to simply the dedupe\n        // of namespaces incase there are multiple triggers both the elm and host\n        var /** @type {?} */ namespaces = new Set();\n        var /** @type {?} */ elementStates = this.statesByElement.get(element);\n        if (elementStates) {\n            var /** @type {?} */ keys = Object.keys(elementStates);\n            for (var /** @type {?} */ i = 0; i < keys.length; i++) {\n                var /** @type {?} */ nsId = elementStates[keys[i]].namespaceId;\n                if (nsId) {\n                    var /** @type {?} */ ns = this._fetchNamespace(nsId);\n                    if (ns) {\n                        namespaces.add(ns);\n                    }\n                }\n            }\n        }\n        return namespaces;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.trigger = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (namespaceId, element, name, value) {\n        if (isElementNode(element)) {\n            this._fetchNamespace(namespaceId).trigger(element, name, value);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.insertNode = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    function (namespaceId, element, parent, insertBefore) {\n        if (!isElementNode(element))\n            return;\n        // special case for when an element is removed and reinserted (move operation)\n        // when this occurs we do not want to use the element for deletion later\n        var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            details.setForRemoval = false;\n        }\n        // in the event that the namespaceId is blank then the caller\n        // code does not contain any animation code in it, but it is\n        // just being called so that the node is marked as being inserted\n        if (namespaceId) {\n            var /** @type {?} */ ns = this._fetchNamespace(namespaceId);\n            // This if-statement is a workaround for router issue #21947.\n            // The router sometimes hits a race condition where while a route\n            // is being instantiated a new navigation arrives, triggering leave\n            // animation of DOM that has not been fully initialized, until this\n            // is resolved, we need to handle the scenario when DOM is not in a\n            // consistent state during the animation.\n            if (ns) {\n                ns.insertNode(element, parent);\n            }\n        }\n        // only *directives and host elements are inserted before\n        if (insertBefore) {\n            this.collectEnterElement(element);\n        }\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.collectEnterElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { this.collectedEnterElements.push(element); };\n    /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.markElementAsDisabled = /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    function (element, value) {\n        if (value) {\n            if (!this.disabledNodes.has(element)) {\n                this.disabledNodes.add(element);\n                addClass(element, DISABLED_CLASSNAME);\n            }\n        }\n        else if (this.disabledNodes.has(element)) {\n            this.disabledNodes.delete(element);\n            removeClass(element, DISABLED_CLASSNAME);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.removeNode = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, element, context) {\n        if (!isElementNode(element)) {\n            this._onRemovalComplete(element, context);\n            return;\n        }\n        var /** @type {?} */ ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n        if (ns) {\n            ns.removeNode(element, context);\n        }\n        else {\n            this.markElementAsRemoved(namespaceId, element, false, context);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?=} hasAnimation\n     * @param {?=} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.markElementAsRemoved = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?=} hasAnimation\n     * @param {?=} context\n     * @return {?}\n     */\n    function (namespaceId, element, hasAnimation, context) {\n        this.collectedLeaveElements.push(element);\n        element[REMOVAL_FLAG] = {\n            namespaceId: namespaceId,\n            setForRemoval: context, hasAnimation: hasAnimation,\n            removedBeforeQueried: false\n        };\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.listen = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    function (namespaceId, element, name, phase, callback) {\n        if (isElementNode(element)) {\n            return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n        }\n        return function () { };\n    };\n    /**\n     * @param {?} entry\n     * @param {?} subTimelines\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildInstruction = /**\n     * @param {?} entry\n     * @param {?} subTimelines\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @return {?}\n     */\n    function (entry, subTimelines, enterClassName, leaveClassName) {\n        return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, enterClassName, leaveClassName, entry.fromState.options, entry.toState.options, subTimelines);\n    };\n    /**\n     * @param {?} containerElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroyInnerAnimations = /**\n     * @param {?} containerElement\n     * @return {?}\n     */\n    function (containerElement) {\n        var _this = this;\n        var /** @type {?} */ elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);\n        elements.forEach(function (element) { return _this.destroyActiveAnimationsForElement(element); });\n        if (this.playersByQueriedElement.size == 0)\n            return;\n        elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);\n        elements.forEach(function (element) { return _this.finishActiveQueriedAnimationOnElement(element); });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroyActiveAnimationsForElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ players = this.playersByElement.get(element);\n        if (players) {\n            players.forEach(function (player) {\n                // special case for when an element is set for destruction, but hasn't started.\n                // in this situation we want to delay the destruction until the flush occurs\n                // so that any event listeners attached to the player are triggered.\n                if (player.queued) {\n                    player.markedForDestroy = true;\n                }\n                else {\n                    player.destroy();\n                }\n            });\n        }\n        var /** @type {?} */ stateMap = this.statesByElement.get(element);\n        if (stateMap) {\n            Object.keys(stateMap).forEach(function (triggerName) { return stateMap[triggerName] = DELETED_STATE_VALUE; });\n        }\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.finishActiveQueriedAnimationOnElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ players = this.playersByQueriedElement.get(element);\n        if (players) {\n            players.forEach(function (player) { return player.finish(); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (_this.players.length) {\n                return optimizeGroupPlayer(_this.players).onDone(function () { return resolve(); });\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.processLeaveNode = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            // this will prevent it from removing it twice\n            element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n            if (details.namespaceId) {\n                this.destroyInnerAnimations(element);\n                var /** @type {?} */ ns = this._fetchNamespace(details.namespaceId);\n                if (ns) {\n                    ns.clearElementCache(element);\n                }\n            }\n            this._onRemovalComplete(element, details.setForRemoval);\n        }\n        if (this.driver.matchesElement(element, DISABLED_SELECTOR)) {\n            this.markElementAsDisabled(element, false);\n        }\n        this.driver.query(element, DISABLED_SELECTOR, true).forEach(function (node) {\n            _this.markElementAsDisabled(element, false);\n        });\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.flush = /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    function (microtaskId) {\n        var _this = this;\n        if (microtaskId === void 0) { microtaskId = -1; }\n        var /** @type {?} */ players = [];\n        if (this.newHostElements.size) {\n            this.newHostElements.forEach(function (ns, element) { return _this._balanceNamespaceList(ns, element); });\n            this.newHostElements.clear();\n        }\n        if (this.totalAnimations && this.collectedEnterElements.length) {\n            for (var /** @type {?} */ i = 0; i < this.collectedEnterElements.length; i++) {\n                var /** @type {?} */ elm = this.collectedEnterElements[i];\n                addClass(elm, STAR_CLASSNAME);\n            }\n        }\n        if (this._namespaceList.length &&\n            (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n            var /** @type {?} */ cleanupFns = [];\n            try {\n                players = this._flushAnimations(cleanupFns, microtaskId);\n            }\n            finally {\n                for (var /** @type {?} */ i = 0; i < cleanupFns.length; i++) {\n                    cleanupFns[i]();\n                }\n            }\n        }\n        else {\n            for (var /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n                var /** @type {?} */ element = this.collectedLeaveElements[i];\n                this.processLeaveNode(element);\n            }\n        }\n        this.totalQueuedPlayers = 0;\n        this.collectedEnterElements.length = 0;\n        this.collectedLeaveElements.length = 0;\n        this._flushFns.forEach(function (fn) { return fn(); });\n        this._flushFns = [];\n        if (this._whenQuietFns.length) {\n            // we move these over to a variable so that\n            // if any new callbacks are registered in another\n            // flush they do not populate the existing set\n            var /** @type {?} */ quietFns_1 = this._whenQuietFns;\n            this._whenQuietFns = [];\n            if (players.length) {\n                optimizeGroupPlayer(players).onDone(function () { quietFns_1.forEach(function (fn) { return fn(); }); });\n            }\n            else {\n                quietFns_1.forEach(function (fn) { return fn(); });\n            }\n        }\n    };\n    /**\n     * @param {?} errors\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.reportError = /**\n     * @param {?} errors\n     * @return {?}\n     */\n    function (errors) {\n        throw new Error(\"Unable to process animations due to the following failed trigger transitions\\n \" + errors.join('\\n'));\n    };\n    /**\n     * @param {?} cleanupFns\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._flushAnimations = /**\n     * @param {?} cleanupFns\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    function (cleanupFns, microtaskId) {\n        var _this = this;\n        var /** @type {?} */ subTimelines = new ElementInstructionMap();\n        var /** @type {?} */ skippedPlayers = [];\n        var /** @type {?} */ skippedPlayersMap = new Map();\n        var /** @type {?} */ queuedInstructions = [];\n        var /** @type {?} */ queriedElements = new Map();\n        var /** @type {?} */ allPreStyleElements = new Map();\n        var /** @type {?} */ allPostStyleElements = new Map();\n        var /** @type {?} */ disabledElementsSet = new Set();\n        this.disabledNodes.forEach(function (node) {\n            disabledElementsSet.add(node);\n            var /** @type {?} */ nodesThatAreDisabled = _this.driver.query(node, QUEUED_SELECTOR, true);\n            for (var /** @type {?} */ i_1 = 0; i_1 < nodesThatAreDisabled.length; i_1++) {\n                disabledElementsSet.add(nodesThatAreDisabled[i_1]);\n            }\n        });\n        var /** @type {?} */ bodyNode = getBodyNode();\n        var /** @type {?} */ allTriggerElements = Array.from(this.statesByElement.keys());\n        var /** @type {?} */ enterNodeMap = buildRootMap(allTriggerElements, this.collectedEnterElements);\n        // this must occur before the instructions are built below such that\n        // the :enter queries match the elements (since the timeline queries\n        // are fired during instruction building).\n        var /** @type {?} */ enterNodeMapIds = new Map();\n        var /** @type {?} */ i = 0;\n        enterNodeMap.forEach(function (nodes, root) {\n            var /** @type {?} */ className = ENTER_CLASSNAME + i++;\n            enterNodeMapIds.set(root, className);\n            nodes.forEach(function (node) { return addClass(node, className); });\n        });\n        var /** @type {?} */ allLeaveNodes = [];\n        var /** @type {?} */ mergedLeaveNodes = new Set();\n        var /** @type {?} */ leaveNodesWithoutAnimations = new Set();\n        for (var /** @type {?} */ i_2 = 0; i_2 < this.collectedLeaveElements.length; i_2++) {\n            var /** @type {?} */ element = this.collectedLeaveElements[i_2];\n            var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n            if (details && details.setForRemoval) {\n                allLeaveNodes.push(element);\n                mergedLeaveNodes.add(element);\n                if (details.hasAnimation) {\n                    this.driver.query(element, STAR_SELECTOR, true).forEach(function (elm) { return mergedLeaveNodes.add(elm); });\n                }\n                else {\n                    leaveNodesWithoutAnimations.add(element);\n                }\n            }\n        }\n        var /** @type {?} */ leaveNodeMapIds = new Map();\n        var /** @type {?} */ leaveNodeMap = buildRootMap(allTriggerElements, Array.from(mergedLeaveNodes));\n        leaveNodeMap.forEach(function (nodes, root) {\n            var /** @type {?} */ className = LEAVE_CLASSNAME + i++;\n            leaveNodeMapIds.set(root, className);\n            nodes.forEach(function (node) { return addClass(node, className); });\n        });\n        cleanupFns.push(function () {\n            enterNodeMap.forEach(function (nodes, root) {\n                var /** @type {?} */ className = /** @type {?} */ ((enterNodeMapIds.get(root)));\n                nodes.forEach(function (node) { return removeClass(node, className); });\n            });\n            leaveNodeMap.forEach(function (nodes, root) {\n                var /** @type {?} */ className = /** @type {?} */ ((leaveNodeMapIds.get(root)));\n                nodes.forEach(function (node) { return removeClass(node, className); });\n            });\n            allLeaveNodes.forEach(function (element) { _this.processLeaveNode(element); });\n        });\n        var /** @type {?} */ allPlayers = [];\n        var /** @type {?} */ erroneousTransitions = [];\n        for (var /** @type {?} */ i_3 = this._namespaceList.length - 1; i_3 >= 0; i_3--) {\n            var /** @type {?} */ ns = this._namespaceList[i_3];\n            ns.drainQueuedTransitions(microtaskId).forEach(function (entry) {\n                var /** @type {?} */ player = entry.player;\n                allPlayers.push(player);\n                var /** @type {?} */ element = entry.element;\n                if (!bodyNode || !_this.driver.containsElement(bodyNode, element)) {\n                    player.destroy();\n                    return;\n                }\n                var /** @type {?} */ leaveClassName = /** @type {?} */ ((leaveNodeMapIds.get(element)));\n                var /** @type {?} */ enterClassName = /** @type {?} */ ((enterNodeMapIds.get(element)));\n                var /** @type {?} */ instruction = /** @type {?} */ ((_this._buildInstruction(entry, subTimelines, enterClassName, leaveClassName)));\n                if (instruction.errors && instruction.errors.length) {\n                    erroneousTransitions.push(instruction);\n                    return;\n                }\n                // if a unmatched transition is queued to go then it SHOULD NOT render\n                // an animation and cancel the previously running animations.\n                if (entry.isFallbackTransition) {\n                    player.onStart(function () { return eraseStyles(element, instruction.fromStyles); });\n                    player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this means that if a parent animation uses this animation as a sub trigger\n                // then it will instruct the timeline builder to not add a player delay, but\n                // instead stretch the first keyframe gap up until the animation starts. The\n                // reason this is important is to prevent extra initialization styles from being\n                // required by the user in the animation.\n                instruction.timelines.forEach(function (tl) { return tl.stretchStartingKeyframe = true; });\n                subTimelines.append(element, instruction.timelines);\n                var /** @type {?} */ tuple = { instruction: instruction, player: player, element: element };\n                queuedInstructions.push(tuple);\n                instruction.queriedElements.forEach(function (element) { return getOrSetAsInMap(queriedElements, element, []).push(player); });\n                instruction.preStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    if (props.length) {\n                        var /** @type {?} */ setVal_1 = /** @type {?} */ ((allPreStyleElements.get(element)));\n                        if (!setVal_1) {\n                            allPreStyleElements.set(element, setVal_1 = new Set());\n                        }\n                        props.forEach(function (prop) { return setVal_1.add(prop); });\n                    }\n                });\n                instruction.postStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    var /** @type {?} */ setVal = /** @type {?} */ ((allPostStyleElements.get(element)));\n                    if (!setVal) {\n                        allPostStyleElements.set(element, setVal = new Set());\n                    }\n                    props.forEach(function (prop) { return setVal.add(prop); });\n                });\n            });\n        }\n        if (erroneousTransitions.length) {\n            var /** @type {?} */ errors_1 = [];\n            erroneousTransitions.forEach(function (instruction) {\n                errors_1.push(\"@\" + instruction.triggerName + \" has failed due to:\\n\"); /** @type {?} */\n                ((instruction.errors)).forEach(function (error) { return errors_1.push(\"- \" + error + \"\\n\"); });\n            });\n            allPlayers.forEach(function (player) { return player.destroy(); });\n            this.reportError(errors_1);\n        }\n        var /** @type {?} */ allPreviousPlayersMap = new Map();\n        // this map works to tell which element in the DOM tree is contained by\n        // which animation. Further down below this map will get populated once\n        // the players are built and in doing so it can efficiently figure out\n        // if a sub player is skipped due to a parent player having priority.\n        var /** @type {?} */ animationElementMap = new Map();\n        queuedInstructions.forEach(function (entry) {\n            var /** @type {?} */ element = entry.element;\n            if (subTimelines.has(element)) {\n                animationElementMap.set(element, element);\n                _this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n            }\n        });\n        skippedPlayers.forEach(function (player) {\n            var /** @type {?} */ element = player.element;\n            var /** @type {?} */ previousPlayers = _this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n            previousPlayers.forEach(function (prevPlayer) {\n                getOrSetAsInMap(allPreviousPlayersMap, element, []).push(prevPlayer);\n                prevPlayer.destroy();\n            });\n        });\n        // this is a special case for nodes that will be removed (either by)\n        // having their own leave animations or by being queried in a container\n        // that will be removed once a parent animation is complete. The idea\n        // here is that * styles must be identical to ! styles because of\n        // backwards compatibility (* is also filled in by default in many places).\n        // Otherwise * styles will return an empty value or auto since the element\n        // that is being getComputedStyle'd will not be visible (since * = destination)\n        var /** @type {?} */ replaceNodes = allLeaveNodes.filter(function (node) {\n            return replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements);\n        });\n        // POST STAGE: fill the * styles\n        var /** @type {?} */ postStylesMap = new Map();\n        var /** @type {?} */ allLeaveQueriedNodes = cloakAndComputeStyles(postStylesMap, this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE);\n        allLeaveQueriedNodes.forEach(function (node) {\n            if (replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements)) {\n                replaceNodes.push(node);\n            }\n        });\n        // PRE STAGE: fill the ! styles\n        var /** @type {?} */ preStylesMap = new Map();\n        enterNodeMap.forEach(function (nodes, root) {\n            cloakAndComputeStyles(preStylesMap, _this.driver, new Set(nodes), allPreStyleElements, ɵPRE_STYLE);\n        });\n        replaceNodes.forEach(function (node) {\n            var /** @type {?} */ post = postStylesMap.get(node);\n            var /** @type {?} */ pre = preStylesMap.get(node);\n            postStylesMap.set(node, /** @type {?} */ (__assign({}, post, pre)));\n        });\n        var /** @type {?} */ rootPlayers = [];\n        var /** @type {?} */ subPlayers = [];\n        var /** @type {?} */ NO_PARENT_ANIMATION_ELEMENT_DETECTED = {};\n        queuedInstructions.forEach(function (entry) {\n            var element = entry.element, player = entry.player, instruction = entry.instruction;\n            // this means that it was never consumed by a parent animation which\n            // means that it is independent and therefore should be set for animation\n            if (subTimelines.has(element)) {\n                if (disabledElementsSet.has(element)) {\n                    player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this will flow up the DOM and query the map to figure out\n                // if a parent animation has priority over it. In the situation\n                // that a parent is detected then it will cancel the loop. If\n                // nothing is detected, or it takes a few hops to find a parent,\n                // then it will fill in the missing nodes and signal them as having\n                // a detected parent (or a NO_PARENT value via a special constant).\n                var /** @type {?} */ parentWithAnimation_1 = NO_PARENT_ANIMATION_ELEMENT_DETECTED;\n                if (animationElementMap.size > 1) {\n                    var /** @type {?} */ elm = element;\n                    var /** @type {?} */ parentsToAdd = [];\n                    while (elm = elm.parentNode) {\n                        var /** @type {?} */ detectedParent = animationElementMap.get(elm);\n                        if (detectedParent) {\n                            parentWithAnimation_1 = detectedParent;\n                            break;\n                        }\n                        parentsToAdd.push(elm);\n                    }\n                    parentsToAdd.forEach(function (parent) { return animationElementMap.set(parent, parentWithAnimation_1); });\n                }\n                var /** @type {?} */ innerPlayer = _this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);\n                player.setRealPlayer(innerPlayer);\n                if (parentWithAnimation_1 === NO_PARENT_ANIMATION_ELEMENT_DETECTED) {\n                    rootPlayers.push(player);\n                }\n                else {\n                    var /** @type {?} */ parentPlayers = _this.playersByElement.get(parentWithAnimation_1);\n                    if (parentPlayers && parentPlayers.length) {\n                        player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n                    }\n                    skippedPlayers.push(player);\n                }\n            }\n            else {\n                eraseStyles(element, instruction.fromStyles);\n                player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                // there still might be a ancestor player animating this\n                // element therefore we will still add it as a sub player\n                // even if its animation may be disabled\n                subPlayers.push(player);\n                if (disabledElementsSet.has(element)) {\n                    skippedPlayers.push(player);\n                }\n            }\n        });\n        // find all of the sub players' corresponding inner animation player\n        subPlayers.forEach(function (player) {\n            // even if any players are not found for a sub animation then it\n            // will still complete itself after the next tick since it's Noop\n            var /** @type {?} */ playersForElement = skippedPlayersMap.get(player.element);\n            if (playersForElement && playersForElement.length) {\n                var /** @type {?} */ innerPlayer = optimizeGroupPlayer(playersForElement);\n                player.setRealPlayer(innerPlayer);\n            }\n        });\n        // the reason why we don't actually play the animation is\n        // because all that a skipped player is designed to do is to\n        // fire the start/done transition callback events\n        skippedPlayers.forEach(function (player) {\n            if (player.parentPlayer) {\n                player.syncPlayerEvents(player.parentPlayer);\n            }\n            else {\n                player.destroy();\n            }\n        });\n        // run through all of the queued removals and see if they\n        // were picked up by a query. If not then perform the removal\n        // operation right away unless a parent animation is ongoing.\n        for (var /** @type {?} */ i_4 = 0; i_4 < allLeaveNodes.length; i_4++) {\n            var /** @type {?} */ element = allLeaveNodes[i_4];\n            var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n            removeClass(element, LEAVE_CLASSNAME);\n            // this means the element has a removal animation that is being\n            // taken care of and therefore the inner elements will hang around\n            // until that animation is over (or the parent queried animation)\n            if (details && details.hasAnimation)\n                continue;\n            var /** @type {?} */ players = [];\n            // if this element is queried or if it contains queried children\n            // then we want for the element not to be removed from the page\n            // until the queried animations have finished\n            if (queriedElements.size) {\n                var /** @type {?} */ queriedPlayerResults = queriedElements.get(element);\n                if (queriedPlayerResults && queriedPlayerResults.length) {\n                    players.push.apply(players, queriedPlayerResults);\n                }\n                var /** @type {?} */ queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);\n                for (var /** @type {?} */ j = 0; j < queriedInnerElements.length; j++) {\n                    var /** @type {?} */ queriedPlayers = queriedElements.get(queriedInnerElements[j]);\n                    if (queriedPlayers && queriedPlayers.length) {\n                        players.push.apply(players, queriedPlayers);\n                    }\n                }\n            }\n            var /** @type {?} */ activePlayers = players.filter(function (p) { return !p.destroyed; });\n            if (activePlayers.length) {\n                removeNodesAfterAnimationDone(this, element, activePlayers);\n            }\n            else {\n                this.processLeaveNode(element);\n            }\n        }\n        // this is required so the cleanup method doesn't remove them\n        allLeaveNodes.length = 0;\n        rootPlayers.forEach(function (player) {\n            _this.players.push(player);\n            player.onDone(function () {\n                player.destroy();\n                var /** @type {?} */ index = _this.players.indexOf(player);\n                _this.players.splice(index, 1);\n            });\n            player.play();\n        });\n        return rootPlayers;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.elementContainsData = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @return {?}\n     */\n    function (namespaceId, element) {\n        var /** @type {?} */ containsData = false;\n        var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval)\n            containsData = true;\n        if (this.playersByElement.has(element))\n            containsData = true;\n        if (this.playersByQueriedElement.has(element))\n            containsData = true;\n        if (this.statesByElement.has(element))\n            containsData = true;\n        return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlush = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._flushFns.push(callback); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlushAnimationsDone = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._whenQuietFns.push(callback); };\n    /**\n     * @param {?} element\n     * @param {?} isQueriedElement\n     * @param {?=} namespaceId\n     * @param {?=} triggerName\n     * @param {?=} toStateValue\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._getPreviousPlayers = /**\n     * @param {?} element\n     * @param {?} isQueriedElement\n     * @param {?=} namespaceId\n     * @param {?=} triggerName\n     * @param {?=} toStateValue\n     * @return {?}\n     */\n    function (element, isQueriedElement, namespaceId, triggerName, toStateValue) {\n        var /** @type {?} */ players = [];\n        if (isQueriedElement) {\n            var /** @type {?} */ queriedElementPlayers = this.playersByQueriedElement.get(element);\n            if (queriedElementPlayers) {\n                players = queriedElementPlayers;\n            }\n        }\n        else {\n            var /** @type {?} */ elementPlayers = this.playersByElement.get(element);\n            if (elementPlayers) {\n                var /** @type {?} */ isRemovalAnimation_1 = !toStateValue || toStateValue == VOID_VALUE;\n                elementPlayers.forEach(function (player) {\n                    if (player.queued)\n                        return;\n                    if (!isRemovalAnimation_1 && player.triggerName != triggerName)\n                        return;\n                    players.push(player);\n                });\n            }\n        }\n        if (namespaceId || triggerName) {\n            players = players.filter(function (player) {\n                if (namespaceId && namespaceId != player.namespaceId)\n                    return false;\n                if (triggerName && triggerName != player.triggerName)\n                    return false;\n                return true;\n            });\n        }\n        return players;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._beforeAnimationBuild = /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @return {?}\n     */\n    function (namespaceId, instruction, allPreviousPlayersMap) {\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // when a removal animation occurs, ALL previous players are collected\n        // and destroyed (even if they are outside of the current namespace)\n        var /** @type {?} */ targetNameSpaceId = instruction.isRemovalTransition ? undefined : namespaceId;\n        var /** @type {?} */ targetTriggerName = instruction.isRemovalTransition ? undefined : triggerName;\n        var _loop_1 = function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n            var /** @type {?} */ previousPlayers = this_1._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n            previousPlayers.forEach(function (player) {\n                var /** @type {?} */ realPlayer = /** @type {?} */ (player.getRealPlayer());\n                if (realPlayer.beforeDestroy) {\n                    realPlayer.beforeDestroy();\n                }\n                player.destroy();\n                players.push(player);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = instruction.timelines; _i < _a.length; _i++) {\n            var timelineInstruction = _a[_i];\n            _loop_1(timelineInstruction);\n        }\n        // this needs to be done so that the PRE/POST styles can be\n        // computed properly without interfering with the previous animation\n        eraseStyles(rootElement, instruction.fromStyles);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @param {?} skippedPlayersMap\n     * @param {?} preStylesMap\n     * @param {?} postStylesMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildAnimation = /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @param {?} skippedPlayersMap\n     * @param {?} preStylesMap\n     * @param {?} postStylesMap\n     * @return {?}\n     */\n    function (namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {\n        var _this = this;\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // we first run this so that the previous animation player\n        // data can be passed into the successive animation players\n        var /** @type {?} */ allQueriedPlayers = [];\n        var /** @type {?} */ allConsumedElements = new Set();\n        var /** @type {?} */ allSubElements = new Set();\n        var /** @type {?} */ allNewPlayers = instruction.timelines.map(function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            allConsumedElements.add(element);\n            // FIXME (matsko): make sure to-be-removed animations are removed properly\n            var /** @type {?} */ details = element[REMOVAL_FLAG];\n            if (details && details.removedBeforeQueried)\n                return new NoopAnimationPlayer();\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ previousPlayers = flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY)\n                .map(function (p) { return p.getRealPlayer(); }))\n                .filter(function (p) {\n                // the `element` is not apart of the AnimationPlayer definition, but\n                // Mock/WebAnimations\n                // use the element within their implementation. This will be added in Angular5 to\n                // AnimationPlayer\n                var /** @type {?} */ pp = /** @type {?} */ (p);\n                return pp.element ? pp.element === element : false;\n            });\n            var /** @type {?} */ preStyles = preStylesMap.get(element);\n            var /** @type {?} */ postStyles = postStylesMap.get(element);\n            var /** @type {?} */ keyframes = normalizeKeyframes(_this.driver, _this._normalizer, element, timelineInstruction.keyframes, preStyles, postStyles);\n            var /** @type {?} */ player = _this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n            // this means that this particular player belongs to a sub trigger. It is\n            // important that we match this player up with the corresponding (@trigger.listener)\n            if (timelineInstruction.subTimeline && skippedPlayersMap) {\n                allSubElements.add(element);\n            }\n            if (isQueriedElement) {\n                var /** @type {?} */ wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n                wrappedPlayer.setRealPlayer(player);\n                allQueriedPlayers.push(wrappedPlayer);\n            }\n            return player;\n        });\n        allQueriedPlayers.forEach(function (player) {\n            getOrSetAsInMap(_this.playersByQueriedElement, player.element, []).push(player);\n            player.onDone(function () { return deleteOrUnsetInMap(_this.playersByQueriedElement, player.element, player); });\n        });\n        allConsumedElements.forEach(function (element) { return addClass(element, NG_ANIMATING_CLASSNAME); });\n        var /** @type {?} */ player = optimizeGroupPlayer(allNewPlayers);\n        player.onDestroy(function () {\n            allConsumedElements.forEach(function (element) { return removeClass(element, NG_ANIMATING_CLASSNAME); });\n            setStyles(rootElement, instruction.toStyles);\n        });\n        // this basically makes all of the callbacks for sub element animations\n        // be dependent on the upper players for when they finish\n        allSubElements.forEach(function (element) { getOrSetAsInMap(skippedPlayersMap, element, []).push(player); });\n        return player;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} keyframes\n     * @param {?} previousPlayers\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildPlayer = /**\n     * @param {?} instruction\n     * @param {?} keyframes\n     * @param {?} previousPlayers\n     * @return {?}\n     */\n    function (instruction, keyframes, previousPlayers) {\n        if (keyframes.length > 0) {\n            return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);\n        }\n        // special case for when an empty transition|definition is provided\n        // ... there is no point in rendering an empty animation\n        return new NoopAnimationPlayer();\n    };\n    return TransitionAnimationEngine;\n}());\nvar TransitionAnimationPlayer = /** @class */ (function () {\n    function TransitionAnimationPlayer(namespaceId, triggerName, element) {\n        this.namespaceId = namespaceId;\n        this.triggerName = triggerName;\n        this.element = element;\n        this._player = new NoopAnimationPlayer();\n        this._containsRealPlayer = false;\n        this._queuedCallbacks = {};\n        this.destroyed = false;\n        this.markedForDestroy = false;\n        this.queued = true;\n    }\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setRealPlayer = /**\n     * @param {?} player\n     * @return {?}\n     */\n    function (player) {\n        var _this = this;\n        if (this._containsRealPlayer)\n            return;\n        this._player = player;\n        Object.keys(this._queuedCallbacks).forEach(function (phase) {\n            _this._queuedCallbacks[phase].forEach(function (callback) { return listenOnPlayer(player, phase, undefined, callback); });\n        });\n        this._queuedCallbacks = {};\n        this._containsRealPlayer = true;\n        (/** @type {?} */ (this)).queued = false;\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getRealPlayer = /**\n     * @return {?}\n     */\n    function () { return this._player; };\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.syncPlayerEvents = /**\n     * @param {?} player\n     * @return {?}\n     */\n    function (player) {\n        var _this = this;\n        var /** @type {?} */ p = /** @type {?} */ (this._player);\n        if (p.triggerCallback) {\n            player.onStart(function () { return p.triggerCallback('start'); });\n        }\n        player.onDone(function () { return _this.finish(); });\n        player.onDestroy(function () { return _this.destroy(); });\n    };\n    /**\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype._queueEvent = /**\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (name, callback) {\n        getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this.queued) {\n            this._queueEvent('done', fn);\n        }\n        this._player.onDone(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this.queued) {\n            this._queueEvent('start', fn);\n        }\n        this._player.onStart(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this.queued) {\n            this._queueEvent('destroy', fn);\n        }\n        this._player.onDestroy(fn);\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () { this._player.init(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this.queued ? false : this._player.hasStarted(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.play(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.pause(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.restart(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () { this._player.finish(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this)).destroyed = true;\n        this._player.destroy();\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.reset(); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) {\n        if (!this.queued) {\n            this._player.setPosition(p);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return this.queued ? 0 : this._player.getPosition(); };\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"totalTime\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._player.totalTime; },\n        enumerable: true,\n        configurable: true\n    });\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ p = /** @type {?} */ (this._player);\n        if (p.triggerCallback) {\n            p.triggerCallback(phaseName);\n        }\n    };\n    return TransitionAnimationPlayer;\n}());\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction deleteOrUnsetInMap(map, key, value) {\n    var /** @type {?} */ currentValues;\n    if (map instanceof Map) {\n        currentValues = map.get(key);\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                map.delete(key);\n            }\n        }\n    }\n    else {\n        currentValues = map[key];\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                delete map[key];\n            }\n        }\n    }\n    return currentValues;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeTriggerValue(value) {\n    // we use `!= null` here because it's the most simple\n    // way to test against a \"falsy\" value without mixing\n    // in empty strings or a zero value. DO NOT OPTIMIZE.\n    return value != null ? value : null;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isElementNode(node) {\n    return node && node['nodeType'] === 1;\n}\n/**\n * @param {?} eventName\n * @return {?}\n */\nfunction isTriggerEventValid(eventName) {\n    return eventName == 'start' || eventName == 'done';\n}\n/**\n * @param {?} element\n * @param {?=} value\n * @return {?}\n */\nfunction cloakElement(element, value) {\n    var /** @type {?} */ oldValue = element.style.display;\n    element.style.display = value != null ? value : 'none';\n    return oldValue;\n}\n/**\n * @param {?} valuesMap\n * @param {?} driver\n * @param {?} elements\n * @param {?} elementPropsMap\n * @param {?} defaultStyle\n * @return {?}\n */\nfunction cloakAndComputeStyles(valuesMap, driver, elements, elementPropsMap, defaultStyle) {\n    var /** @type {?} */ cloakVals = [];\n    elements.forEach(function (element) { return cloakVals.push(cloakElement(element)); });\n    var /** @type {?} */ failedElements = [];\n    elementPropsMap.forEach(function (props, element) {\n        var /** @type {?} */ styles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ value = styles[prop] = driver.computeStyle(element, prop, defaultStyle);\n            // there is no easy way to detect this because a sub element could be removed\n            // by a parent animation element being detached.\n            if (!value || value.length == 0) {\n                element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n                failedElements.push(element);\n            }\n        });\n        valuesMap.set(element, styles);\n    });\n    // we use a index variable here since Set.forEach(a, i) does not return\n    // an index value for the closure (but instead just the value)\n    var /** @type {?} */ i = 0;\n    elements.forEach(function (element) { return cloakElement(element, cloakVals[i++]); });\n    return failedElements;\n}\n/**\n * @param {?} roots\n * @param {?} nodes\n * @return {?}\n */\nfunction buildRootMap(roots, nodes) {\n    var /** @type {?} */ rootMap = new Map();\n    roots.forEach(function (root) { return rootMap.set(root, []); });\n    if (nodes.length == 0)\n        return rootMap;\n    var /** @type {?} */ NULL_NODE = 1;\n    var /** @type {?} */ nodeSet = new Set(nodes);\n    var /** @type {?} */ localRootMap = new Map();\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    function getRoot(node) {\n        if (!node)\n            return NULL_NODE;\n        var /** @type {?} */ root = localRootMap.get(node);\n        if (root)\n            return root;\n        var /** @type {?} */ parent = node.parentNode;\n        if (rootMap.has(parent)) {\n            // ngIf inside @trigger\n            root = parent;\n        }\n        else if (nodeSet.has(parent)) {\n            // ngIf inside ngIf\n            root = NULL_NODE;\n        }\n        else {\n            // recurse upwards\n            root = getRoot(parent);\n        }\n        localRootMap.set(node, root);\n        return root;\n    }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ root = getRoot(node);\n        if (root !== NULL_NODE) {\n            /** @type {?} */ ((rootMap.get(root))).push(node);\n        }\n    });\n    return rootMap;\n}\nvar CLASSES_CACHE_KEY = '$$classes';\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction addClass(element, className) {\n    if (element.classList) {\n        element.classList.add(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (!classes) {\n            classes = element[CLASSES_CACHE_KEY] = {};\n        }\n        classes[className] = true;\n    }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction removeClass(element, className) {\n    if (element.classList) {\n        element.classList.remove(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (classes) {\n            delete classes[className];\n        }\n    }\n}\n/**\n * @param {?} engine\n * @param {?} element\n * @param {?} players\n * @return {?}\n */\nfunction removeNodesAfterAnimationDone(engine, element, players) {\n    optimizeGroupPlayer(players).onDone(function () { return engine.processLeaveNode(element); });\n}\n/**\n * @param {?} players\n * @return {?}\n */\nfunction flattenGroupPlayers(players) {\n    var /** @type {?} */ finalPlayers = [];\n    _flattenGroupPlayersRecur(players, finalPlayers);\n    return finalPlayers;\n}\n/**\n * @param {?} players\n * @param {?} finalPlayers\n * @return {?}\n */\nfunction _flattenGroupPlayersRecur(players, finalPlayers) {\n    for (var /** @type {?} */ i = 0; i < players.length; i++) {\n        var /** @type {?} */ player = players[i];\n        if (player instanceof ɵAnimationGroupPlayer) {\n            _flattenGroupPlayersRecur(player.players, finalPlayers);\n        }\n        else {\n            finalPlayers.push(/** @type {?} */ (player));\n        }\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction objEquals(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        var /** @type {?} */ prop = k1[i];\n        if (!b.hasOwnProperty(prop) || a[prop] !== b[prop])\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} element\n * @param {?} allPreStyleElements\n * @param {?} allPostStyleElements\n * @return {?}\n */\nfunction replacePostStylesAsPre(element, allPreStyleElements, allPostStyleElements) {\n    var /** @type {?} */ postEntry = allPostStyleElements.get(element);\n    if (!postEntry)\n        return false;\n    var /** @type {?} */ preEntry = allPreStyleElements.get(element);\n    if (preEntry) {\n        postEntry.forEach(function (data) { return ((preEntry)).add(data); });\n    }\n    else {\n        allPreStyleElements.set(element, postEntry);\n    }\n    allPostStyleElements.delete(element);\n    return true;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar AnimationEngine = /** @class */ (function () {\n    function AnimationEngine(_driver, normalizer) {\n        var _this = this;\n        this._driver = _driver;\n        this._triggerCache = {};\n        this.onRemovalComplete = function (element, context) { };\n        this._transitionEngine = new TransitionAnimationEngine(_driver, normalizer);\n        this._timelineEngine = new TimelineAnimationEngine(_driver, normalizer);\n        this._transitionEngine.onRemovalComplete = function (element, context) {\n            return _this.onRemovalComplete(element, context);\n        };\n    }\n    /**\n     * @param {?} componentId\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @param {?} name\n     * @param {?} metadata\n     * @return {?}\n     */\n    AnimationEngine.prototype.registerTrigger = /**\n     * @param {?} componentId\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @param {?} name\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (componentId, namespaceId, hostElement, name, metadata) {\n        var /** @type {?} */ cacheKey = componentId + '-' + name;\n        var /** @type {?} */ trigger = this._triggerCache[cacheKey];\n        if (!trigger) {\n            var /** @type {?} */ errors = [];\n            var /** @type {?} */ ast = /** @type {?} */ (buildAnimationAst(this._driver, /** @type {?} */ (metadata), errors));\n            if (errors.length) {\n                throw new Error(\"The animation trigger \\\"\" + name + \"\\\" has failed to build due to the following errors:\\n - \" + errors.join(\"\\n - \"));\n            }\n            trigger = buildTrigger(name, ast);\n            this._triggerCache[cacheKey] = trigger;\n        }\n        this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    AnimationEngine.prototype.register = /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (namespaceId, hostElement) {\n        this._transitionEngine.register(namespaceId, hostElement);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.destroy = /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, context) {\n        this._transitionEngine.destroy(namespaceId, context);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    AnimationEngine.prototype.onInsert = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    function (namespaceId, element, parent, insertBefore) {\n        this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.onRemove = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, element, context) {\n        this._transitionEngine.removeNode(namespaceId, element, context);\n    };\n    /**\n     * @param {?} element\n     * @param {?} disable\n     * @return {?}\n     */\n    AnimationEngine.prototype.disableAnimations = /**\n     * @param {?} element\n     * @param {?} disable\n     * @return {?}\n     */\n    function (element, disable) {\n        this._transitionEngine.markElementAsDisabled(element, disable);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationEngine.prototype.process = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    function (namespaceId, element, property, value) {\n        if (property.charAt(0) == '@') {\n            var _a = parseTimelineCommand(property), id = _a[0], action = _a[1];\n            var /** @type {?} */ args = /** @type {?} */ (value);\n            this._timelineEngine.command(id, element, action, args);\n        }\n        else {\n            this._transitionEngine.trigger(namespaceId, element, property, value);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} eventPhase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationEngine.prototype.listen = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} eventPhase\n     * @param {?} callback\n     * @return {?}\n     */\n    function (namespaceId, element, eventName, eventPhase, callback) {\n        // @@listen\n        if (eventName.charAt(0) == '@') {\n            var _a = parseTimelineCommand(eventName), id = _a[0], action = _a[1];\n            return this._timelineEngine.listen(id, element, action, callback);\n        }\n        return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    AnimationEngine.prototype.flush = /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    function (microtaskId) {\n        if (microtaskId === void 0) { microtaskId = -1; }\n        this._transitionEngine.flush(microtaskId);\n    };\n    Object.defineProperty(AnimationEngine.prototype, \"players\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (/** @type {?} */ (this._transitionEngine.players))\n                .concat(/** @type {?} */ (this._timelineEngine.players));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AnimationEngine.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () { return this._transitionEngine.whenRenderingDone(); };\n    return AnimationEngine;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar WebAnimationsPlayer = /** @class */ (function () {\n    function WebAnimationsPlayer(element, keyframes, options, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var _this = this;\n        this.element = element;\n        this.keyframes = keyframes;\n        this.options = options;\n        this.previousPlayers = previousPlayers;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._initialized = false;\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this.time = 0;\n        this.parentPlayer = null;\n        this.previousStyles = {};\n        this.currentSnapshot = {};\n        this._duration = /** @type {?} */ (options['duration']);\n        this._delay = /** @type {?} */ (options['delay']) || 0;\n        this.time = this._duration + this._delay;\n        if (allowPreviousPlayerStylesMerge(this._duration, this._delay)) {\n            previousPlayers.forEach(function (player) {\n                var /** @type {?} */ styles = player.currentSnapshot;\n                Object.keys(styles).forEach(function (prop) { return _this.previousStyles[prop] = styles[prop]; });\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._onFinish = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        this._buildPlayer();\n        this._preparePlayerBeforeStart();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._buildPlayer = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._initialized)\n            return;\n        this._initialized = true;\n        var /** @type {?} */ keyframes = this.keyframes.map(function (styles) { return copyStyles(styles, false); });\n        var /** @type {?} */ previousStyleProps = Object.keys(this.previousStyles);\n        if (previousStyleProps.length && keyframes.length) {\n            var /** @type {?} */ startingKeyframe_1 = keyframes[0];\n            var /** @type {?} */ missingStyleProps_1 = [];\n            previousStyleProps.forEach(function (prop) {\n                if (!startingKeyframe_1.hasOwnProperty(prop)) {\n                    missingStyleProps_1.push(prop);\n                }\n                startingKeyframe_1[prop] = _this.previousStyles[prop];\n            });\n            if (missingStyleProps_1.length) {\n                var /** @type {?} */ self_1 = this;\n                var _loop_1 = function () {\n                    var /** @type {?} */ kf = keyframes[i];\n                    missingStyleProps_1.forEach(function (prop) {\n                        kf[prop] = _computeStyle(self_1.element, prop);\n                    });\n                };\n                // tslint:disable-next-line\n                for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n                    _loop_1();\n                }\n            }\n        }\n        (/** @type {?} */ (this)).domPlayer =\n            this._triggerWebAnimation(this.element, keyframes, this.options);\n        this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n        this.domPlayer.addEventListener('finish', function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._preparePlayerBeforeStart = /**\n     * @return {?}\n     */\n    function () {\n        // this is required so that the player doesn't start to animate right away\n        if (this._delay) {\n            this._resetDomPlayerState();\n        }\n        else {\n            this.domPlayer.pause();\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._triggerWebAnimation = /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @return {?}\n     */\n    function (element, keyframes, options) {\n        // jscompiler doesn't seem to know animate is a native property because it's not fully\n        // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n        return /** @type {?} */ (element['animate'](keyframes, options));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        this._buildPlayer();\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n            this._started = true;\n        }\n        this.domPlayer.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n        this.domPlayer.pause();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n        this._onFinish();\n        this.domPlayer.finish();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () {\n        this._resetDomPlayerState();\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._resetDomPlayerState = /**\n     * @return {?}\n     */\n    function () {\n        if (this.domPlayer) {\n            this.domPlayer.cancel();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () {\n        this.reset();\n        this.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._resetDomPlayerState();\n            this._onFinish();\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) { this.domPlayer.currentTime = p * this.time; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return this.domPlayer.currentTime / this.time; };\n    Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._delay + this._duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.beforeDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ styles = {};\n        if (this.hasStarted()) {\n            Object.keys(this._finalKeyframe).forEach(function (prop) {\n                if (prop != 'offset') {\n                    styles[prop] =\n                        _this._finished ? _this._finalKeyframe[prop] : _computeStyle(_this.element, prop);\n                }\n            });\n        }\n        this.currentSnapshot = styles;\n    };\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(function (fn) { return fn(); });\n        methods.length = 0;\n    };\n    return WebAnimationsPlayer;\n}());\n/**\n * @param {?} element\n * @param {?} prop\n * @return {?}\n */\nfunction _computeStyle(element, prop) {\n    return (/** @type {?} */ (window.getComputedStyle(element)))[prop];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar WebAnimationsDriver = /** @class */ (function () {\n    function WebAnimationsDriver() {\n    }\n    /**\n     * @param {?} prop\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.validateStyleProperty = /**\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) { return validateStyleProperty(prop); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.matchesElement = /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.containsElement = /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    function (elm1, elm2) { return containsElement(elm1, elm2); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.query = /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.computeStyle = /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    function (element, prop, defaultValue) {\n        return /** @type {?} */ ((/** @type {?} */ (window.getComputedStyle(element)))[prop]);\n    };\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.animate = /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var /** @type {?} */ fill = delay == 0 ? 'both' : 'forwards';\n        var /** @type {?} */ playerOptions = { duration: duration, delay: delay, fill: fill };\n        // we check for this to avoid having a null|undefined value be present\n        // for the easing (which results in an error for certain browsers #9752)\n        if (easing) {\n            playerOptions['easing'] = easing;\n        }\n        var /** @type {?} */ previousWebAnimationPlayers = /** @type {?} */ (previousPlayers.filter(function (player) { return player instanceof WebAnimationsPlayer; }));\n        return new WebAnimationsPlayer(element, keyframes, playerOptions, previousWebAnimationPlayers);\n    };\n    return WebAnimationsDriver;\n}());\n/**\n * @return {?}\n */\nfunction supportsWebAnimations() {\n    return typeof Element !== 'undefined' && typeof (/** @type {?} */ (Element)).prototype['animate'] === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationDriver, Animation as ɵAnimation, AnimationStyleNormalizer as ɵAnimationStyleNormalizer, NoopAnimationStyleNormalizer as ɵNoopAnimationStyleNormalizer, WebAnimationsStyleNormalizer as ɵWebAnimationsStyleNormalizer, NoopAnimationDriver as ɵNoopAnimationDriver, AnimationEngine as ɵAnimationEngine, WebAnimationsDriver as ɵWebAnimationsDriver, supportsWebAnimations as ɵsupportsWebAnimations, WebAnimationsPlayer as ɵWebAnimationsPlayer };\n//# sourceMappingURL=browser.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/animations/esm5/browser.js\n// module id = 647\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { PasswordService } from './service/password.service';\r\nimport { Contents } from './model/textContent';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: require('./app.component.html'),\r\n  styles: [\r\n    require('./style.css')\r\n  ]\r\n})\r\nexport class AppComponent {\r\n\r\n  textContent: Contents;\r\n  password: string;\r\n  watchPassword: boolean;\r\n  progress: any[];\r\n  lowerCase: boolean;\r\n  upperCase: boolean;\r\n  numeric: boolean;\r\n  symbols: boolean;\r\n  length: boolean;\r\n  passwordLength: number;\r\n  reviews: string[];\r\n  count: number;\r\n  review: string;\r\n\r\n  constructor(private passwordService: PasswordService) {\r\n\r\n    this.textContent = {\r\n      headerText: \"Password Strength Indicator/ Checker Tool\",\r\n      characterInfoText: \"Characters Entered : \",\r\n      conditionText1: \"Upper Case \",\r\n      conditionText2: \"Lower Case \",\r\n      conditionText3: \"Numbers \",\r\n      conditionText4: \"Symbols \",\r\n      statusText1: \"Weak\",\r\n      statusText2: \"Medium\",\r\n      statusText3: \"Strong\",\r\n      footerLeftBoxHeaderText: \"Review\",\r\n      footerRightBoxHeaderText: \"Requirements :\",\r\n      footerRightBoxInfoText1: \"Should contain at least 6 characters and maximum 24 characters is allowed.\",\r\n      footerRightBoxInfoText2: \"Should contain at least 3 features from the below points :\",\r\n      footerRightBoxInfoText3: \"Tips for a Strong Password for example: H3lloW0#ld\",\r\n      footerRightBoxConditionText1: \"1 Lowercase Character\",\r\n      footerRightBoxConditionText2: \"1 Uppercase Character\",\r\n      footerRightBoxConditionText3: \"1 Number\",\r\n      footerRightBoxConditionText4: \"1 Special Character like @#!\"\r\n    };\r\n\r\n\r\n    this.progress =[];\r\n    this.count = 0;\r\n    this.lowerCase = false;\r\n    this.upperCase = false;\r\n    this.numeric = false;\r\n    this.symbols = false;\r\n    this.length = false;\r\n    this.passwordLength = 0;\r\n    this.watchPassword = false;\r\n    \r\n    this.reviews = [\r\n      \"\",\r\n      \"Oh dear, using that password is like leaving your front door wide open. Your password is very weak because it contains a dictionary word.\",\r\n      \"Oh dear, using that password is like leaving your front door wide open. Your password is very weak because it contains a dictionary word.\",\r\n      \"Oh dear, using that password is like leaving your front door wide open. Your password is very weak because it contains a dictionary word.\",\r\n      \"Oops, using that password is like leaving your key in the lock. Your password is weak because it contains 2 dictionary words.\",\r\n      \"Oops, using that password is like leaving your key in the lock. Your password is weak because it contains 2 dictionary words.\",\r\n      \"Hmm, using that password is like locking your front door, but leaving the key under the mat. Your password is of medium strength because it contains 2 dictionary words and a combination of characters that are close together on the keyboard.\",\r\n      \"Hmm, using that password is like locking your front door, but leaving the key under the mat. Your password is of medium strength because it contains 2 dictionary words and a combination of characters that are close together on the keyboard.\",\r\n      \"Hmm, using that password is like locking your front door, but leaving the key under the mat. Your password is of medium strength because it contains 2 dictionary words and a combination of characters that are close together on the keyboard.\",\r\n      \"Good, using that password is like locking your front door and keeping the key in a safety deposit box.\",\r\n      \"Good, using that password is like locking your front door and keeping the key in a safety deposit box.\",\r\n      \"Fantastic, using that password makes you as secure as Fort Knox.\",\r\n      \"Fantastic, using that password makes you as secure as Fort Knox.\",\r\n    ];\r\n\r\n    this.review = this.reviews[this.count];\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    for (var i = 0; i < 12; i++) {\r\n      this.progress.push(false);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  passwordType() {\r\n\r\n    this.watchPassword = !this.watchPassword;\r\n\r\n    var x = <HTMLInputElement>document.getElementById(\"password\");\r\n    if (x.type === \"password\") {\r\n      x.type = \"text\";\r\n    } else {\r\n      x.type = \"password\";\r\n    }\r\n  }\r\n\r\n  // REST API Call to get response back from backend\r\n  makeAPICall() {\r\n\r\n    this.passwordService.makeAPICall(this.password).subscribe(response =>{\r\n\r\n      this.upperCase = response.upperCase;\r\n      this.lowerCase = response.lowerCase;\r\n      this.numeric = response.numeric;\r\n      this.symbols = response.symbols;\r\n      this.length = response.length;\r\n      this.progress = response.progress;\r\n      this.count = response.count;\r\n      this.passwordLength = response.passLength;\r\n\r\n\r\n      this.review = this.reviews[this.count];\r\n\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/app.component.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <h2>\\r\\n                {{ textContent.headerText }}\\r\\n            </h2> \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"input-group mb-3 password-text\\\">\\r\\n                <input [(ngModel)]=\\\"password\\\" maxlength=\\\"24\\\" id=\\\"password\\\" type=\\\"password\\\" (keyup)=\\\"makeAPICall()\\\" class=\\\"form-control\\\" aria-label=\\\"Password\\\" aria-describedby=\\\"basic-addon1\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" (click)=\\\"passwordType()\\\">\\r\\n                    <span *ngIf=\\\"!watchPassword\\\" class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\"><i class=\\\"fas fa-eye-slash\\\"></i></span>\\r\\n                    <span *ngIf=\\\"watchPassword\\\" class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\"><i class=\\\"fas fa-eye\\\"></i></span>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\r\\n                    <p *ngIf=\\\"!length\\\">\\r\\n                        {{ textContent.characterInfoText }}\\r\\n                        {{ passwordLength }}\\r\\n                    </p>\\r\\n                    <p class=\\\"checkers\\\" *ngIf=\\\"length\\\">\\r\\n                        {{ textContent.characterInfoText }}\\r\\n                        {{ passwordLength }}\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-2 col-sm-2 col-xs-2\\\">\\r\\n                    <p *ngIf=\\\"!upperCase\\\">\\r\\n                        {{ textContent.conditionText1 }}\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </p>\\r\\n                    <p class=\\\"checkers\\\" *ngIf=\\\"upperCase\\\">\\r\\n                        {{ textContent.conditionText1 }}\\r\\n                        <i class=\\\"fas fa-check\\\"></i>\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-2 col-sm-2 col-xs-2\\\">\\r\\n                    <p *ngIf=\\\"!lowerCase\\\">\\r\\n                        {{ textContent.conditionText2 }}\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </p>\\r\\n                    <p class=\\\"checkers\\\" *ngIf=\\\"lowerCase\\\">\\r\\n                        {{ textContent.conditionText2 }}\\r\\n                        <i class=\\\"fas fa-check\\\"></i>\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-2 col-sm-2 col-xs-2\\\">\\r\\n                    <p *ngIf=\\\"!numeric\\\">\\r\\n                        {{ textContent.conditionText3 }}\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </p>\\r\\n                    <p class=\\\"checkers\\\" *ngIf=\\\"numeric\\\">\\r\\n                        {{ textContent.conditionText3 }}\\r\\n                        <i class=\\\"fas fa-check\\\"></i>\\r\\n                    </p>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-2 col-md-2 col-sm-2 col-xs-2\\\">\\r\\n                    <p *ngIf=\\\"!symbols\\\">\\r\\n                        {{ textContent.conditionText4 }}\\r\\n                        <i class=\\\"fas fa-times\\\"></i>\\r\\n                    </p>\\r\\n                    <p class=\\\"checkers\\\" *ngIf=\\\"symbols\\\">\\r\\n                        {{ textContent.conditionText4 }}\\r\\n                        <i class=\\\"fas fa-check\\\"></i>\\r\\n                    </p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row progress\\\">\\r\\n                <div *ngIf=\\\"progress[0]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 red\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[0]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[1]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 red\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[1]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[2]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 red\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[2]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[3]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 red\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[3]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[4]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 yellow\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[4]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[5]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 yellow\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[5]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[6]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 yellow\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[6]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[7]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 yellow\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[7]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[8]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 green\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[8]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[9]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 green\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[9]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[10]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 green\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[10]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n\\r\\n                <div *ngIf=\\\"progress[11]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 green\\\"></div>\\r\\n                <div *ngIf=\\\"!progress[11]\\\" class=\\\"col-lg-1 col-md-1 col-sm-1 col-xs-1 default\\\"></div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row passStatus\\\">\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\r\\n                    <h4 id=\\\"red\\\" *ngIf=\\\"count>0 && count<=4\\\">\\r\\n                        {{ textContent.statusText1 }}\\r\\n                    </h4>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\r\\n                    <h4 id=\\\"yellow\\\" *ngIf=\\\"count>=5 && count<=8\\\">\\r\\n                        {{ textContent.statusText2 }}\\r\\n                    </h4>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-4\\\">\\r\\n                    <h4 id=\\\"green\\\" *ngIf=\\\"count>=9 && count<=12\\\">\\r\\n                        {{ textContent.statusText3 }}\\r\\n                    </h4>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"card-footer\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 review-left\\\">\\r\\n                    <h4>{{ textContent.footerLeftBoxHeaderText }}</h4>\\r\\n                    <p>{{ review }}</p>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 review-right\\\">\\r\\n                    <h4>\\r\\n                        {{ textContent.footerRightBoxHeaderText }}\\r\\n                    </h4>\\r\\n\\r\\n                    <ol>\\r\\n                        <li>\\r\\n                            {{ textContent.footerRightBoxInfoText1 }}\\r\\n                        </li>\\r\\n\\r\\n                        <li>\\r\\n                            {{ textContent.footerRightBoxInfoText2 }}\\r\\n                            <ul>\\r\\n                                <li>\\r\\n                                    {{ textContent.footerRightBoxConditionText1 }}\\r\\n                                </li>\\r\\n                                <li>\\r\\n                                    {{ textContent.footerRightBoxConditionText2 }}\\r\\n                                </li>\\r\\n                                <li>\\r\\n                                    {{ textContent.footerRightBoxConditionText3 }}\\r\\n                                </li>\\r\\n                                <li>\\r\\n                                    {{ textContent.footerRightBoxConditionText4 }}\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </li>\\r\\n                    </ol>\\r\\n\\r\\n                    <p id=\\\"example\\\">\\r\\n                        {{ textContent.footerRightBoxInfoText3 }}\\r\\n                    </p>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 649\n// module chunks = 1","module.exports = \".container {\\r\\n    margin-top: 1em;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n    text-align: center;\\r\\n    padding-top: 1em;\\r\\n    padding: 2em;\\r\\n}\\r\\n\\r\\n.heading {\\r\\n    text-align: center;\\r\\n    font-size: 6vh;\\r\\n}\\r\\n\\r\\n.page-content {\\r\\n    margin-top: 8vh;\\r\\n    font-size: 2vh;\\r\\n}\\r\\n\\r\\n.password-content-side {}\\r\\n\\r\\n.password-text {\\r\\n    height: 5vh;\\r\\n}\\r\\n\\r\\n.password-text input {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#example {\\r\\n    text-align: left;\\r\\n    margin-top: 3vh;\\r\\n    color: #6884b0;\\r\\n}\\r\\n\\r\\n.progress {\\r\\n    margin-top: 2em;\\r\\n    border-radius: 0px;\\r\\n    background: white;\\r\\n}\\r\\n\\r\\n.review {\\r\\n    width: 100%;\\r\\n    border: solid;\\r\\n    border-width: 0.5px;\\r\\n    margin-top: 4em;\\r\\n    height: 22vh;\\r\\n}\\r\\n\\r\\n.review-left {\\r\\n    border-right: solid 0.5px;\\r\\n    text-align: center;\\r\\n    padding-top: 1em;\\r\\n    padding: 2em;\\r\\n}\\r\\n\\r\\n.review-right {\\r\\n    text-align: center;\\r\\n    padding-top: 1em;\\r\\n    padding: 2em;\\r\\n}\\r\\n\\r\\n.review-right ol {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.red {\\r\\n    height: 2em;\\r\\n    background: red;\\r\\n    border: solid;\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.yellow {\\r\\n    height: 2em;\\r\\n    background: yellow;\\r\\n    border: solid;\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.green {\\r\\n    height: 2em;\\r\\n    background: green;\\r\\n    border: solid;\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.default {\\r\\n    height: 2em;\\r\\n    background: whitesmoke;\\r\\n    border: solid;\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.passStatus {\\r\\n    text-align: center;\\r\\n    margin-top: 1em;\\r\\n}\\r\\n\\r\\n.checkers {\\r\\n    color: green;\\r\\n}\\r\\n\\r\\n.passStatus #red {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.passStatus #yellow {\\r\\n    color: yellow;\\r\\n}\\r\\n\\r\\n.passStatus #green {\\r\\n    color: green;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/style.css\n// module id = 650\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { NgbAccordionModule } from './accordion/accordion.module';\nimport { NgbAlertModule } from './alert/alert.module';\nimport { NgbButtonsModule } from './buttons/buttons.module';\nimport { NgbCarouselModule } from './carousel/carousel.module';\nimport { NgbCollapseModule } from './collapse/collapse.module';\nimport { NgbDatepickerModule } from './datepicker/datepicker.module';\nimport { NgbDropdownModule } from './dropdown/dropdown.module';\nimport { NgbModalModule } from './modal/modal.module';\nimport { NgbPaginationModule } from './pagination/pagination.module';\nimport { NgbPopoverModule } from './popover/popover.module';\nimport { NgbProgressbarModule } from './progressbar/progressbar.module';\nimport { NgbRatingModule } from './rating/rating.module';\nimport { NgbTabsetModule } from './tabset/tabset.module';\nimport { NgbTimepickerModule } from './timepicker/timepicker.module';\nimport { NgbTooltipModule } from './tooltip/tooltip.module';\nimport { NgbTypeaheadModule } from './typeahead/typeahead.module';\nexport { NgbAccordionModule, NgbAccordionConfig, NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent } from './accordion/accordion.module';\nexport { NgbAlertModule, NgbAlertConfig, NgbAlert } from './alert/alert.module';\nexport { NgbButtonsModule, NgbCheckBox, NgbRadioGroup } from './buttons/buttons.module';\nexport { NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide } from './carousel/carousel.module';\nexport { NgbCollapseModule, NgbCollapse } from './collapse/collapse.module';\nexport { NgbCalendar, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbDatepickerModule, NgbDatepickerI18n, NgbDatepickerConfig, NgbDateParserFormatter, NgbDateAdapter, NgbDatepicker, NgbInputDatepicker } from './datepicker/datepicker.module';\nexport { NgbDropdownModule, NgbDropdownConfig, NgbDropdown } from './dropdown/dropdown.module';\nexport { NgbModalModule, NgbModal, NgbActiveModal, NgbModalRef, ModalDismissReasons } from './modal/modal.module';\nexport { NgbPaginationModule, NgbPaginationConfig, NgbPagination } from './pagination/pagination.module';\nexport { NgbPopoverModule, NgbPopoverConfig, NgbPopover } from './popover/popover.module';\nexport { NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar } from './progressbar/progressbar.module';\nexport { NgbRatingModule, NgbRatingConfig, NgbRating } from './rating/rating.module';\nexport { NgbTabsetModule, NgbTabsetConfig, NgbTabset, NgbTab, NgbTabContent, NgbTabTitle } from './tabset/tabset.module';\nexport { NgbTimepickerModule, NgbTimepickerConfig, NgbTimepicker } from './timepicker/timepicker.module';\nexport { NgbTooltipModule, NgbTooltipConfig, NgbTooltip } from './tooltip/tooltip.module';\nexport { NgbHighlight, NgbTypeaheadModule, NgbTypeaheadConfig, NgbTypeahead } from './typeahead/typeahead.module';\nvar NGB_MODULES = [\n    NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n    NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n    NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\n];\nvar NgbRootModule = (function () {\n    function NgbRootModule() {\n    }\n    NgbRootModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        NgbAlertModule.forRoot(), NgbButtonsModule.forRoot(), NgbCollapseModule.forRoot(), NgbProgressbarModule.forRoot(),\n                        NgbTooltipModule.forRoot(), NgbTypeaheadModule.forRoot(), NgbAccordionModule.forRoot(), NgbCarouselModule.forRoot(),\n                        NgbDatepickerModule.forRoot(), NgbDropdownModule.forRoot(), NgbModalModule.forRoot(), NgbPaginationModule.forRoot(),\n                        NgbPopoverModule.forRoot(), NgbProgressbarModule.forRoot(), NgbRatingModule.forRoot(), NgbTabsetModule.forRoot(),\n                        NgbTimepickerModule.forRoot(), NgbTooltipModule.forRoot()\n                    ],\n                    exports: NGB_MODULES\n                },] },\n    ];\n    /** @nocollapse */\n    NgbRootModule.ctorParameters = function () { return []; };\n    return NgbRootModule;\n}());\nexport { NgbRootModule };\nvar NgbModule = (function () {\n    function NgbModule() {\n    }\n    NgbModule.forRoot = function () { return { ngModule: NgbRootModule }; };\n    NgbModule.decorators = [\n        { type: NgModule, args: [{ imports: NGB_MODULES, exports: NGB_MODULES },] },\n    ];\n    /** @nocollapse */\n    NgbModule.ctorParameters = function () { return []; };\n    return NgbModule;\n}());\nexport { NgbModule };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/index.js\n// module id = 651\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { NgbDatepickerService } from './datepicker-service';\nimport { NgbCalendar } from './ngb-calendar';\nimport { toString } from '../util/util';\nvar Key;\n(function (Key) {\n    Key[Key[\"Enter\"] = 13] = \"Enter\";\n    Key[Key[\"Space\"] = 32] = \"Space\";\n    Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n    Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n    Key[Key[\"End\"] = 35] = \"End\";\n    Key[Key[\"Home\"] = 36] = \"Home\";\n    Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\nvar NgbDatepickerKeyMapService = (function () {\n    function NgbDatepickerKeyMapService(_service, _calendar) {\n        var _this = this;\n        this._service = _service;\n        this._calendar = _calendar;\n        _service.model$.subscribe(function (model) {\n            _this._minDate = model.minDate;\n            _this._maxDate = model.maxDate;\n            _this._firstViewDate = model.firstDate;\n            _this._lastViewDate = model.lastDate;\n        });\n    }\n    NgbDatepickerKeyMapService.prototype.processKey = function (event) {\n        if (Key[toString(event.which)]) {\n            switch (event.which) {\n                case Key.PageUp:\n                    this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n                    break;\n                case Key.PageDown:\n                    this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n                    break;\n                case Key.End:\n                    this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n                    break;\n                case Key.Home:\n                    this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n                    break;\n                case Key.ArrowLeft:\n                    this._service.focusMove('d', -1);\n                    break;\n                case Key.ArrowUp:\n                    this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n                    break;\n                case Key.ArrowRight:\n                    this._service.focusMove('d', 1);\n                    break;\n                case Key.ArrowDown:\n                    this._service.focusMove('d', this._calendar.getDaysPerWeek());\n                    break;\n                case Key.Enter:\n                case Key.Space:\n                    this._service.focusSelect();\n                    break;\n                default:\n                    return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    NgbDatepickerKeyMapService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDatepickerKeyMapService.ctorParameters = function () { return [\n        { type: NgbDatepickerService, },\n        { type: NgbCalendar, },\n    ]; };\n    return NgbDatepickerKeyMapService;\n}());\nexport { NgbDatepickerKeyMapService };\n//# sourceMappingURL=datepicker-keymap-service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.js\n// module id = 652\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { NgbCalendarIslamicCivil } from './ngb-calendar-islamic-civil';\nimport { NgbCalendarHijri } from './ngb-calendar-hijri';\nimport { NgbDate } from '../ngb-date';\nimport { Injectable } from '@angular/core';\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\nvar GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nvar GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nvar HIJRI_BEGIN = 1300;\nvar HIJRI_END = 1600;\nvar ONE_DAY = 1000 * 60 * 60 * 24;\nvar ISLAMIC_CIVIL = new NgbCalendarIslamicCivil();\nvar MONTH_LENGTH = [\n    '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n    '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n    '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n    '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n    '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n    '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n    '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n    '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n    '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n    '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n    '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n    '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n    '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n    '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n    '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n    '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n    '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n    '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n    '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n    '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n    '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n    '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n    '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n    '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n    '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n    '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n    '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n    '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n    '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n    '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n    '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n    '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n    '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n    '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n    '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n    '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n    '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n    '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n    '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n    '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n    '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n    '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n    '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n    '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n    '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n    '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n    '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n    '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n    '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n    '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n    '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n    '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n    '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n    '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n    '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n    '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n    '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n    '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n    '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n    '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n    '001010011101'\n];\nfunction getDaysDiff(date1, date2) {\n    var diff = Math.abs(date1.getTime() - date2.getTime());\n    return Math.round(diff / ONE_DAY);\n}\nvar NgbCalendarIslamicUmalqura = (function (_super) {\n    __extends(NgbCalendarIslamicUmalqura, _super);\n    function NgbCalendarIslamicUmalqura() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n    * `gdate` is s JS Date to be converted to Hijri.\n    */\n    /**\n      * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n      * `gdate` is s JS Date to be converted to Hijri.\n      */\n    NgbCalendarIslamicUmalqura.prototype.fromGregorian = /**\n      * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n      * `gdate` is s JS Date to be converted to Hijri.\n      */\n    function (gDate) {\n        var hDay = 1, hMonth = 0, hYear = 1300;\n        var daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n        if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n            var year = 1300;\n            for (var i = 0; i < MONTH_LENGTH.length; i++, year++) {\n                for (var j = 0; j < 12; j++) {\n                    var numOfDays = +MONTH_LENGTH[i][j] + 29;\n                    if (daysDiff <= numOfDays) {\n                        hDay = daysDiff + 1;\n                        if (hDay > numOfDays) {\n                            hDay = 1;\n                            j++;\n                        }\n                        if (j > 11) {\n                            j = 0;\n                            year++;\n                        }\n                        hMonth = j;\n                        hYear = year;\n                        return new NgbDate(hYear, hMonth + 1, hDay);\n                    }\n                    daysDiff = daysDiff - numOfDays;\n                }\n            }\n        }\n        else {\n            return ISLAMIC_CIVIL.fromGregorian(gDate);\n        }\n    };\n    /**\n    * Converts the current Hijri date to Gregorian.\n    */\n    /**\n      * Converts the current Hijri date to Gregorian.\n      */\n    NgbCalendarIslamicUmalqura.prototype.toGregorian = /**\n      * Converts the current Hijri date to Gregorian.\n      */\n    function (hijriDate) {\n        var hYear = hijriDate.year;\n        var hMonth = hijriDate.month - 1;\n        var hDay = hijriDate.day;\n        var gDate = new Date(GREGORIAN_FIRST_DATE);\n        var dayDiff = hDay - 1;\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            for (var y = 0; y < hYear - HIJRI_BEGIN; y++) {\n                for (var m = 0; m < 12; m++) {\n                    dayDiff += +MONTH_LENGTH[y][m] + 29;\n                }\n            }\n            for (var m = 0; m < hMonth; m++) {\n                dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n            }\n            gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n        }\n        else {\n            gDate = ISLAMIC_CIVIL.toGregorian(hijriDate);\n        }\n        return gDate;\n    };\n    /**\n    * Returns the number of days in a specific Hijri month.\n    * `month` is 1 for Muharram, 2 for Safar, etc.\n    * `year` is any Hijri year.\n    */\n    /**\n      * Returns the number of days in a specific Hijri month.\n      * `month` is 1 for Muharram, 2 for Safar, etc.\n      * `year` is any Hijri year.\n      */\n    NgbCalendarIslamicUmalqura.prototype.getDaysInIslamicMonth = /**\n      * Returns the number of days in a specific Hijri month.\n      * `month` is 1 for Muharram, 2 for Safar, etc.\n      * `year` is any Hijri year.\n      */\n    function (month, year) {\n        if (year >= HIJRI_BEGIN && year <= HIJRI_END) {\n            var pos = year - HIJRI_BEGIN;\n            return MONTH_LENGTH[pos].charAt(month - 1) === '1' ? 30 : 29;\n        }\n        return ISLAMIC_CIVIL.getDaysInIslamicMonth(month, year);\n    };\n    NgbCalendarIslamicUmalqura.prototype.getNext = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        date = NgbDate.from(date);\n        switch (period) {\n            case 'y':\n                date = this.setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this.setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this.setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    };\n    NgbCalendarIslamicUmalqura.prototype.getPrev = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    NgbCalendarIslamicUmalqura.prototype.getWeekday = function (date) {\n        var day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    NgbCalendarIslamicUmalqura.prototype.getWeekNumber = function (week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        var date = week[thursdayIndex];\n        var jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        var time = jsDate.getTime();\n        var MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n        return Math.floor(Math.round((time - MuhDate.getTime()) / ONE_DAY) / 7) + 1;\n    };\n    NgbCalendarIslamicUmalqura.prototype.getToday = function () { return this.fromGregorian(new Date()); };\n    NgbCalendarIslamicUmalqura.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbCalendarIslamicUmalqura.ctorParameters = function () { return []; };\n    return NgbCalendarIslamicUmalqura;\n}(NgbCalendarHijri));\nexport { NgbCalendarIslamicUmalqura };\n//# sourceMappingURL=ngb-calendar-islamic-umalqura.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.js\n// module id = 653\n// module chunks = 1","import { isNumber, toInteger } from '../util/util';\nvar NgbTime = (function () {\n    function NgbTime(hour, minute, second) {\n        this.hour = toInteger(hour);\n        this.minute = toInteger(minute);\n        this.second = toInteger(second);\n    }\n    NgbTime.prototype.changeHour = function (step) {\n        if (step === void 0) { step = 1; }\n        this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n    };\n    NgbTime.prototype.updateHour = function (hour) {\n        if (isNumber(hour)) {\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n        }\n        else {\n            this.hour = NaN;\n        }\n    };\n    NgbTime.prototype.changeMinute = function (step) {\n        if (step === void 0) { step = 1; }\n        this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n    };\n    NgbTime.prototype.updateMinute = function (minute) {\n        if (isNumber(minute)) {\n            this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n            this.changeHour(Math.floor(minute / 60));\n        }\n        else {\n            this.minute = NaN;\n        }\n    };\n    NgbTime.prototype.changeSecond = function (step) {\n        if (step === void 0) { step = 1; }\n        this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n    };\n    NgbTime.prototype.updateSecond = function (second) {\n        if (isNumber(second)) {\n            this.second = second < 0 ? 60 + second % 60 : second % 60;\n            this.changeMinute(Math.floor(second / 60));\n        }\n        else {\n            this.second = NaN;\n        }\n    };\n    NgbTime.prototype.isValid = function (checkSecs) {\n        if (checkSecs === void 0) { checkSecs = true; }\n        return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    };\n    NgbTime.prototype.toString = function () { return (this.hour || 0) + \":\" + (this.minute || 0) + \":\" + (this.second || 0); };\n    return NgbTime;\n}());\nexport { NgbTime };\n//# sourceMappingURL=ngb-time.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.js\n// module id = 654\n// module chunks = 1","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  \r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/environments/environment.ts","import { Directive } from '@angular/core';\nvar NgbButtonLabel = (function () {\n    function NgbButtonLabel() {\n    }\n    NgbButtonLabel.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbButtonLabel]',\n                    host: { '[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbButtonLabel.ctorParameters = function () { return []; };\n    return NgbButtonLabel;\n}());\nexport { NgbButtonLabel };\n//# sourceMappingURL=label.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/buttons/label.js\n// module id = 73\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\n/**\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\n * NgbDateStruct model.\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n */\nvar NgbDateAdapter = (function () {\n    function NgbDateAdapter() {\n    }\n    NgbDateAdapter.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDateAdapter.ctorParameters = function () { return []; };\n    return NgbDateAdapter;\n}());\nexport { NgbDateAdapter };\nvar NgbDateStructAdapter = (function (_super) {\n    __extends(NgbDateStructAdapter, _super);\n    function NgbDateStructAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param  {NgbDateStruct} value\n     * @return {NgbDateStruct}\n     */\n    /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    NgbDateStructAdapter.prototype.fromModel = /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    function (date) {\n        return (date && date.year && date.month && date.day) ? { year: date.year, month: date.month, day: date.day } : null;\n    };\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param  {NgbDateStruct} value\n     * @return {NgbDateStruct}\n     */\n    /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    NgbDateStructAdapter.prototype.toModel = /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    function (date) {\n        return (date && date.year && date.month && date.day) ? { year: date.year, month: date.month, day: date.day } : null;\n    };\n    NgbDateStructAdapter.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDateStructAdapter.ctorParameters = function () { return []; };\n    return NgbDateStructAdapter;\n}(NgbDateAdapter));\nexport { NgbDateStructAdapter };\n//# sourceMappingURL=ngb-date-adapter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-adapter.js\n// module id = 74\n// module chunks = 1","import { TemplateRef } from '@angular/core';\nvar ContentRef = (function () {\n    function ContentRef(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n    return ContentRef;\n}());\nexport { ContentRef };\nvar PopupService = (function () {\n    function PopupService(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver) {\n        this._type = _type;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n    }\n    PopupService.prototype.open = function (content, context) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, context);\n            this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), 0, this._injector, this._contentRef.nodes);\n        }\n        return this._windowRef;\n    };\n    PopupService.prototype.close = function () {\n        if (this._windowRef) {\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n            this._windowRef = null;\n            if (this._contentRef.viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n                this._contentRef = null;\n            }\n        }\n    };\n    PopupService.prototype._getContentRef = function (content, context) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            var viewRef = this._viewContainerRef.createEmbeddedView(content, context);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._renderer.createText(\"\" + content)]]);\n        }\n    };\n    return PopupService;\n}());\nexport { PopupService };\n//# sourceMappingURL=popup.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ng-bootstrap/ng-bootstrap/util/popup.js\n// module id = 75\n// module chunks = 1"],"sourceRoot":""}